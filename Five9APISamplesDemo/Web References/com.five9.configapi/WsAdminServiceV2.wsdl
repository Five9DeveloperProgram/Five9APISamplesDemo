<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://service.admin.ws.five9.com/v2/" xmlns:jaxws="http://java.sun.com/xml/ns/jaxws" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://jaxb.dev.java.net/array" name="WsAdminServiceV2" targetNamespace="http://service.admin.ws.five9.com/v2/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema targetNamespace="http://jaxb.dev.java.net/array" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="stringArray" final="#all">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="item" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema xmlns:swaRef="http://ws-i.org/profiles/basic/1.1/xsd" targetNamespace="http://service.admin.ws.five9.com/v2/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://jaxb.dev.java.net/array" />
      <xs:import schemaLocation="http://ws-i.org/profiles/basic/1.1/swaref.xsd" namespace="http://ws-i.org/profiles/basic/1.1/xsd" />
      <xs:element name="AccessDisallowedFault" type="tns:AccessDisallowedException" />
      <xs:element name="AdminSessionClosedFault" type="tns:AdminSessionClosedException" />
      <xs:element name="AllowedOnlyForPreviewCampaignFault" type="tns:WrongDialingModeException" />
      <xs:element name="CampaignAlreadyExistsFault" type="tns:CampaignAlreadyExistsException" />
      <xs:element name="CampaignNotFoundFault" type="tns:CampaignNotFoundException" />
      <xs:element name="CampaignStateUpdateFault" type="tns:CampaignStateUpdateException" />
      <xs:element name="CantModifyObjectFault" type="tns:CantModifyObjectException" />
      <xs:element name="ConcurrentModificationFault" type="tns:ConcurrentModificationException" />
      <xs:element name="CrmFieldNotFoundFault" type="tns:CrmFieldNotFoundException" />
      <xs:element name="DNISAlreadyAssignedFault" type="tns:DNISAlreadyAssignedException" />
      <xs:element name="DNISIsNotAssignedFault" type="tns:DNISIsNotAssignedException" />
      <xs:element name="DNISNotFoundFault" type="tns:DNISNotFoundException" />
      <xs:element name="DialProfileNotFoundFault" type="tns:DialProfileNotFoundException" />
      <xs:element name="DispositionAlreadyExistsFault" type="tns:DispositionAlreadyExistsException" />
      <xs:element name="DispositionIsAlreadyAssignedFault" type="tns:DispositionAlreadyAssignedException" />
      <xs:element name="DispositionIsNotAssisgnedFault" type="tns:DispositionIsNotAssignedException" />
      <xs:element name="DispositionNotAllowedFault" type="tns:DispositionNotAllowedException" />
      <xs:element name="DispositionNotFoundFault" type="tns:DispositionNotFoundException" />
      <xs:element name="ExecutionRestrictionFault" type="tns:ExecutionRestrictionException" />
      <xs:element name="ExtensionAlreadyInUseFault" type="tns:ExtensionAlreadyInUseException" />
      <xs:element name="FinderException" type="tns:FinderException" />
      <xs:element name="ImportCancelledFault" type="tns:ImportCancelledException" />
      <xs:element name="ImportInProgressFault" type="tns:ImportInProgressException" />
      <xs:element name="ImportSizeLimitExceededFault" type="tns:ImportRecordsCountLimitExceededException" />
      <xs:element name="IncorrectArgumentFault" type="tns:IncorrectArgumentException" />
      <xs:element name="InternalImportFault" type="tns:InternalImportException" />
      <xs:element name="InvalidAccountFault" type="tns:InvalidAccountException" />
      <xs:element name="InvalidDateRangeFault" type="tns:InvalidDateRangeException" />
      <xs:element name="InvalidImportDataFault" type="tns:InvalidImportDataException" />
      <xs:element name="InvalidRegexpPatternFault" type="tns:InvalidRegexpPatternException" />
      <xs:element name="InvalidUserDataFault" type="tns:InvalidUserDataException" />
      <xs:element name="IvrScriptNotFoundFault" type="tns:IvrScriptNotFoundException" />
      <xs:element name="ListAlreadyAssignedFault" type="tns:ListAlreadyAssignedException" />
      <xs:element name="ListAlreadyExistsFault" type="tns:ListAlreadyExistsException" />
      <xs:element name="ListCantBeRemovedFault" type="tns:ListCantBeRemovedException" />
      <xs:element name="ListIsNotAssignedFault" type="tns:ListIsNotAssignedException" />
      <xs:element name="ListNotFoundFault" type="tns:ListNotFoundException" />
      <xs:element name="LogoutReasonCodeNotFoundFault" type="tns:LogoutReasonCodeNotFoundException" />
      <xs:element name="MissedArgumentFault" type="tns:MissedArgumentException" />
      <xs:element name="MissedOsLoginFault" type="tns:MissedOsLoginException" />
      <xs:element name="NICELicencesExceededFault" type="tns:NICELicencesExceededException" />
      <xs:element name="NotReadyReasonCodeNotFoundFault" type="tns:NotReadyReasonCodeNotFoundException" />
      <xs:element name="ObjectAlreadyExistsFault" type="tns:ObjectAlreadyExistsException" />
      <xs:element name="ObjectInUseFault" type="tns:ObjectInUseException" />
      <xs:element name="ObjectNotFoundFault" type="tns:ObjectNotFoundException" />
      <xs:element name="ObjectsCountLimitExceededFault" type="tns:ObjectsCountLimitExceededException" />
      <xs:element name="OperationsLimitExceededFault" type="tns:OperationsLimitExceededException" />
      <xs:element name="ParseException" type="tns:ParseException" />
      <xs:element name="PromptAlreadyExistsFault" type="tns:PromptAlreadyExistsException" />
      <xs:element name="PromptCantBeDeletedFault" type="tns:PromptCantBeDeletedException" />
      <xs:element name="PromptNotFoundFault" type="tns:PromptNotFoundException" />
      <xs:element name="ReasonCodeCountLimitExceededFault" type="tns:ReasonCodeCountLimitExceededException" />
      <xs:element name="ReasonCodeNotFoundFault" type="tns:ReasonCodeNotFoundException" />
      <xs:element name="ReportNotFoundFault" type="tns:ReportNotFoundException" />
      <xs:element name="ResultIsNotReadyFault" type="tns:ResultIsNotReadyException" />
      <xs:element name="ScheduleNotFoundFault" type="tns:ScheduleNotFoundException" />
      <xs:element name="ScheduleOperationFailedFault" type="tns:ScheduleOperationFailedException" />
      <xs:element name="ServerFault" type="tns:ServerException" />
      <xs:element name="ServiceUnavailableFault" type="tns:ServiceUnavailableException" />
      <xs:element name="SessionClosedFault" type="tns:SessionClosedException" />
      <xs:element name="SkillAlreadyAssignedFault" type="tns:SkillAlreadyAssignedException" />
      <xs:element name="SkillAlreadyExistsFault" type="tns:SkillAlreadyExistsException" />
      <xs:element name="SkillCantBeDeletedFault" type="tns:SkillCantBeDeletedException" />
      <xs:element name="SkillIsNotAssignedFault" type="tns:SkillIsNotAssignedException" />
      <xs:element name="SkillNotFoundFault" type="tns:SkillNotFoundException" />
      <xs:element name="TooManyExtensionsFault" type="tns:TooManyExtensionsException" />
      <xs:element name="TooManyItemsFault" type="tns:TooManyItemsException" />
      <xs:element name="TooManyUsersFault" type="tns:TooManyUsersException" />
      <xs:element name="TtsGenerationFailed" type="tns:TtsGenerationFailedException" />
      <xs:element name="UnknownIdentifierFault" type="tns:UnknownIdentifierException" />
      <xs:element name="UserAlreadyExistsFault" type="tns:UserAlreadyExistsException" />
      <xs:element name="UserAlreadyHasSkillFault" type="tns:UserAlreadyHasSkillException" />
      <xs:element name="UserAlreadyLoggedInFault" type="tns:UserAlreadyLoggedInException" />
      <xs:element name="UserCantBeDeletedFault" type="tns:UserCantBeDeletedException" />
      <xs:element name="UserDoesntHaveSkillFault" type="tns:UserDoesntHaveSkillException" />
      <xs:element name="UserHasNoRequiredRoleFault" type="tns:UserHasNoRequiredRolesException" />
      <xs:element name="UserNotFoundFault" type="tns:UserNotFoundException" />
      <xs:element name="WavFileUploadFailedFault" type="tns:WavFileUploadFailedException" />
      <xs:element name="WrongCampaignStateFault" type="tns:WrongCampaignStateException" />
      <xs:element name="WrongCampaignTypeFault" type="tns:WrongCampaignTypeException" />
      <xs:element name="WrongPromptTypeFault" type="tns:WrongPromptTypeException" />
      <xs:element name="addDNISToCampaign" type="tns:addDNISToCampaign" />
      <xs:element name="addDNISToCampaignResponse" type="tns:addDNISToCampaignResponse" />
      <xs:element name="addDispositionsToCampaign" type="tns:addDispositionsToCampaign" />
      <xs:element name="addDispositionsToCampaignResponse" type="tns:addDispositionsToCampaignResponse" />
      <xs:element name="addListsToCampaign" type="tns:addListsToCampaign" />
      <xs:element name="addListsToCampaignResponse" type="tns:addListsToCampaignResponse" />
      <xs:element name="addNumbersToDnc" type="tns:addNumbersToDnc" />
      <xs:element name="addNumbersToDncResponse" type="tns:addNumbersToDncResponse" />
      <xs:element name="addPromptTTS" type="tns:addPromptTTS" />
      <xs:element name="addPromptTTSResponse" type="tns:addPromptTTSResponse" />
      <xs:element name="addPromptWav" type="tns:addPromptWav" />
      <xs:element name="addPromptWavInline" type="tns:addPromptWavInline" />
      <xs:element name="addPromptWavInlineResponse" type="tns:addPromptWavInlineResponse" />
      <xs:element name="addPromptWavResponse" type="tns:addPromptWavResponse" />
      <xs:element name="addRecordToList" type="tns:addRecordToList" />
      <xs:element name="addRecordToListResponse" type="tns:addRecordToListResponse" />
      <xs:element name="addSkillsToCampaign" type="tns:addSkillsToCampaign" />
      <xs:element name="addSkillsToCampaignResponse" type="tns:addSkillsToCampaignResponse" />
      <xs:element name="addToList" type="tns:addToList" />
      <xs:element name="addToListCsv" type="tns:addToListCsv" />
      <xs:element name="addToListCsvResponse" type="tns:addToListCsvResponse" />
      <xs:element name="addToListFtp" type="tns:addToListFtp" />
      <xs:element name="addToListFtpResponse" type="tns:addToListFtpResponse" />
      <xs:element name="addToListResponse" type="tns:addToListResponse" />
      <xs:element name="asyncAddRecordsToList" type="tns:asyncAddRecordsToList" />
      <xs:element name="asyncAddRecordsToListResponse" type="tns:asyncAddRecordsToListResponse" />
      <xs:element name="asyncDeleteRecordsFromList" type="tns:asyncDeleteRecordsFromList" />
      <xs:element name="asyncDeleteRecordsFromListResponse" type="tns:asyncDeleteRecordsFromListResponse" />
      <xs:element name="asyncUpdateCrmRecords" type="tns:asyncUpdateCrmRecords" />
      <xs:element name="asyncUpdateCrmRecordsResponse" type="tns:asyncUpdateCrmRecordsResponse" />
      <xs:element name="checkDncForNumbers" type="tns:checkDncForNumbers" />
      <xs:element name="checkDncForNumbersResponse" type="tns:checkDncForNumbersResponse" />
      <xs:element name="closeSession" type="tns:closeSession" />
      <xs:element name="closeSessionResponse" type="tns:closeSessionResponse" />
      <xs:element name="contactsLookupResult" type="tns:contactsLookupResult" />
      <xs:element name="createAgentGroup" type="tns:createAgentGroup" />
      <xs:element name="createAgentGroupResponse" type="tns:createAgentGroupResponse" />
      <xs:element name="createAutodialCampaign" type="tns:createAutodialCampaign" />
      <xs:element name="createAutodialCampaignResponse" type="tns:createAutodialCampaignResponse" />
      <xs:element name="createCallVariable" type="tns:createCallVariable" />
      <xs:element name="createCallVariableResponse" type="tns:createCallVariableResponse" />
      <xs:element name="createCallVariablesGroup" type="tns:createCallVariablesGroup" />
      <xs:element name="createCallVariablesGroupResponse" type="tns:createCallVariablesGroupResponse" />
      <xs:element name="createCampaignProfile" type="tns:createCampaignProfile" />
      <xs:element name="createCampaignProfileResponse" type="tns:createCampaignProfileResponse" />
      <xs:element name="createContactField" type="tns:createContactField" />
      <xs:element name="createContactFieldResponse" type="tns:createContactFieldResponse" />
      <xs:element name="createDisposition" type="tns:createDisposition" />
      <xs:element name="createDispositionResponse" type="tns:createDispositionResponse" />
      <xs:element name="createIVRScript" type="tns:createIVRScript" />
      <xs:element name="createIVRScriptResponse" type="tns:createIVRScriptResponse" />
      <xs:element name="createInboundCampaign" type="tns:createInboundCampaign" />
      <xs:element name="createInboundCampaignResponse" type="tns:createInboundCampaignResponse" />
      <xs:element name="createList" type="tns:createList" />
      <xs:element name="createListResponse" type="tns:createListResponse" />
      <xs:element name="createOutboundCampaign" type="tns:createOutboundCampaign" />
      <xs:element name="createOutboundCampaignResponse" type="tns:createOutboundCampaignResponse" />
      <xs:element name="createReasonCode" type="tns:createReasonCode" />
      <xs:element name="createReasonCodeResponse" type="tns:createReasonCodeResponse" />
      <xs:element name="createSkill" type="tns:createSkill" />
      <xs:element name="createSkillResponse" type="tns:createSkillResponse" />
      <xs:element name="createUser" type="tns:createUser" />
      <xs:element name="createUserProfile" type="tns:createUserProfile" />
      <xs:element name="createUserProfileResponse" type="tns:createUserProfileResponse" />
      <xs:element name="createUserResponse" type="tns:createUserResponse" />
      <xs:element name="createWebConnector" type="tns:createWebConnector" />
      <xs:element name="createWebConnectorResponse" type="tns:createWebConnectorResponse" />
      <xs:element name="deleteAgentGroup" type="tns:deleteAgentGroup" />
      <xs:element name="deleteAgentGroupResponse" type="tns:deleteAgentGroupResponse" />
      <xs:element name="deleteAllFromList" type="tns:deleteAllFromList" />
      <xs:element name="deleteAllFromListResponse" type="tns:deleteAllFromListResponse" />
      <xs:element name="deleteCallVariable" type="tns:deleteCallVariable" />
      <xs:element name="deleteCallVariableResponse" type="tns:deleteCallVariableResponse" />
      <xs:element name="deleteCallVariablesGroup" type="tns:deleteCallVariablesGroup" />
      <xs:element name="deleteCallVariablesGroupResponse" type="tns:deleteCallVariablesGroupResponse" />
      <xs:element name="deleteCampaign" type="tns:deleteCampaign" />
      <xs:element name="deleteCampaignProfile" type="tns:deleteCampaignProfile" />
      <xs:element name="deleteCampaignProfileResponse" type="tns:deleteCampaignProfileResponse" />
      <xs:element name="deleteCampaignResponse" type="tns:deleteCampaignResponse" />
      <xs:element name="deleteContactField" type="tns:deleteContactField" />
      <xs:element name="deleteContactFieldResponse" type="tns:deleteContactFieldResponse" />
      <xs:element name="deleteFromContacts" type="tns:deleteFromContacts" />
      <xs:element name="deleteFromContactsCsv" type="tns:deleteFromContactsCsv" />
      <xs:element name="deleteFromContactsCsvResponse" type="tns:deleteFromContactsCsvResponse" />
      <xs:element name="deleteFromContactsFtp" type="tns:deleteFromContactsFtp" />
      <xs:element name="deleteFromContactsFtpResponse" type="tns:deleteFromContactsFtpResponse" />
      <xs:element name="deleteFromContactsResponse" type="tns:deleteFromContactsResponse" />
      <xs:element name="deleteFromList" type="tns:deleteFromList" />
      <xs:element name="deleteFromListCsv" type="tns:deleteFromListCsv" />
      <xs:element name="deleteFromListCsvResponse" type="tns:deleteFromListCsvResponse" />
      <xs:element name="deleteFromListFtp" type="tns:deleteFromListFtp" />
      <xs:element name="deleteFromListFtpResponse" type="tns:deleteFromListFtpResponse" />
      <xs:element name="deleteFromListResponse" type="tns:deleteFromListResponse" />
      <xs:element name="deleteIVRScript" type="tns:deleteIVRScript" />
      <xs:element name="deleteIVRScriptResponse" type="tns:deleteIVRScriptResponse" />
      <xs:element name="deleteList" type="tns:deleteList" />
      <xs:element name="deleteListResponse" type="tns:deleteListResponse" />
      <xs:element name="deletePrompt" type="tns:deletePrompt" />
      <xs:element name="deletePromptResponse" type="tns:deletePromptResponse" />
      <xs:element name="deleteReasonCode" type="tns:deleteReasonCode" />
      <xs:element name="deleteReasonCodeByType" type="tns:deleteReasonCodeByType" />
      <xs:element name="deleteReasonCodeByTypeResponse" type="tns:deleteReasonCodeByTypeResponse" />
      <xs:element name="deleteReasonCodeResponse" type="tns:deleteReasonCodeResponse" />
      <xs:element name="deleteRecordFromList" type="tns:deleteRecordFromList" />
      <xs:element name="deleteRecordFromListResponse" type="tns:deleteRecordFromListResponse" />
      <xs:element name="deleteSkill" type="tns:deleteSkill" />
      <xs:element name="deleteSkillResponse" type="tns:deleteSkillResponse" />
      <xs:element name="deleteUser" type="tns:deleteUser" />
      <xs:element name="deleteUserProfile" type="tns:deleteUserProfile" />
      <xs:element name="deleteUserProfileResponse" type="tns:deleteUserProfileResponse" />
      <xs:element name="deleteUserResponse" type="tns:deleteUserResponse" />
      <xs:element name="deleteWebConnector" type="tns:deleteWebConnector" />
      <xs:element name="deleteWebConnectorResponse" type="tns:deleteWebConnectorResponse" />
      <xs:element name="forceStopCampaign" type="tns:forceStopCampaign" />
      <xs:element name="forceStopCampaignResponse" type="tns:forceStopCampaignResponse" />
      <xs:element name="getAgentAuditReport" type="tns:getAgentAuditReport" />
      <xs:element name="getAgentAuditReportCsv" type="tns:getAgentAuditReportCsv" />
      <xs:element name="getAgentAuditReportCsvResponse" type="tns:getAgentAuditReportCsvResponse" />
      <xs:element name="getAgentAuditReportResponse" type="tns:getAgentAuditReportResponse" />
      <xs:element name="getAgentGroup" type="tns:getAgentGroup" />
      <xs:element name="getAgentGroupResponse" type="tns:getAgentGroupResponse" />
      <xs:element name="getAgentGroups" type="tns:getAgentGroups" />
      <xs:element name="getAgentGroupsResponse" type="tns:getAgentGroupsResponse" />
      <xs:element name="getAutodialCampaign" type="tns:getAutodialCampaign" />
      <xs:element name="getAutodialCampaignResponse" type="tns:getAutodialCampaignResponse" />
      <xs:element name="getCallCountersState" type="tns:getCallCountersState" />
      <xs:element name="getCallCountersStateResponse" type="tns:getCallCountersStateResponse" />
      <xs:element name="getCallLogReport" type="tns:getCallLogReport" />
      <xs:element name="getCallLogReportCsv" type="tns:getCallLogReportCsv" />
      <xs:element name="getCallLogReportCsvResponse" type="tns:getCallLogReportCsvResponse" />
      <xs:element name="getCallLogReportResponse" type="tns:getCallLogReportResponse" />
      <xs:element name="getCallVariableGroups" type="tns:getCallVariableGroups" />
      <xs:element name="getCallVariableGroupsResponse" type="tns:getCallVariableGroupsResponse" />
      <xs:element name="getCallVariables" type="tns:getCallVariables" />
      <xs:element name="getCallVariablesResponse" type="tns:getCallVariablesResponse" />
      <xs:element name="getCampaignDNISList" type="tns:getCampaignDNISList" />
      <xs:element name="getCampaignDNISListResponse" type="tns:getCampaignDNISListResponse" />
      <xs:element name="getCampaignProfileDispositions" type="tns:getCampaignProfileDispositions" />
      <xs:element name="getCampaignProfileDispositionsResponse" type="tns:getCampaignProfileDispositionsResponse" />
      <xs:element name="getCampaignProfileFilter" type="tns:getCampaignProfileFilter" />
      <xs:element name="getCampaignProfileFilterResponse" type="tns:getCampaignProfileFilterResponse" />
      <xs:element name="getCampaignProfiles" type="tns:getCampaignProfiles" />
      <xs:element name="getCampaignProfilesResponse" type="tns:getCampaignProfilesResponse" />
      <xs:element name="getCampaignState" type="tns:getCampaignState" />
      <xs:element name="getCampaignStateResponse" type="tns:getCampaignStateResponse" />
      <xs:element name="getCampaigns" type="tns:getCampaigns" />
      <xs:element name="getCampaignsResponse" type="tns:getCampaignsResponse" />
      <xs:element name="getContactFields" type="tns:getContactFields" />
      <xs:element name="getContactFieldsResponse" type="tns:getContactFieldsResponse" />
      <xs:element name="getContactRecords" type="tns:getContactRecords" />
      <xs:element name="getContactRecordsResponse" type="tns:getContactRecordsResponse" />
      <xs:element name="getCrmImportResult" type="tns:getCrmImportResult" />
      <xs:element name="getCrmImportResultResponse" type="tns:getCrmImportResultResponse" />
      <xs:element name="getDNISList" type="tns:getDNISList" />
      <xs:element name="getDNISListResponse" type="tns:getDNISListResponse" />
      <xs:element name="getDialingRules" type="tns:getDialingRules" />
      <xs:element name="getDialingRulesResponse" type="tns:getDialingRulesResponse" />
      <xs:element name="getDisposition" type="tns:getDisposition" />
      <xs:element name="getDispositionResponse" type="tns:getDispositionResponse" />
      <xs:element name="getDispositions" type="tns:getDispositions" />
      <xs:element name="getDispositionsImportResult" type="tns:getDispositionsImportResult" />
      <xs:element name="getDispositionsImportResultResponse" type="tns:getDispositionsImportResultResponse" />
      <xs:element name="getDispositionsResponse" type="tns:getDispositionsResponse" />
      <xs:element name="getIVRScripts" type="tns:getIVRScripts" />
      <xs:element name="getIVRScriptsResponse" type="tns:getIVRScriptsResponse" />
      <xs:element name="getInboundCampaign" type="tns:getInboundCampaign" />
      <xs:element name="getInboundCampaignResponse" type="tns:getInboundCampaignResponse" />
      <xs:element name="getListImportResult" type="tns:getListImportResult" />
      <xs:element name="getListImportResultResponse" type="tns:getListImportResultResponse" />
      <xs:element name="getListsForCampaign" type="tns:getListsForCampaign" />
      <xs:element name="getListsForCampaignResponse" type="tns:getListsForCampaignResponse" />
      <xs:element name="getListsInfo" type="tns:getListsInfo" />
      <xs:element name="getListsInfoResponse" type="tns:getListsInfoResponse" />
      <xs:element name="getOutboundCampaign" type="tns:getOutboundCampaign" />
      <xs:element name="getOutboundCampaignResponse" type="tns:getOutboundCampaignResponse" />
      <xs:element name="getPrompt" type="tns:getPrompt" />
      <xs:element name="getPromptResponse" type="tns:getPromptResponse" />
      <xs:element name="getReasonCode" type="tns:getReasonCode" />
      <xs:element name="getReasonCodeByType" type="tns:getReasonCodeByType" />
      <xs:element name="getReasonCodeByTypeResponse" type="tns:getReasonCodeByTypeResponse" />
      <xs:element name="getReasonCodeResponse" type="tns:getReasonCodeResponse" />
      <xs:element name="getReportResult" type="tns:getReportResult" />
      <xs:element name="getReportResultCsv" type="tns:getReportResultCsv" />
      <xs:element name="getReportResultCsvResponse" type="tns:getReportResultCsvResponse" />
      <xs:element name="getReportResultResponse" type="tns:getReportResultResponse" />
      <xs:element name="getSkill" type="tns:getSkill" />
      <xs:element name="getSkillInfo" type="tns:getSkillInfo" />
      <xs:element name="getSkillInfoResponse" type="tns:getSkillInfoResponse" />
      <xs:element name="getSkillResponse" type="tns:getSkillResponse" />
      <xs:element name="getSkillVoicemailGreeting" type="tns:getSkillVoicemailGreeting" />
      <xs:element name="getSkillVoicemailGreetingResponse" type="tns:getSkillVoicemailGreetingResponse" />
      <xs:element name="getSkills" type="tns:getSkills" />
      <xs:element name="getSkillsInfo" type="tns:getSkillsInfo" />
      <xs:element name="getSkillsInfoResponse" type="tns:getSkillsInfoResponse" />
      <xs:element name="getSkillsResponse" type="tns:getSkillsResponse" />
      <xs:element name="getUserGeneralInfo" type="tns:getUserGeneralInfo" />
      <xs:element name="getUserGeneralInfoResponse" type="tns:getUserGeneralInfoResponse" />
      <xs:element name="getUserInfo" type="tns:getUserInfo" />
      <xs:element name="getUserInfoResponse" type="tns:getUserInfoResponse" />
      <xs:element name="getUserProfile" type="tns:getUserProfile" />
      <xs:element name="getUserProfileResponse" type="tns:getUserProfileResponse" />
      <xs:element name="getUserProfiles" type="tns:getUserProfiles" />
      <xs:element name="getUserProfilesResponse" type="tns:getUserProfilesResponse" />
      <xs:element name="getUserVoicemailGreeting" type="tns:getUserVoicemailGreeting" />
      <xs:element name="getUserVoicemailGreetingResponse" type="tns:getUserVoicemailGreetingResponse" />
      <xs:element name="getUsersGeneralInfo" type="tns:getUsersGeneralInfo" />
      <xs:element name="getUsersGeneralInfoResponse" type="tns:getUsersGeneralInfoResponse" />
      <xs:element name="getUsersInfo" type="tns:getUsersInfo" />
      <xs:element name="getUsersInfoResponse" type="tns:getUsersInfoResponse" />
      <xs:element name="getVCCConfiguration" type="tns:getVCCConfiguration" />
      <xs:element name="getVCCConfigurationResponse" type="tns:getVCCConfigurationResponse" />
      <xs:element name="getWebConnectors" type="tns:getWebConnectors" />
      <xs:element name="getWebConnectorsResponse" type="tns:getWebConnectorsResponse" />
      <xs:element name="isImportRunning" type="tns:isImportRunning" />
      <xs:element name="isImportRunningResponse" type="tns:isImportRunningResponse" />
      <xs:element name="isReportRunning" type="tns:isReportRunning" />
      <xs:element name="isReportRunningResponse" type="tns:isReportRunningResponse" />
      <xs:element name="modifyAgentGroup" type="tns:modifyAgentGroup" />
      <xs:element name="modifyAgentGroupResponse" type="tns:modifyAgentGroupResponse" />
      <xs:element name="modifyAutodialCampaign" type="tns:modifyAutodialCampaign" />
      <xs:element name="modifyAutodialCampaignResponse" type="tns:modifyAutodialCampaignResponse" />
      <xs:element name="modifyCallVariable" type="tns:modifyCallVariable" />
      <xs:element name="modifyCallVariableResponse" type="tns:modifyCallVariableResponse" />
      <xs:element name="modifyCallVariablesGroup" type="tns:modifyCallVariablesGroup" />
      <xs:element name="modifyCallVariablesGroupResponse" type="tns:modifyCallVariablesGroupResponse" />
      <xs:element name="modifyCampaignLists" type="tns:modifyCampaignLists" />
      <xs:element name="modifyCampaignListsResponse" type="tns:modifyCampaignListsResponse" />
      <xs:element name="modifyCampaignProfile" type="tns:modifyCampaignProfile" />
      <xs:element name="modifyCampaignProfileCrmCriteria" type="tns:modifyCampaignProfileCrmCriteria" />
      <xs:element name="modifyCampaignProfileCrmCriteriaResponse" type="tns:modifyCampaignProfileCrmCriteriaResponse" />
      <xs:element name="modifyCampaignProfileDispositions" type="tns:modifyCampaignProfileDispositions" />
      <xs:element name="modifyCampaignProfileDispositionsResponse" type="tns:modifyCampaignProfileDispositionsResponse" />
      <xs:element name="modifyCampaignProfileFilterOrder" type="tns:modifyCampaignProfileFilterOrder" />
      <xs:element name="modifyCampaignProfileFilterOrderResponse" type="tns:modifyCampaignProfileFilterOrderResponse" />
      <xs:element name="modifyCampaignProfileResponse" type="tns:modifyCampaignProfileResponse" />
      <xs:element name="modifyContactField" type="tns:modifyContactField" />
      <xs:element name="modifyContactFieldResponse" type="tns:modifyContactFieldResponse" />
      <xs:element name="modifyDisposition" type="tns:modifyDisposition" />
      <xs:element name="modifyDispositionResponse" type="tns:modifyDispositionResponse" />
      <xs:element name="modifyIVRScript" type="tns:modifyIVRScript" />
      <xs:element name="modifyIVRScriptResponse" type="tns:modifyIVRScriptResponse" />
      <xs:element name="modifyInboundCampaign" type="tns:modifyInboundCampaign" />
      <xs:element name="modifyInboundCampaignResponse" type="tns:modifyInboundCampaignResponse" />
      <xs:element name="modifyOutboundCampaign" type="tns:modifyOutboundCampaign" />
      <xs:element name="modifyOutboundCampaignResponse" type="tns:modifyOutboundCampaignResponse" />
      <xs:element name="modifyPromptTTS" type="tns:modifyPromptTTS" />
      <xs:element name="modifyPromptTTSResponse" type="tns:modifyPromptTTSResponse" />
      <xs:element name="modifyPromptWav" type="tns:modifyPromptWav" />
      <xs:element name="modifyPromptWavInline" type="tns:modifyPromptWavInline" />
      <xs:element name="modifyPromptWavInlineResponse" type="tns:modifyPromptWavInlineResponse" />
      <xs:element name="modifyPromptWavResponse" type="tns:modifyPromptWavResponse" />
      <xs:element name="modifyReasonCode" type="tns:modifyReasonCode" />
      <xs:element name="modifyReasonCodeResponse" type="tns:modifyReasonCodeResponse" />
      <xs:element name="modifySkill" type="tns:modifySkill" />
      <xs:element name="modifySkillResponse" type="tns:modifySkillResponse" />
      <xs:element name="modifyUser" type="tns:modifyUser" />
      <xs:element name="modifyUserCannedReports" type="tns:modifyUserCannedReports" />
      <xs:element name="modifyUserCannedReportsResponse" type="tns:modifyUserCannedReportsResponse" />
      <xs:element name="modifyUserProfile" type="tns:modifyUserProfile" />
      <xs:element name="modifyUserProfileResponse" type="tns:modifyUserProfileResponse" />
      <xs:element name="modifyUserProfileSkills" type="tns:modifyUserProfileSkills" />
      <xs:element name="modifyUserProfileSkillsResponse" type="tns:modifyUserProfileSkillsResponse" />
      <xs:element name="modifyUserProfileUserList" type="tns:modifyUserProfileUserList" />
      <xs:element name="modifyUserProfileUserListResponse" type="tns:modifyUserProfileUserListResponse" />
      <xs:element name="modifyUserResponse" type="tns:modifyUserResponse" />
      <xs:element name="modifyVCCConfiguration" type="tns:modifyVCCConfiguration" />
      <xs:element name="modifyVCCConfigurationResponse" type="tns:modifyVCCConfigurationResponse" />
      <xs:element name="modifyWebConnector" type="tns:modifyWebConnector" />
      <xs:element name="modifyWebConnectorResponse" type="tns:modifyWebConnectorResponse" />
      <xs:element name="removeDNISFromCampaign" type="tns:removeDNISFromCampaign" />
      <xs:element name="removeDNISFromCampaignResponse" type="tns:removeDNISFromCampaignResponse" />
      <xs:element name="removeDisposition" type="tns:removeDisposition" />
      <xs:element name="removeDispositionResponse" type="tns:removeDispositionResponse" />
      <xs:element name="removeDispositionsFromCampaign" type="tns:removeDispositionsFromCampaign" />
      <xs:element name="removeDispositionsFromCampaignResponse" type="tns:removeDispositionsFromCampaignResponse" />
      <xs:element name="removeListsFromCampaign" type="tns:removeListsFromCampaign" />
      <xs:element name="removeListsFromCampaignResponse" type="tns:removeListsFromCampaignResponse" />
      <xs:element name="removeNumbersFromDnc" type="tns:removeNumbersFromDnc" />
      <xs:element name="removeNumbersFromDncResponse" type="tns:removeNumbersFromDncResponse" />
      <xs:element name="removeSkillsFromCampaign" type="tns:removeSkillsFromCampaign" />
      <xs:element name="removeSkillsFromCampaignResponse" type="tns:removeSkillsFromCampaignResponse" />
      <xs:element name="renameCampaign" type="tns:renameCampaign" />
      <xs:element name="renameCampaignResponse" type="tns:renameCampaignResponse" />
      <xs:element name="renameDisposition" type="tns:renameDisposition" />
      <xs:element name="renameDispositionResponse" type="tns:renameDispositionResponse" />
      <xs:element name="resetCampaign" type="tns:resetCampaign" />
      <xs:element name="resetCampaignDispositions" type="tns:resetCampaignDispositions" />
      <xs:element name="resetCampaignDispositionsResponse" type="tns:resetCampaignDispositionsResponse" />
      <xs:element name="resetCampaignResponse" type="tns:resetCampaignResponse" />
      <xs:element name="resetListPosition" type="tns:resetListPosition" />
      <xs:element name="resetListPositionResponse" type="tns:resetListPositionResponse" />
      <xs:element name="runReport" type="tns:runReport" />
      <xs:element name="runReportResponse" type="tns:runReportResponse" />
      <xs:element name="setDefaultIVRSchedule" type="tns:setDefaultIVRSchedule" />
      <xs:element name="setDefaultIVRScheduleResponse" type="tns:setDefaultIVRScheduleResponse" />
      <xs:element name="setDialingRules" type="tns:setDialingRules" />
      <xs:element name="setDialingRulesResponse" type="tns:setDialingRulesResponse" />
      <xs:element name="setSkillVoicemailGreeting" type="tns:setSkillVoicemailGreeting" />
      <xs:element name="setSkillVoicemailGreetingResponse" type="tns:setSkillVoicemailGreetingResponse" />
      <xs:element name="setUserVoicemailGreeting" type="tns:setUserVoicemailGreeting" />
      <xs:element name="setUserVoicemailGreetingResponse" type="tns:setUserVoicemailGreetingResponse" />
      <xs:element name="startCampaign" type="tns:startCampaign" />
      <xs:element name="startCampaignResponse" type="tns:startCampaignResponse" />
      <xs:element name="stopCampaign" type="tns:stopCampaign" />
      <xs:element name="stopCampaignResponse" type="tns:stopCampaignResponse" />
      <xs:element name="updateContacts" type="tns:updateContacts" />
      <xs:element name="updateContactsCsv" type="tns:updateContactsCsv" />
      <xs:element name="updateContactsCsvResponse" type="tns:updateContactsCsvResponse" />
      <xs:element name="updateContactsFtp" type="tns:updateContactsFtp" />
      <xs:element name="updateContactsFtpResponse" type="tns:updateContactsFtpResponse" />
      <xs:element name="updateContactsResponse" type="tns:updateContactsResponse" />
      <xs:element name="updateCrmRecord" type="tns:updateCrmRecord" />
      <xs:element name="updateCrmRecordResponse" type="tns:updateCrmRecordResponse" />
      <xs:element name="updateDispositions" type="tns:updateDispositions" />
      <xs:element name="updateDispositionsCsv" type="tns:updateDispositionsCsv" />
      <xs:element name="updateDispositionsCsvResponse" type="tns:updateDispositionsCsvResponse" />
      <xs:element name="updateDispositionsFtp" type="tns:updateDispositionsFtp" />
      <xs:element name="updateDispositionsFtpResponse" type="tns:updateDispositionsFtpResponse" />
      <xs:element name="updateDispositionsResponse" type="tns:updateDispositionsResponse" />
      <xs:element name="userSkillAdd" type="tns:userSkillAdd" />
      <xs:element name="userSkillAddResponse" type="tns:userSkillAddResponse" />
      <xs:element name="userSkillModify" type="tns:userSkillModify" />
      <xs:element name="userSkillModifyResponse" type="tns:userSkillModifyResponse" />
      <xs:element name="userSkillRemove" type="tns:userSkillRemove" />
      <xs:element name="userSkillRemoveResponse" type="tns:userSkillRemoveResponse" />
      <xs:complexType name="getUserInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:userInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userInfo">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="agentGroups" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="cannedReports" nillable="true" type="tns:cannedReport" />
          <xs:element minOccurs="0" name="generalInfo" type="tns:userGeneralInfo" />
          <xs:element minOccurs="0" name="roles" type="tns:userRoles" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="skills" nillable="true" type="tns:userSkill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cannedReport">
        <xs:sequence>
          <xs:element minOccurs="0" name="index" type="xs:int" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userGeneralInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean" />
          <xs:element minOccurs="0" name="canChangePassword" type="xs:boolean" />
          <xs:element minOccurs="0" name="EMail" type="xs:string" />
          <xs:element minOccurs="0" name="extension" type="xs:int" />
          <xs:element minOccurs="0" name="firstName" type="xs:string" />
          <xs:element minOccurs="0" name="fullName" type="xs:string" />
          <xs:element minOccurs="0" name="IEXScheduled" type="xs:boolean" />
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element minOccurs="0" name="lastName" type="xs:string" />
          <xs:element minOccurs="0" name="mustChangePassword" type="xs:boolean" />
          <xs:element minOccurs="0" name="osLogin" type="xs:string" />
          <xs:element minOccurs="0" name="password" type="xs:string" />
          <xs:element minOccurs="0" name="startDate" type="xs:dateTime" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
          <xs:element minOccurs="0" name="userProfileName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userRoles">
        <xs:sequence>
          <xs:element minOccurs="0" name="admin" type="tns:adminRole" />
          <xs:element minOccurs="0" name="agent" type="tns:agentRole" />
          <xs:element minOccurs="0" name="reporting" type="tns:reportingRole" />
          <xs:element minOccurs="0" name="supervisor" type="tns:supervisorRole" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="adminRole">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="permissions" nillable="true" type="tns:adminPermission" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="adminPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="tns:adminPermissionType" />
          <xs:element name="value" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agentRole">
        <xs:sequence>
          <xs:element name="alwaysRecorded" type="xs:boolean" />
          <xs:element name="attachVmToEmail" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="permissions" nillable="true" type="tns:agentPermission" />
          <xs:element name="sendEmailOnVm" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agentPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="tns:agentPermissionType" />
          <xs:element name="value" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reportingRole">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="permissions" nillable="true" type="tns:reportingPermission" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reportingPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="tns:reportingPermissionType" />
          <xs:element name="value" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="supervisorRole">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="permissions" nillable="true" type="tns:supervisorPermission" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="supervisorPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="tns:supervisorPermissionType" />
          <xs:element name="value" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userSkill">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element name="level" type="xs:int" />
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdminSessionClosedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidAccountException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserAlreadyLoggedInException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceUnavailableException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IncorrectArgumentException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServerException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationsLimitExceededException">
        <xs:sequence>
          <xs:element name="limit" type="xs:long" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="operationType" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MissedArgumentException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AccessDisallowedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExecutionRestrictionException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addToList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listUpdateSettings" type="tns:listUpdateSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listUpdateSettings">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="callNowColumnNumber" type="xs:int" />
              <xs:element minOccurs="0" name="callNowMode" type="tns:callNowMode" />
              <xs:element minOccurs="0" name="callTime" type="xs:long" />
              <xs:element minOccurs="0" name="callTimeColumnNumber" type="xs:int" />
              <xs:element name="cleanListBeforeUpdate" type="xs:boolean" />
              <xs:element minOccurs="0" name="crmAddMode" type="tns:crmAddMode" />
              <xs:element minOccurs="0" name="crmUpdateMode" type="tns:crmUpdateMode" />
              <xs:element minOccurs="0" name="listAddMode" type="tns:listAddMode" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="basicImportSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowDataCleanup" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="fieldsMapping" nillable="true" type="tns:fieldEntry" />
          <xs:element minOccurs="0" name="reportEmail" type="xs:string" />
          <xs:element minOccurs="0" name="separator" type="xs:string" />
          <xs:element name="skipHeaderLine" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fieldEntry">
        <xs:sequence>
          <xs:element name="columnNumber" type="xs:int" />
          <xs:element minOccurs="0" name="fieldName" type="xs:string" />
          <xs:element name="key" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="importData">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="values" nillable="true" type="ns1:stringArray" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addToListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="importIdentifier">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ListNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConcurrentModificationException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ImportRecordsCountLimitExceededException">
        <xs:sequence>
          <xs:element name="limit" type="xs:int" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element name="recordsCount" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidImportDataException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CrmFieldNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="fieldName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createListResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="ListAlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getListsInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="listNamePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getListsInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:listInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element name="size" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidRegexpPatternException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="pattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteListResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="ListCantBeRemovedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addToListCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listUpdateSettings" type="tns:listUpdateSettings" />
          <xs:element minOccurs="0" name="csvData" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addToListCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addToListFtp">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="updateSettings" type="tns:listUpdateSettings" />
          <xs:element minOccurs="0" name="ftpSettings" type="tns:ftpImportSettings" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ftpImportSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="hostname" type="xs:string" />
          <xs:element minOccurs="0" name="password" type="xs:string" />
          <xs:element minOccurs="0" name="path" type="xs:string" />
          <xs:element minOccurs="0" name="username" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addToListFtpResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="ScheduleNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="scheduleName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ScheduleOperationFailedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="operation" type="tns:operationType" />
          <xs:element minOccurs="0" name="scheduleName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ImportInProgressException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromListCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listDeleteSettings" type="tns:listDeleteSettings" />
          <xs:element minOccurs="0" name="csvData" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listDeleteSettings">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="listDeleteMode" type="tns:listDeleteMode" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="deleteFromListCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromListFtp">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="deleteSettings" type="tns:listDeleteSettings" />
          <xs:element minOccurs="0" name="ftpSettings" type="tns:ftpImportSettings" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromListFtpResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteFromList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listDeleteSettings" type="tns:listDeleteSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteAllFromList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="reportEmail" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteAllFromListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateContactsCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="crmUpdateSettings" type="tns:crmUpdateSettings" />
          <xs:element minOccurs="0" name="csvData" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="crmUpdateSettings">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="crmAddMode" type="tns:crmAddMode" />
              <xs:element minOccurs="0" name="crmUpdateMode" type="tns:crmUpdateMode" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateContactsCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateContactsFtp">
        <xs:sequence>
          <xs:element minOccurs="0" name="updateSettings" type="tns:crmUpdateSettings" />
          <xs:element minOccurs="0" name="ftpSettings" type="tns:ftpImportSettings" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateContactsFtpResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="updateContacts">
        <xs:sequence>
          <xs:element minOccurs="0" name="crmUpdateSettings" type="tns:crmUpdateSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateContactsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getContactRecords">
        <xs:sequence>
          <xs:element minOccurs="0" name="lookupCriteria" type="tns:crmLookupCriteria" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="crmLookupCriteria">
        <xs:sequence>
          <xs:element minOccurs="0" name="contactIdField" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="criteria" nillable="true" type="tns:crmFieldCriterion" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="crmFieldCriterion">
        <xs:sequence>
          <xs:element minOccurs="0" name="field" type="xs:string" />
          <xs:element minOccurs="0" name="value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getContactRecordsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:contactsLookupResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="contactsLookupResult">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="fields" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="records" type="tns:record" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="record">
        <xs:sequence>
          <xs:element minOccurs="0" name="values">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="data" nillable="true" type="xs:string" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromContactsCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="crmDeleteSettings" type="tns:crmDeleteSettings" />
          <xs:element minOccurs="0" name="csvData" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="crmDeleteSettings">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="crmDeleteMode" type="tns:crmDeleteMode" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="deleteFromContactsCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromContactsFtp">
        <xs:sequence>
          <xs:element minOccurs="0" name="deleteSettings" type="tns:crmDeleteSettings" />
          <xs:element minOccurs="0" name="ftpSettings" type="tns:ftpImportSettings" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromContactsFtpResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteFromContacts">
        <xs:sequence>
          <xs:element minOccurs="0" name="crmDeleteSettings" type="tns:crmDeleteSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteFromContactsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDispositionsCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="DispositionsUpdateSettings" type="tns:dispositionsUpdateSettings" />
          <xs:element minOccurs="0" name="csvData" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dispositionsUpdateSettings">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportSettings">
            <xs:sequence>
              <xs:element minOccurs="0" name="commonDispositionValue" type="xs:string" />
              <xs:element name="dispositionColumnNumber" type="xs:int" />
              <xs:element minOccurs="0" name="dispositionsUpdateMode" type="tns:dispositionsUpdateMode" />
              <xs:element name="updateToCommonDisposition" type="xs:boolean" />
              <xs:element name="warnIfNoCrmMatchFound" type="xs:boolean" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateDispositionsCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CampaignNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WrongCampaignTypeException">
        <xs:sequence>
          <xs:element minOccurs="0" name="actualType" type="tns:campaignType" />
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="desiredTypes" type="tns:campaignType" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDispositionsFtp">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="updateSettings" type="tns:dispositionsUpdateSettings" />
          <xs:element minOccurs="0" name="ftpSettings" type="tns:ftpImportSettings" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDispositionsFtpResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="updateDispositions">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="DispositionsUpdateSettings" type="tns:dispositionsUpdateSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateDispositionsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addRecordToList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listUpdateSettings" type="tns:listUpdateSettings" />
          <xs:element minOccurs="0" name="record" type="tns:recordData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="recordData">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="fields" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addRecordToListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:listImportResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listImportResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportResult">
            <xs:sequence>
              <xs:element name="callNowQueued" type="xs:long" />
              <xs:element name="crmRecordsInserted" type="xs:long" />
              <xs:element name="crmRecordsUpdated" type="xs:long" />
              <xs:element minOccurs="0" name="listName" type="xs:string" />
              <xs:element name="listRecordsDeleted" type="xs:long" />
              <xs:element name="listRecordsInserted" type="xs:long" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="basicImportResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="failureMessage" type="xs:string" />
          <xs:element name="uploadDuplicatesCount" type="xs:long" />
          <xs:element name="uploadErrorsCount" type="xs:long" />
          <xs:element name="warningsCount">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="entry">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" name="key" type="xs:string" />
                      <xs:element minOccurs="0" name="value" type="xs:long" />
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InternalImportException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ImportCancelledException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteRecordFromList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listDeleteSettings" type="tns:listDeleteSettings" />
          <xs:element minOccurs="0" name="record" type="tns:recordData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteRecordFromListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:listImportResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCrmRecord">
        <xs:sequence>
          <xs:element minOccurs="0" name="crmUpdateSettings" type="tns:crmUpdateSettings" />
          <xs:element minOccurs="0" name="record" type="tns:recordData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCrmRecordResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:crmImportResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="crmImportResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportResult">
            <xs:sequence>
              <xs:element name="crmRecordsDeleted" type="xs:long" />
              <xs:element name="crmRecordsInserted" type="xs:long" />
              <xs:element name="crmRecordsUpdated" type="xs:long" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="asyncAddRecordsToList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listUpdateSettings" type="tns:listUpdateSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="asyncAddRecordsToListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="asyncDeleteRecordsFromList">
        <xs:sequence>
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="listDeleteSettings" type="tns:listDeleteSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="asyncDeleteRecordsFromListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="asyncUpdateCrmRecords">
        <xs:sequence>
          <xs:element minOccurs="0" name="crmUpdateSettings" type="tns:crmUpdateSettings" />
          <xs:element minOccurs="0" name="importData" type="tns:importData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="asyncUpdateCrmRecordsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isImportRunning">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="tns:importIdentifier" />
          <xs:element minOccurs="0" name="waitTime" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isImportRunningResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UnknownIdentifierException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getListImportResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getListImportResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:listImportResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResultIsNotReadyException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCrmImportResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCrmImportResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:crmImportResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDispositionsImportResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="tns:importIdentifier" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDispositionsImportResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:dispositionsImportResult" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dispositionsImportResult">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:basicImportResult">
            <xs:sequence>
              <xs:element name="dispRecordsUpdated" type="xs:long" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getUserGeneralInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserGeneralInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:userGeneralInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUsersGeneralInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="userNamePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUsersGeneralInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:userGeneralInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUsersInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="userNamePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUsersInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:userInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="userInfo" type="tns:userInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createUserResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:userInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserAlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TooManyUsersException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TooManyExtensionsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidUserDataException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SkillNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExtensionAlreadyInUseException">
        <xs:sequence>
          <xs:element minOccurs="0" name="ext" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NICELicencesExceededException">
        <xs:sequence>
          <xs:element minOccurs="0" name="featureLicenseType" type="tns:niceLicenseType" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element name="totalNumberOfLicenses" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MissedOsLoginException">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="agentNames" type="xs:anyType" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserHasNoRequiredRolesException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="roles" type="tns:userRoleType" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUserResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="UserCantBeDeletedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="userGeneralInfo" type="tns:userGeneralInfo" />
          <xs:element minOccurs="0" name="rolesToSet" type="tns:userRoles" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="rolesToRemove" type="tns:userRoleType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUserResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:userInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CantModifyObjectException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUserCannedReports">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="cannedReportsToAdd" type="tns:cannedReport" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="cannedReportsToRemove" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUserCannedReportsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:userInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObjectNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="objectName" type="xs:string" />
          <xs:element minOccurs="0" name="objectType" type="tns:wsObjectType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkill">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:skill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="skill">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element minOccurs="0" name="messageOfTheDay" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="routeVoiceMails" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:skillInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="skillInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="skill" type="tns:skill" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="users" nillable="true" type="tns:userSkill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkills">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillNamePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:skill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillsInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillNamePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillsInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:skillInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createSkill">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillInfo" type="tns:skillInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createSkillResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:skillInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SkillAlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObjectsCountLimitExceededException">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element name="limit" type="xs:int" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="objectName" type="xs:string" />
          <xs:element minOccurs="0" name="objectType" type="tns:wsObjectType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifySkill">
        <xs:sequence>
          <xs:element minOccurs="0" name="skill" type="tns:skill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifySkillResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:skillInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteSkill">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteSkillResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="SkillCantBeDeletedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userSkillAdd">
        <xs:sequence>
          <xs:element minOccurs="0" name="userSkill" type="tns:userSkill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userSkillAddResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="UserAlreadyHasSkillException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userSkillRemove">
        <xs:sequence>
          <xs:element minOccurs="0" name="userSkill" type="tns:userSkill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userSkillRemoveResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="UserDoesntHaveSkillException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userSkillModify">
        <xs:sequence>
          <xs:element minOccurs="0" name="userSkill" type="tns:userSkill" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userSkillModifyResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="checkDncForNumbers">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="numbers" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkDncForNumbersResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TooManyItemsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addNumbersToDnc">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="numbers" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addNumbersToDncResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeNumbersFromDnc">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="numbers" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeNumbersFromDncResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaigns">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignNamePattern" type="xs:string" />
          <xs:element minOccurs="0" name="campaignType" type="tns:campaignType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaignsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:campaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="mode" type="tns:campaignMode" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="profileName" type="xs:string" />
          <xs:element minOccurs="0" name="state" type="tns:campaignState" />
          <xs:element minOccurs="0" name="trainingMode" type="xs:boolean" />
          <xs:element minOccurs="0" name="type" type="tns:campaignType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="startCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="startCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="CampaignStateUpdateException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="details" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="forceStopCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="forceStopCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="resetCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resetCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="addDispositionsToCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dispositions" type="xs:string" />
          <xs:element minOccurs="0" name="isSkipPreviewDisposition" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDispositionsToCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="DispositionNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DispositionAlreadyAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DispositionNotAllowedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WrongDialingModeException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addListsToCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="lists" type="tns:listState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="listState">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="dialingPriority" type="xs:int" />
          <xs:element minOccurs="0" name="dialingRatio" type="xs:int" />
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="priority" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addListsToCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="ListAlreadyAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addSkillsToCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="skills" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addSkillsToCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="SkillAlreadyAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOutboundCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaign" type="tns:outboundCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="outboundCampaign" final="extension restriction">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:baseOutboundCampaign">
            <xs:sequence>
              <xs:element minOccurs="0" name="actionOnAnswerMachine" type="tns:campaignDialingAction" />
              <xs:element minOccurs="0" name="actionOnQueueExpiration" type="tns:campaignDialingAction" />
              <xs:element minOccurs="0" name="callAnalysisMode" type="tns:callAnalysisMode" />
              <xs:element minOccurs="0" name="callsAgentRatio" type="xs:double" />
              <xs:element minOccurs="0" name="dialNumberOnTimeout" type="xs:boolean" />
              <xs:element minOccurs="0" name="dialingMode" type="tns:campaignDialingMode" />
              <xs:element minOccurs="0" name="distributionAlgorithm" type="tns:distributionAlgorithm" />
              <xs:element minOccurs="0" name="distributionTimeFrame" type="tns:distributionTimeFrame" />
              <xs:element minOccurs="0" name="limitPreviewTime" type="xs:boolean" />
              <xs:element minOccurs="0" name="maxDroppedCallsPercentage" type="xs:float" />
              <xs:element minOccurs="0" name="maxPreviewTime" type="tns:timer" />
              <xs:element minOccurs="0" name="maxQueueTime" type="tns:timer" />
              <xs:element minOccurs="0" name="monitorDroppedCalls" type="xs:boolean" />
              <xs:element minOccurs="0" name="previewDialImmediately" type="xs:boolean" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="baseOutboundCampaign" abstract="true">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:generalCampaign">
            <xs:sequence>
              <xs:element minOccurs="0" name="analyzeLevel" type="xs:int" />
              <xs:element minOccurs="0" name="CRMRedialTimeout" type="tns:timer" />
              <xs:element minOccurs="0" name="dialingByStateRules" type="xs:boolean" />
              <xs:element minOccurs="0" name="dnisAsAni" type="xs:boolean" />
              <xs:element minOccurs="0" name="enableListDialingRatios" type="xs:boolean" />
              <xs:element minOccurs="0" name="listDialingMode" type="tns:listDialingMode" />
              <xs:element minOccurs="0" name="noOutOfNumbersAlert" type="xs:boolean" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="generalCampaign">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:campaign">
            <xs:sequence>
              <xs:element minOccurs="0" name="autoRecord" type="xs:boolean" />
              <xs:element minOccurs="0" name="callWrapup" type="tns:campaignCallWrapup" />
              <xs:element minOccurs="0" name="ftpHost" type="xs:string" />
              <xs:element minOccurs="0" name="ftpPassword" type="xs:string" />
              <xs:element minOccurs="0" name="ftpUser" type="xs:string" />
              <xs:element minOccurs="0" name="recordingNameAsSid" type="xs:boolean" />
              <xs:element minOccurs="0" name="useFtp" type="xs:boolean" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="campaignDialingAction">
        <xs:sequence>
          <xs:element minOccurs="0" name="actionArgument" type="xs:string" />
          <xs:element minOccurs="0" name="actionType" type="tns:campaignDialingActionType" />
          <xs:element minOccurs="0" name="maxWaitTime" type="tns:timer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="timer">
        <xs:sequence>
          <xs:element name="days" type="xs:int" />
          <xs:element name="hours" type="xs:int" />
          <xs:element name="minutes" type="xs:int" />
          <xs:element name="seconds" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaignCallWrapup">
        <xs:sequence>
          <xs:element minOccurs="0" name="agentNotReady" type="xs:boolean" />
          <xs:element minOccurs="0" name="dispostionName" type="xs:string" />
          <xs:element minOccurs="0" name="enabled" type="xs:boolean" />
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
          <xs:element minOccurs="0" name="timeout" type="tns:timer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOutboundCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="CampaignAlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IvrScriptNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="ivrScriptName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DialProfileNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="profileName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PromptNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReasonCodeNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="WrongCampaignStateException">
        <xs:sequence>
          <xs:element minOccurs="0" name="actualState" type="tns:campaignState" />
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="desiredState" type="tns:campaignState" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getListsForCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getListsForCampaignResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:listState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignLists">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="lists" type="tns:listState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignListsResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="ListIsNotAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="listName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeDispositionsFromCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dispositions" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeDispositionsFromCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="DispositionIsNotAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ObjectInUseException">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="objectName" type="xs:string" />
          <xs:element minOccurs="0" name="objectType" type="tns:wsObjectType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeListsFromCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="lists" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeListsFromCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="removeSkillsFromCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="skills" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeSkillsFromCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="SkillIsNotAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resetCampaignDispositions">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dispositions" type="xs:string" />
          <xs:element minOccurs="0" name="after" type="xs:dateTime" />
          <xs:element minOccurs="0" name="before" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resetCampaignDispositionsResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="InvalidDateRangeException">
        <xs:sequence>
          <xs:element minOccurs="0" name="end" type="xs:dateTime" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="start" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resetListPosition">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resetListPositionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getCampaignState">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="waitUntilChange" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaignStateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:campaignState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOutboundCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOutboundCampaignResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:outboundCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyOutboundCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaign" type="tns:outboundCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyOutboundCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="renameCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="campaignNewName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createAutodialCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaign" type="tns:autodialCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="autodialCampaign" final="extension restriction">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:baseOutboundCampaign">
            <xs:sequence>
              <xs:element minOccurs="0" name="agentAvailability" type="tns:agentAvailability" />
              <xs:element minOccurs="0" name="agentSkillName" type="xs:string" />
              <xs:element minOccurs="0" name="defaultIvrSchedule" type="tns:ivrScriptSchedule" />
              <xs:element minOccurs="0" name="dialIfAgentsAvailable" type="xs:boolean" />
              <xs:element minOccurs="0" name="maxNumOfLines" type="xs:int" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ivrScriptSchedule">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="scriptName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="scriptParameters" nillable="true" type="tns:scriptParameterValue" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="scriptParameterValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAutodialCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyAutodialCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaign" type="tns:autodialCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyAutodialCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getAutodialCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAutodialCampaignResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:autodialCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getInboundCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getInboundCampaignResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:inboundCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="inboundCampaign" final="extension restriction">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:generalCampaign">
            <xs:sequence>
              <xs:element minOccurs="0" name="defaultIvrSchedule" type="tns:ivrScriptSchedule" />
              <xs:element minOccurs="0" name="maxNumOfLines" type="xs:int" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="modifyInboundCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaign" type="tns:inboundCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyInboundCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createInboundCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaign" type="tns:inboundCampaign" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createInboundCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="addDNISToCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DNISList" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addDNISToCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="DNISNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="dnis" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DNISAlreadyAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="dnis" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeDNISFromCampaign">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="DNISList" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeDNISFromCampaignResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="DNISIsNotAssignedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="dnis" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaignDNISList">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaignDNISListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setDefaultIVRSchedule">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignName" type="xs:string" />
          <xs:element minOccurs="0" name="scriptName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="params" type="tns:scriptParameterValue" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setDefaultIVRScheduleResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createDisposition">
        <xs:sequence>
          <xs:element minOccurs="0" name="disposition" type="tns:disposition" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="disposition">
        <xs:sequence>
          <xs:element minOccurs="0" name="agentMustCompleteWorksheet" type="xs:boolean" />
          <xs:element minOccurs="0" name="agentMustConfirm" type="xs:boolean" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="resetAttemptsCounter" type="xs:boolean" />
          <xs:element minOccurs="0" name="sendEmailNotification" type="xs:boolean" />
          <xs:element minOccurs="0" name="sendIMNotification" type="xs:boolean" />
          <xs:element minOccurs="0" name="trackAsFirstCallResolution" type="xs:boolean" />
          <xs:element minOccurs="0" name="type" type="tns:customDispositionType" />
          <xs:element minOccurs="0" name="typeParameters" type="tns:dispositionTypeParams" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dispositionTypeParams">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowChangeTimer" type="xs:boolean" />
          <xs:element minOccurs="0" name="attempts" type="xs:byte" />
          <xs:element minOccurs="0" name="timer" type="tns:timer" />
          <xs:element minOccurs="0" name="useTimer" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createDispositionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="DispositionAlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDisposition">
        <xs:sequence>
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDispositionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:disposition" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDispositions">
        <xs:sequence>
          <xs:element minOccurs="0" name="dispositionNamePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDispositionsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:disposition" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyDisposition">
        <xs:sequence>
          <xs:element minOccurs="0" name="disposition" type="tns:disposition" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyDispositionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="renameDisposition">
        <xs:sequence>
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
          <xs:element minOccurs="0" name="dispositionNewName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="renameDispositionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="removeDisposition">
        <xs:sequence>
          <xs:element minOccurs="0" name="dispositionName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeDispositionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="addPromptWav">
        <xs:sequence>
          <xs:element minOccurs="0" name="prompt" type="tns:promptInfo" />
          <xs:element minOccurs="0" name="wavFile" type="swaRef:swaRef" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="promptInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="type" type="tns:promptType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPromptWavResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="PromptAlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WavFileUploadFailedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPromptWavInline">
        <xs:sequence>
          <xs:element minOccurs="0" name="prompt" type="tns:promptInfo" />
          <xs:element xmlns:ns2="http://www.w3.org/2005/05/xmlmime" ns2:expectedContentTypes="application/octet-stream" minOccurs="0" name="wavFile" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPromptWavInlineResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="addPromptTTS">
        <xs:sequence>
          <xs:element minOccurs="0" name="prompt" type="tns:promptInfo" />
          <xs:element minOccurs="0" name="ttsInfo" type="tns:ttsInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ttsInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="language" type="tns:language" />
          <xs:element minOccurs="0" name="sayAs" type="tns:sayAs" />
          <xs:element minOccurs="0" name="sayAsFormat" type="tns:sayAsFormat" />
          <xs:element minOccurs="0" name="text" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPromptTTSResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="TtsGenerationFailedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyPromptWav">
        <xs:sequence>
          <xs:element minOccurs="0" name="prompt" type="tns:promptInfo" />
          <xs:element minOccurs="0" name="wavFile" type="swaRef:swaRef" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyPromptWavResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="WrongPromptTypeException">
        <xs:sequence>
          <xs:element minOccurs="0" name="actualType" type="tns:promptType" />
          <xs:element minOccurs="0" name="desiredType" type="tns:promptType" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyPromptWavInline">
        <xs:sequence>
          <xs:element minOccurs="0" name="prompt" type="tns:promptInfo" />
          <xs:element xmlns:ns3="http://www.w3.org/2005/05/xmlmime" ns3:expectedContentTypes="application/octet-stream" minOccurs="0" name="wavFile" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyPromptWavInlineResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyPromptTTS">
        <xs:sequence>
          <xs:element minOccurs="0" name="prompt" type="tns:promptInfo" />
          <xs:element minOccurs="0" name="ttsInfo" type="tns:ttsInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyPromptTTSResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getPrompt">
        <xs:sequence>
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPromptResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:promptInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deletePrompt">
        <xs:sequence>
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deletePromptResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="PromptCantBeDeletedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="promptName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDNISList">
        <xs:sequence>
          <xs:element minOccurs="0" name="selectUnassigned" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDNISListResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentAuditReport">
        <xs:sequence>
          <xs:element minOccurs="0" name="time" type="tns:reportTimeCriteria" />
          <xs:element minOccurs="0" name="criteria" type="tns:agentAuditReportCriteria" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reportTimeCriteria">
        <xs:sequence>
          <xs:element minOccurs="0" name="end" type="xs:dateTime" />
          <xs:element minOccurs="0" name="start" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agentAuditReportCriteria">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="agentStates" nillable="true" type="tns:agentState" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="agents" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="logoutReasonCodes" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="notReadyReasonCodes" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentAuditReportResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reportRowData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reportRowData">
        <xs:sequence>
          <xs:element minOccurs="0" name="header" type="tns:record" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="records" type="tns:record" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LogoutReasonCodeNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NotReadyReasonCodeNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentAuditReportCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="time" type="tns:reportTimeCriteria" />
          <xs:element minOccurs="0" name="criteria" type="tns:agentAuditReportCriteria" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentAuditReportCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCallLogReport">
        <xs:sequence>
          <xs:element minOccurs="0" name="time" type="tns:reportTimeCriteria" />
          <xs:element minOccurs="0" name="criteria" type="tns:callLogReportCriteria" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="callLogReportCriteria">
        <xs:sequence>
          <xs:element minOccurs="0" name="ANI" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="agents" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="callTypes" nillable="true" type="tns:callType" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="campaigns" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="DNIS" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dispositions" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="lists" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="skillGroups" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCallLogReportResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reportRowData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCallLogReportCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="time" type="tns:reportTimeCriteria" />
          <xs:element minOccurs="0" name="criteria" type="tns:callLogReportCriteria" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCallLogReportCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="runReport">
        <xs:sequence>
          <xs:element minOccurs="0" name="folderName" type="xs:string" />
          <xs:element minOccurs="0" name="reportName" type="xs:string" />
          <xs:element minOccurs="0" name="criteria" type="tns:customReportCriteria" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="customReportCriteria">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="reportObjects" nillable="true" type="tns:reportObjectList" />
          <xs:element minOccurs="0" name="time" type="tns:reportTimeCriteria" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reportObjectList">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="objectNames" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="objectType" type="tns:wsObjectType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="runReportResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReportNotFoundException">
        <xs:sequence>
          <xs:element minOccurs="0" name="folder" type="xs:string" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="reportName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReportResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReportResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reportRowData" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReportResultCsv">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReportResultCsvResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReportRunning">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" type="xs:string" />
          <xs:element name="timeout" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isReportRunningResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createReasonCode">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonCode" type="tns:reasonCode" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reasonCode">
        <xs:sequence>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="paidTime" type="xs:boolean" />
          <xs:element minOccurs="0" name="shortcut" type="xs:unsignedShort" />
          <xs:element minOccurs="0" name="type" type="tns:reasonCodeType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createReasonCodeResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="ObjectAlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="objectName" type="xs:string" />
          <xs:element minOccurs="0" name="objectType" type="tns:wsObjectType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReasonCodeCountLimitExceededException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteReasonCode">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteReasonCodeResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteReasonCodeByType">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
          <xs:element minOccurs="0" name="type" type="tns:reasonCodeType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteReasonCodeByTypeResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getReasonCode">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReasonCodeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reasonCode" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReasonCodeByType">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonCodeName" type="xs:string" />
          <xs:element minOccurs="0" name="type" type="tns:reasonCodeType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReasonCodeByTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reasonCode" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyReasonCode">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonCode" type="tns:reasonCode" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyReasonCodeResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createAgentGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="group" type="tns:agentGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agentGroup">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="agents" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="id" type="xs:long" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createAgentGroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:agentGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="groupNamePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentGroupsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:agentGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="groupName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAgentGroupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:agentGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyAgentGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="group" type="tns:agentGroup" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addAgents" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="removeAgents" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyAgentGroupResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteAgentGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="groupName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteAgentGroupResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createUserProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="userProfile" type="tns:userProfile" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="IEXScheduled" type="xs:boolean" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="roles" type="tns:userRoles" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="skills" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="users" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createUserProfileResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:userProfile" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUserProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="userProfileName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteUserProfileResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getUserProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="userProfileName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserProfileResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:userProfile" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserProfiles">
        <xs:sequence>
          <xs:element minOccurs="0" name="userProfileNamePatern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserProfilesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:userProfile" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUserProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="userProfile" type="tns:userProfile" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUserProfileResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyUserProfileSkills">
        <xs:sequence>
          <xs:element minOccurs="0" name="userProfileName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addSkills" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="removeSkills" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUserProfileSkillsResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyUserProfileUserList">
        <xs:sequence>
          <xs:element minOccurs="0" name="userProfileName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addUsers" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="removeUsers" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyUserProfileUserListResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createCampaignProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignProfile" type="tns:campaignProfileInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaignProfileInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="ANI" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="dialingSchedule" type="tns:campaignDialingSchedule" />
          <xs:element minOccurs="0" name="dialingTimeout" type="xs:int" />
          <xs:element minOccurs="0" name="initialCallPriority" type="xs:int" />
          <xs:element minOccurs="0" name="maxCharges" type="xs:int" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="numberOfAttempts" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaignDialingSchedule">
        <xs:sequence>
          <xs:element minOccurs="0" name="dialASAPSortOrder" type="tns:dialSortOrder" />
          <xs:element minOccurs="0" name="dialASAPTimeout" type="xs:int" />
          <xs:element minOccurs="0" name="dialASAPTimeoutPeriod" type="tns:timePeriod" />
          <xs:element minOccurs="0" name="dialingOrder" type="tns:campaignDialingOrder" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dialingSchedules" nillable="true" type="tns:campaignNumberSchedule" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="includeNumbers" nillable="true" type="tns:campaignDialNumber" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaignNumberSchedule">
        <xs:sequence>
          <xs:element minOccurs="0" name="number" type="tns:campaignDialNumber" />
          <xs:element minOccurs="0" name="startTime" type="tns:timer" />
          <xs:element minOccurs="0" name="stopTime" type="tns:timer" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCampaignProfileResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:campaignProfileInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignProfile" type="tns:campaignProfileInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfileResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getCampaignProfiles">
        <xs:sequence>
          <xs:element minOccurs="0" name="namePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaignProfilesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:campaignProfileInfo" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCampaignProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="profileName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCampaignProfileResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfileDispositions">
        <xs:sequence>
          <xs:element minOccurs="0" name="profileName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addDispositionCounts" type="tns:dispositionCount" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="removeDispositionCounts" type="tns:dispositionCount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dispositionCount">
        <xs:sequence>
          <xs:element minOccurs="0" name="count" type="xs:int" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dispositions" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfileDispositionsResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getCampaignProfileDispositions">
        <xs:sequence>
          <xs:element minOccurs="0" name="profileName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaignProfileDispositionsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:dispositionCount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfileCrmCriteria">
        <xs:sequence>
          <xs:element minOccurs="0" name="profileName" type="xs:string" />
          <xs:element minOccurs="0" name="grouping" type="tns:crmCriteriaGrouping" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addCriteria" type="tns:campaignFilterCriterion" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="removeCriteria" type="tns:campaignFilterCriterion" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="crmCriteriaGrouping">
        <xs:sequence>
          <xs:element minOccurs="0" name="expression" type="xs:string" />
          <xs:element minOccurs="0" name="type" type="tns:crmCriteriaGroupingType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaignFilterCriterion">
        <xs:sequence>
          <xs:element minOccurs="0" name="compareOperator" type="tns:compareOperatorType" />
          <xs:element minOccurs="0" name="leftValue" type="xs:string" />
          <xs:element minOccurs="0" name="rightValue" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfileCrmCriteriaResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfileFilterOrder">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignProfile" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="addOrderByField" type="tns:orderByField" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="removeOrderByField" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orderByField">
        <xs:sequence>
          <xs:element minOccurs="0" name="descending" type="xs:boolean" />
          <xs:element minOccurs="0" name="fieldName" type="xs:string" />
          <xs:element minOccurs="0" name="rank" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCampaignProfileFilterOrderResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getCampaignProfileFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="profileName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCampaignProfileFilterResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:campaignProfileFilter" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaignProfileFilter">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="crmCriteria" nillable="true" type="tns:campaignFilterCriterion" />
          <xs:element minOccurs="0" name="grouping" type="tns:crmCriteriaGrouping" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="orderByFields" nillable="true" type="tns:orderByField" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createIVRScript">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createIVRScriptResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:ivrScriptDef" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ivrScriptDef">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="xmlDefinition" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getIVRScripts">
        <xs:sequence>
          <xs:element minOccurs="0" name="namePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getIVRScriptsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:ivrScriptDef" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyIVRScript">
        <xs:sequence>
          <xs:element minOccurs="0" name="scriptDef" type="tns:ivrScriptDef" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyIVRScriptResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteIVRScript">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteIVRScriptResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createCallVariablesGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCallVariablesGroupResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteCallVariablesGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCallVariablesGroupResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getCallVariableGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="namePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCallVariableGroupsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:callVariablesGroup" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="callVariablesGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="variables" nillable="true" type="tns:callVariable" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="callVariable">
        <xs:sequence>
          <xs:element minOccurs="0" name="applyToAllDispositions" type="xs:boolean" />
          <xs:element minOccurs="0" name="defaultValue" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="dispositions" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="group" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="reporting" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="restrictions" nillable="true" type="tns:callVariableRestriction" />
          <xs:element minOccurs="0" name="type" type="tns:callVariableType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="callVariableRestriction">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="tns:cavRestrictionType" />
          <xs:element minOccurs="0" name="value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCallVariablesGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCallVariablesGroupResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createCallVariable">
        <xs:sequence>
          <xs:element minOccurs="0" name="variable" type="tns:callVariable" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCallVariableResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyCallVariable">
        <xs:sequence>
          <xs:element minOccurs="0" name="variable" type="tns:callVariable" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyCallVariableResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteCallVariable">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="groupName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCallVariableResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getCallVariables">
        <xs:sequence>
          <xs:element minOccurs="0" name="namePattern" type="xs:string" />
          <xs:element minOccurs="0" name="groupName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCallVariablesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:callVariable" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteContactField">
        <xs:sequence>
          <xs:element minOccurs="0" name="fieldName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteContactFieldResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createWebConnector">
        <xs:sequence>
          <xs:element minOccurs="0" name="connector" type="tns:webConnector" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="webConnector">
        <xs:sequence>
          <xs:element minOccurs="0" name="addWorksheet" type="xs:boolean" />
          <xs:element minOccurs="0" name="agentApplication" type="tns:webConnectorAgentAppType" />
          <xs:element minOccurs="0" name="clearTriggerDispositions" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="constants" type="tns:keyValuePair" />
          <xs:element minOccurs="0" name="ctiWebServices" type="tns:webConnectorCTIWebServicesType" />
          <xs:element minOccurs="0" name="description" type="xs:string" />
          <xs:element minOccurs="0" name="executeInBrowser" type="xs:boolean" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="postConstants" type="tns:keyValuePair" />
          <xs:element minOccurs="0" name="postMethod" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="postVariables" type="tns:keyValuePair" />
          <xs:element minOccurs="0" name="startPageText" type="xs:string" />
          <xs:element minOccurs="0" name="trigger" type="tns:webConnectorTriggerType" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="triggerDispositions" nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="url" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="variables" type="tns:keyValuePair" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="keyValuePair">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" type="xs:string" />
          <xs:element minOccurs="0" name="value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createWebConnectorResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="deleteWebConnector">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteWebConnectorResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getWebConnectors">
        <xs:sequence>
          <xs:element minOccurs="0" name="namePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getWebConnectorsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:webConnector" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyWebConnector">
        <xs:sequence>
          <xs:element minOccurs="0" name="connector" type="tns:webConnector" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyWebConnectorResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="setDialingRules">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="setRules" type="tns:dialingRule" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="removeRules" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dialingRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="applyToManualCalls" type="xs:boolean" />
          <xs:element minOccurs="0" name="contactText" type="xs:string" />
          <xs:element minOccurs="0" name="dateRange" type="tns:dateRange" />
          <xs:element minOccurs="0" name="fixedTimeZone" type="xs:string" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" name="state" type="tns:stateProvince" />
          <xs:element minOccurs="0" name="timeRange" type="tns:timeRange" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dateRange">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="daysOfWeek" nillable="true" type="tns:dayOfWeek" />
          <xs:element minOccurs="0" name="endDate" type="xs:dateTime" />
          <xs:element minOccurs="0" name="startDate" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="timeRange">
        <xs:sequence>
          <xs:element name="startHour" type="xs:int" />
          <xs:element name="startMinute" type="xs:int" />
          <xs:element name="stopHour" type="xs:int" />
          <xs:element name="stopMinute" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setDialingRulesResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getDialingRules">
        <xs:sequence>
          <xs:element minOccurs="0" name="namePattern" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDialingRulesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:dialingRule" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setSkillVoicemailGreeting">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
          <xs:element xmlns:ns4="http://www.w3.org/2005/05/xmlmime" ns4:expectedContentTypes="application/octet-stream" minOccurs="0" name="wavFile" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setSkillVoicemailGreetingResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="ParseException">
        <xs:sequence>
          <xs:element name="errorOffset" type="xs:int" />
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillVoicemailGreeting">
        <xs:sequence>
          <xs:element minOccurs="0" name="skillName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSkillVoicemailGreetingResponse">
        <xs:sequence>
          <xs:element xmlns:ns5="http://www.w3.org/2005/05/xmlmime" ns5:expectedContentTypes="application/octet-stream" minOccurs="0" name="return" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FinderException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setUserVoicemailGreeting">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string" />
          <xs:element xmlns:ns6="http://www.w3.org/2005/05/xmlmime" ns6:expectedContentTypes="application/octet-stream" minOccurs="0" name="wavFile" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setUserVoicemailGreetingResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getUserVoicemailGreeting">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserVoicemailGreetingResponse">
        <xs:sequence>
          <xs:element xmlns:ns7="http://www.w3.org/2005/05/xmlmime" ns7:expectedContentTypes="application/octet-stream" minOccurs="0" name="return" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCallCountersState">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getCallCountersStateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:limitTimeoutState" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="limitTimeoutState">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="callCounterStates" nillable="true" type="tns:callCounterState" />
          <xs:element name="timeout" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="callCounterState">
        <xs:sequence>
          <xs:element name="limit" type="xs:long" />
          <xs:element minOccurs="0" name="operationType" type="tns:apiOperationType" />
          <xs:element name="value" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SessionClosedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="closeSession">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="closeSessionResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="createContactField">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="tns:contactField" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="contactField">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayAs" type="tns:contactFieldDisplay" />
          <xs:element minOccurs="0" name="mapTo" type="tns:contactFieldMapping" />
          <xs:element minOccurs="0" name="name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="unbounded" name="restrictions" nillable="true" type="tns:contactFieldRestriction" />
          <xs:element minOccurs="0" name="system" type="xs:boolean" />
          <xs:element minOccurs="0" name="type" type="tns:contactFieldType" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="contactFieldRestriction">
        <xs:sequence>
          <xs:element minOccurs="0" name="isEnabled" type="xs:boolean" />
          <xs:element minOccurs="0" name="type" type="tns:contactFieldRestrictionType" />
          <xs:element minOccurs="0" name="value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createContactFieldResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="modifyContactField">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="tns:contactField" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyContactFieldResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getContactFields">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getContactFieldsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="return" type="tns:contactField" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyVCCConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="configuration" type="tns:vccConfiguration" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="vccConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="agentProductivity" type="tns:agentProductivity" />
          <xs:element minOccurs="0" name="emailProperties" type="tns:emailNotifications" />
          <xs:element minOccurs="0" name="keyPerfomanceIndicators" type="tns:keyPerfomanceIndicators" />
          <xs:element minOccurs="0" name="miscOptions" type="tns:miscVccOptions" />
          <xs:element minOccurs="0" name="passwordPolicies" type="tns:passwordPolicies" />
          <xs:element minOccurs="0" name="recordingsServer" type="tns:remoteHostLoginSettings" />
          <xs:element minOccurs="0" name="reportsServer" type="tns:remoteHostLoginSettings" />
          <xs:element minOccurs="0" name="saleforceEmailAccount" type="tns:sForceEmailAccount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agentProductivity">
        <xs:sequence>
          <xs:element minOccurs="0" name="longACWTime" type="xs:int" />
          <xs:element minOccurs="0" name="longCallDuration" type="xs:int" />
          <xs:element minOccurs="0" name="longHoldDuration" type="xs:int" />
          <xs:element minOccurs="0" name="longParkDuration" type="xs:int" />
          <xs:element minOccurs="0" name="shortACWTime" type="xs:int" />
          <xs:element minOccurs="0" name="shortCallDuration" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="emailNotifications">
        <xs:sequence>
          <xs:element minOccurs="0" name="emailAddress" type="xs:string" />
          <xs:element minOccurs="0" name="maxAttachmentSize" type="xs:int" />
          <xs:element minOccurs="0" name="newUserNotification" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="keyPerfomanceIndicators">
        <xs:sequence>
          <xs:element minOccurs="0" name="minTimeOfResponse" type="xs:int" />
          <xs:element minOccurs="0" name="speedOfAnswer" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="miscVccOptions">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultCampaign" type="xs:string" />
          <xs:element minOccurs="0" name="enableReasonCodes" type="xs:boolean" />
          <xs:element minOccurs="0" name="internalCallTimeout" type="xs:int" />
          <xs:element minOccurs="0" name="maySelectCampaign" type="xs:boolean" />
          <xs:element minOccurs="0" name="maySelectNone" type="xs:boolean" />
          <xs:element minOccurs="0" name="showDialAttempts" type="xs:boolean" />
          <xs:element minOccurs="0" name="voicemailTimeout" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="passwordPolicies">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="entryValues" nillable="true" type="tns:passwordPolicyEntryValue" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="passwordPolicyEntryValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="entry" type="tns:passwordPolicyEntries" />
          <xs:element minOccurs="0" name="value" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="remoteHostLoginSettings">
        <xs:sequence>
          <xs:element minOccurs="0" name="hostName" type="xs:string" />
          <xs:element minOccurs="0" name="password" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sForceEmailAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="consumerKey" type="xs:string" />
          <xs:element minOccurs="0" name="consumerSecret" type="xs:string" />
          <xs:element name="enabled" type="xs:boolean" />
          <xs:element minOccurs="0" name="password" type="xs:string" />
          <xs:element minOccurs="0" name="securityToken" type="xs:string" />
          <xs:element minOccurs="0" name="userName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="modifyVCCConfigurationResponse">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getVCCConfiguration">
        <xs:sequence />
      </xs:complexType>
      <xs:complexType name="getVCCConfigurationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:vccConfiguration" />
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="adminPermissionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FullPermissions" />
          <xs:enumeration value="ManageUsers" />
          <xs:enumeration value="ManageSkills" />
          <xs:enumeration value="ManageAgentGroups" />
          <xs:enumeration value="ManageCampaignsStartStop" />
          <xs:enumeration value="ManageCampaignsResetDispositions" />
          <xs:enumeration value="ManageCampaignsResetListPosition" />
          <xs:enumeration value="ManageCampaignsReset" />
          <xs:enumeration value="ManageCampaignsProperties" />
          <xs:enumeration value="ManageLists" />
          <xs:enumeration value="ManageCRM" />
          <xs:enumeration value="ManageDNC" />
          <xs:enumeration value="EditIvr" />
          <xs:enumeration value="EditProfiles" />
          <xs:enumeration value="EditConnectors" />
          <xs:enumeration value="EditDispositions" />
          <xs:enumeration value="EditPrompts" />
          <xs:enumeration value="EditReasonCodes" />
          <xs:enumeration value="EditWorkflowRules" />
          <xs:enumeration value="AccessConfigANI" />
          <xs:enumeration value="EditCallAttachedData" />
          <xs:enumeration value="EditTrustedIPAddresses" />
          <xs:enumeration value="NICEEnabled" />
          <xs:enumeration value="AccessBillingApplication" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="agentPermissionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MakeTransfer" />
          <xs:enumeration value="ReceiveTransfer" />
          <xs:enumeration value="CreateConference" />
          <xs:enumeration value="MakeCall" />
          <xs:enumeration value="MakeInternalCall" />
          <xs:enumeration value="ProcessVoiceMail" />
          <xs:enumeration value="DeleteVoiceMail" />
          <xs:enumeration value="TransferVoiceMail" />
          <xs:enumeration value="MakeRecordings" />
          <xs:enumeration value="SendMessages" />
          <xs:enumeration value="CreateChatSessions" />
          <xs:enumeration value="TrainingMode" />
          <xs:enumeration value="CannotRemoveCRM" />
          <xs:enumeration value="CannotEditSession" />
          <xs:enumeration value="CallForwarding" />
          <xs:enumeration value="AddingToDNC" />
          <xs:enumeration value="DialManuallyDNC" />
          <xs:enumeration value="CreateCallbacks" />
          <xs:enumeration value="PlayAudioFiles" />
          <xs:enumeration value="SkipCrmInPreviewDialMode" />
          <xs:enumeration value="ManageAvailabilityBySkill" />
          <xs:enumeration value="BrowseWebInEmbeddedBrowser" />
          <xs:enumeration value="ChangePreviewPreferences" />
          <xs:enumeration value="CanWrapCall" />
          <xs:enumeration value="CanPlaceCallOnHold" />
          <xs:enumeration value="CanParkCall" />
          <xs:enumeration value="CanRejectCalls" />
          <xs:enumeration value="CanConfigureAutoAnswer" />
          <xs:enumeration value="NICEEnabled" />
          <xs:enumeration value="ScreenRecording" />
          <xs:enumeration value="ProcessEMail" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="reportingPermissionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CanScheduleReportsViaFtp" />
          <xs:enumeration value="CanAccessRecordingsColumn" />
          <xs:enumeration value="NICEEnabled" />
          <xs:enumeration value="CanViewStandardReports" />
          <xs:enumeration value="CanViewCustomReports" />
          <xs:enumeration value="CanViewScheduledReports" />
          <xs:enumeration value="CanViewRecentReports" />
          <xs:enumeration value="CanViewRelease7Reports" />
          <xs:enumeration value="CanViewCannedReports" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="supervisorPermissionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Users" />
          <xs:enumeration value="Agents" />
          <xs:enumeration value="CallMonitoring" />
          <xs:enumeration value="Stations" />
          <xs:enumeration value="ChatSessions" />
          <xs:enumeration value="Campaigns" />
          <xs:enumeration value="CampaignManagement" />
          <xs:enumeration value="AllSkills" />
          <xs:enumeration value="BillingInfo" />
          <xs:enumeration value="BargeInMonitor" />
          <xs:enumeration value="WhisperMonitor" />
          <xs:enumeration value="ViewDataForAllAgentGroups" />
          <xs:enumeration value="ReviewVoiceRecordings" />
          <xs:enumeration value="EditAgentSkills" />
          <xs:enumeration value="NICEEnabled" />
          <xs:enumeration value="CanAccessDashboardMenu" />
          <xs:enumeration value="CampaignManagementStart" />
          <xs:enumeration value="CampaignManagementStop" />
          <xs:enumeration value="CampaignManagementReset" />
          <xs:enumeration value="CampaignManagementResetDispositions" />
          <xs:enumeration value="CampaignManagementResetListPositions" />
          <xs:enumeration value="CampaignManagementResetDialerDCP" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="callNowMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE" />
          <xs:enumeration value="NEW_CRM_ONLY" />
          <xs:enumeration value="NEW_LIST_ONLY" />
          <xs:enumeration value="ANY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="crmAddMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ADD_NEW" />
          <xs:enumeration value="DONT_ADD" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="crmUpdateMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UPDATE_FIRST" />
          <xs:enumeration value="UPDATE_ALL" />
          <xs:enumeration value="UPDATE_SOLE_MATCHES" />
          <xs:enumeration value="DONT_UPDATE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="listAddMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ADD_FIRST" />
          <xs:enumeration value="ADD_ALL" />
          <xs:enumeration value="ADD_IF_SOLE_CRM_MATCH" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="operationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Add" />
          <xs:enumeration value="Update" />
          <xs:enumeration value="Remove" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="listDeleteMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DELETE_ALL" />
          <xs:enumeration value="DELETE_IF_SOLE_CRM_MATCH" />
          <xs:enumeration value="DELETE_EXCEPT_FIRST" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="crmDeleteMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DELETE_ALL" />
          <xs:enumeration value="DELETE_SOLE_MATCHES" />
          <xs:enumeration value="DELETE_EXCEPT_FIRST" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="dispositionsUpdateMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UPDATE_ALL" />
          <xs:enumeration value="UPDATE_IF_SOLE_CRM_MATCH" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="campaignType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OUTBOUND" />
          <xs:enumeration value="AUTODIAL" />
          <xs:enumeration value="INBOUND" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="niceLicenseType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="USER" />
          <xs:enumeration value="SCREEN_RECORDED_AGENT" />
          <xs:enumeration value="IEX_SCHEDULED_AGENT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="userRoleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DomainAdmin" />
          <xs:enumeration value="Agent" />
          <xs:enumeration value="Supervisor" />
          <xs:enumeration value="Reporting" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="wsObjectType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AgentGroup" />
          <xs:enumeration value="Campaign" />
          <xs:enumeration value="CampaignProfile" />
          <xs:enumeration value="CrmField" />
          <xs:enumeration value="Disposition" />
          <xs:enumeration value="List" />
          <xs:enumeration value="Prompt" />
          <xs:enumeration value="ReasonCode" />
          <xs:enumeration value="Skill" />
          <xs:enumeration value="User" />
          <xs:enumeration value="UserProfile" />
          <xs:enumeration value="IvrScript" />
          <xs:enumeration value="CallVariableGroup" />
          <xs:enumeration value="CallVariable" />
          <xs:enumeration value="Connector" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="campaignMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BASIC" />
          <xs:enumeration value="ADVANCED" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="campaignState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOT_RUNNING" />
          <xs:enumeration value="STARTING" />
          <xs:enumeration value="RUNNING" />
          <xs:enumeration value="STOPPING" />
          <xs:enumeration value="RESETTING" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="campaignDialingActionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DROP_CALL" />
          <xs:enumeration value="PLAY_PROMPT" />
          <xs:enumeration value="START_IVR_SCRIPT" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="callAnalysisMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NO_ANALYSIS" />
          <xs:enumeration value="FAX_ONLY" />
          <xs:enumeration value="FAX_AND_ANSWERING_MACHINE" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="campaignDialingMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PREDICTIVE" />
          <xs:enumeration value="PROGRESSIVE" />
          <xs:enumeration value="PREVIEW" />
          <xs:enumeration value="POWER" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="distributionAlgorithm">
        <xs:restriction base="xs:string">
          <xs:enumeration value="LongestReadyTime" />
          <xs:enumeration value="LongestReadyTimeExcludeMC" />
          <xs:enumeration value="RoundRobin" />
          <xs:enumeration value="MinCallsHandled" />
          <xs:enumeration value="MinHandleTime" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="distributionTimeFrame">
        <xs:restriction base="xs:string">
          <xs:enumeration value="minutes15" />
          <xs:enumeration value="minutes30" />
          <xs:enumeration value="minutes60" />
          <xs:enumeration value="hours8" />
          <xs:enumeration value="hours24" />
          <xs:enumeration value="thisDay" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="listDialingMode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="VERTICAL_DIALING" />
          <xs:enumeration value="LIST_PENETRATION" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="agentAvailability">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ReadyToReceiveCalls" />
          <xs:enumeration value="ReadyToReceiveCallsOrBusy" />
          <xs:enumeration value="LoggedIn" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="customDispositionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FinalDisp" />
          <xs:enumeration value="FinalApplyToCampaigns" />
          <xs:enumeration value="AddActiveNumber" />
          <xs:enumeration value="AddAndFinalize" />
          <xs:enumeration value="AddAllNumbers" />
          <xs:enumeration value="DoNotDial" />
          <xs:enumeration value="RedialNumber" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="promptType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="TTSGenerated" />
          <xs:enumeration value="PreRecorded" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="language">
        <xs:restriction base="xs:string">
          <xs:enumeration value="en_US" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="sayAs">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Default" />
          <xs:enumeration value="Words" />
          <xs:enumeration value="Acronym" />
          <xs:enumeration value="Address" />
          <xs:enumeration value="Cardinal" />
          <xs:enumeration value="Currency" />
          <xs:enumeration value="Date" />
          <xs:enumeration value="Decimal" />
          <xs:enumeration value="Digits" />
          <xs:enumeration value="Duration" />
          <xs:enumeration value="Fraction" />
          <xs:enumeration value="Letters" />
          <xs:enumeration value="Measure" />
          <xs:enumeration value="Name" />
          <xs:enumeration value="Net" />
          <xs:enumeration value="Telephone" />
          <xs:enumeration value="Ordinal" />
          <xs:enumeration value="Spell" />
          <xs:enumeration value="Time" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="sayAsFormat">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NoFormat" />
          <xs:enumeration value="Default" />
          <xs:enumeration value="Date_MDY" />
          <xs:enumeration value="Date_DMY" />
          <xs:enumeration value="Date_YMD" />
          <xs:enumeration value="Date_YM" />
          <xs:enumeration value="Date_MY" />
          <xs:enumeration value="Date_DM" />
          <xs:enumeration value="Date_MD" />
          <xs:enumeration value="Date_Y" />
          <xs:enumeration value="Date_M" />
          <xs:enumeration value="Date_D" />
          <xs:enumeration value="Duration_HMS" />
          <xs:enumeration value="Duration_HM" />
          <xs:enumeration value="Duration_MS" />
          <xs:enumeration value="Duration_H" />
          <xs:enumeration value="Duration_M" />
          <xs:enumeration value="Duration_S" />
          <xs:enumeration value="Net_URI" />
          <xs:enumeration value="Net_EMAIL" />
          <xs:enumeration value="Time_HMS" />
          <xs:enumeration value="Time_HM" />
          <xs:enumeration value="Time_H" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="agentState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AVAILABLE_FOR_CALLS" />
          <xs:enumeration value="AVAILABLE_FOR_VMS" />
          <xs:enumeration value="LOGIN" />
          <xs:enumeration value="LOGOUT" />
          <xs:enumeration value="NOT_AVAILABLE_FOR_CALLS" />
          <xs:enumeration value="NOT_AVAILABLE_FOR_VMS" />
          <xs:enumeration value="NOT_READY" />
          <xs:enumeration value="READY" />
          <xs:enumeration value="VM_IN_PROGRESS" />
          <xs:enumeration value="VM_NOT_AVAILABLE" />
          <xs:enumeration value="WAITING" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="callType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AGENT" />
          <xs:enumeration value="AUTODIAL" />
          <xs:enumeration value="INBOUND" />
          <xs:enumeration value="INBOUND_VOICEMAIL" />
          <xs:enumeration value="INTERNAL" />
          <xs:enumeration value="INTERNAL_VOICEMAIL" />
          <xs:enumeration value="OUTBOUND" />
          <xs:enumeration value="OUTBOUND_PREVIEW" />
          <xs:enumeration value="OUTBOUND_VOICEMAIL" />
          <xs:enumeration value="TEST" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="reasonCodeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NotReady" />
          <xs:enumeration value="Logout" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="dialSortOrder">
        <xs:restriction base="xs:string">
          <xs:enumeration value="LIFO" />
          <xs:enumeration value="FIFO" />
          <xs:enumeration value="ContactFields" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="timePeriod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Second" />
          <xs:enumeration value="Minute" />
          <xs:enumeration value="Hour" />
          <xs:enumeration value="Day" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="campaignDialingOrder">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PrimaryAlt1Alt2" />
          <xs:enumeration value="PrimaryAlt2Alt1" />
          <xs:enumeration value="Alt1PrimaryAlt2" />
          <xs:enumeration value="Alt1Alt2Primary" />
          <xs:enumeration value="Alt2PrimaryAlt1" />
          <xs:enumeration value="Alt2Alt1Primary" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="campaignDialNumber">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Primary" />
          <xs:enumeration value="Alt1" />
          <xs:enumeration value="Alt2" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="crmCriteriaGroupingType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="All" />
          <xs:enumeration value="Any" />
          <xs:enumeration value="Custom" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="compareOperatorType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Contains" />
          <xs:enumeration value="DontContains" />
          <xs:enumeration value="IsNull" />
          <xs:enumeration value="IsNotNull" />
          <xs:enumeration value="EndsWith" />
          <xs:enumeration value="Equals" />
          <xs:enumeration value="NotEqual" />
          <xs:enumeration value="Greater" />
          <xs:enumeration value="GreaterOrEqual" />
          <xs:enumeration value="Less" />
          <xs:enumeration value="LessOrEqual" />
          <xs:enumeration value="Like" />
          <xs:enumeration value="StartsWith" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="cavRestrictionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MinValue" />
          <xs:enumeration value="MaxValue" />
          <xs:enumeration value="Regexp" />
          <xs:enumeration value="Required" />
          <xs:enumeration value="Set" />
          <xs:enumeration value="Multiset" />
          <xs:enumeration value="Precision" />
          <xs:enumeration value="Scale" />
          <xs:enumeration value="TimeFormat" />
          <xs:enumeration value="DateFormat" />
          <xs:enumeration value="TimePeriodFormat" />
          <xs:enumeration value="CurrencyType" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="callVariableType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="STRING" />
          <xs:enumeration value="NUMBER" />
          <xs:enumeration value="DATE" />
          <xs:enumeration value="TIME" />
          <xs:enumeration value="DATE_TIME" />
          <xs:enumeration value="CURRENCY" />
          <xs:enumeration value="BOOLEAN" />
          <xs:enumeration value="PERCENT" />
          <xs:enumeration value="EMAIL" />
          <xs:enumeration value="URL" />
          <xs:enumeration value="PHONE" />
          <xs:enumeration value="TIME_PERIOD" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="webConnectorAgentAppType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EmbeddedBrowser" />
          <xs:enumeration value="ExternalBrowser" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="webConnectorCTIWebServicesType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CurrentBrowserWindow" />
          <xs:enumeration value="NewBrowserWindow" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="webConnectorTriggerType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OnCallAccepted" />
          <xs:enumeration value="OnCallDisconnected" />
          <xs:enumeration value="ManuallyStarted" />
          <xs:enumeration value="ManuallyStartedAllowDuringPreviews" />
          <xs:enumeration value="OnPreview" />
          <xs:enumeration value="OnContactSelection" />
          <xs:enumeration value="OnWarmTransferInitiation" />
          <xs:enumeration value="OnCallDispositioned" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="dayOfWeek">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SUNDAY" />
          <xs:enumeration value="MONDAY" />
          <xs:enumeration value="TUESDAY" />
          <xs:enumeration value="WEDNESDAY" />
          <xs:enumeration value="THURSDAY" />
          <xs:enumeration value="FRIDAY" />
          <xs:enumeration value="SATURDAY" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="stateProvince">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ANY" />
          <xs:enumeration value="US_ALABAMA" />
          <xs:enumeration value="US_ALASKA" />
          <xs:enumeration value="US_ARIZONA" />
          <xs:enumeration value="US_ARKANSAS" />
          <xs:enumeration value="US_CALIFORNIA" />
          <xs:enumeration value="US_COLORADO" />
          <xs:enumeration value="US_CONNECTICUT" />
          <xs:enumeration value="US_DELAWARE" />
          <xs:enumeration value="US_FLORIDA" />
          <xs:enumeration value="US_GEORGIA" />
          <xs:enumeration value="US_HAWAII" />
          <xs:enumeration value="US_IDAHO" />
          <xs:enumeration value="US_ILLINOIS" />
          <xs:enumeration value="US_INDIANA" />
          <xs:enumeration value="US_IOWA" />
          <xs:enumeration value="US_KANSAS" />
          <xs:enumeration value="US_KENTUCKY" />
          <xs:enumeration value="US_LOUISIANA" />
          <xs:enumeration value="US_MAINE" />
          <xs:enumeration value="US_MARYLAND" />
          <xs:enumeration value="US_MASSACHUSETTS" />
          <xs:enumeration value="US_MICHIGAN" />
          <xs:enumeration value="US_MINNESOTA" />
          <xs:enumeration value="US_MISSISSIPPI" />
          <xs:enumeration value="US_MISSOURI" />
          <xs:enumeration value="US_MONTANA" />
          <xs:enumeration value="US_NEBRASKA" />
          <xs:enumeration value="US_NEVADA" />
          <xs:enumeration value="US_NEW_HAMPSHIRE" />
          <xs:enumeration value="US_NEW_JERSEY" />
          <xs:enumeration value="US_NEW_MEXICO" />
          <xs:enumeration value="US_NEW_YORK" />
          <xs:enumeration value="US_NORTH_CAROLINA" />
          <xs:enumeration value="US_NORTH_DAKOTA" />
          <xs:enumeration value="US_OHIO" />
          <xs:enumeration value="US_OKLAHOMA" />
          <xs:enumeration value="US_OREGON" />
          <xs:enumeration value="US_PENNSYLVANIA" />
          <xs:enumeration value="US_RHODE_ISLAND" />
          <xs:enumeration value="US_SOUTH_CAROLINA" />
          <xs:enumeration value="US_SOUTH_DAKOTA" />
          <xs:enumeration value="US_TENNESSEE" />
          <xs:enumeration value="US_TEXAS" />
          <xs:enumeration value="US_UTAH" />
          <xs:enumeration value="US_VERMONT" />
          <xs:enumeration value="US_VIRGINIA" />
          <xs:enumeration value="US_WASHINGTON" />
          <xs:enumeration value="US_WEST_VIRGINIA" />
          <xs:enumeration value="US_WISCONSIN" />
          <xs:enumeration value="US_WYOMING" />
          <xs:enumeration value="CA_ALBERTA" />
          <xs:enumeration value="CA_BRITISH_COLUMBIA" />
          <xs:enumeration value="CA_MANITOBA" />
          <xs:enumeration value="CA_NEW_BRUNSWICK" />
          <xs:enumeration value="CA_NEWFOUNDLAND_AND_LABRADOR" />
          <xs:enumeration value="CA_NOVA_SCOTIA" />
          <xs:enumeration value="CA_ONTARIO" />
          <xs:enumeration value="CA_PRINCE_EDWARD_ISLAND" />
          <xs:enumeration value="CA_QUEBEC" />
          <xs:enumeration value="CA_SASKATCHEWAN" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="apiOperationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Query" />
          <xs:enumeration value="Modify" />
          <xs:enumeration value="Upload" />
          <xs:enumeration value="SingleUpload" />
          <xs:enumeration value="ReportRequest" />
          <xs:enumeration value="RetrieveReport" />
          <xs:enumeration value="AsynchronousUpload" />
          <xs:enumeration value="QueryStatistics" />
          <xs:enumeration value="QueryChangedStatistics" />
          <xs:enumeration value="Web2CampaignUpload" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="contactFieldDisplay">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Short" />
          <xs:enumeration value="Long" />
          <xs:enumeration value="Invisible" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="contactFieldMapping">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None" />
          <xs:enumeration value="LastAgent" />
          <xs:enumeration value="LastDisposition" />
          <xs:enumeration value="LastSystemDisposition" />
          <xs:enumeration value="LastAgentDisposition" />
          <xs:enumeration value="LastDispositionDateTime" />
          <xs:enumeration value="LastSystemDispositionDateTime" />
          <xs:enumeration value="LastAgentDispositionDateTime" />
          <xs:enumeration value="LastAttemptedNumber" />
          <xs:enumeration value="LastAttemptedNumberN1N2N3" />
          <xs:enumeration value="LastCampaign" />
          <xs:enumeration value="AttemptsForLastCampaign" />
          <xs:enumeration value="LastList" />
          <xs:enumeration value="CreatedDateTime" />
          <xs:enumeration value="LastModifiedDateTime" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="contactFieldRestrictionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MinValue" />
          <xs:enumeration value="MaxValue" />
          <xs:enumeration value="Regexp" />
          <xs:enumeration value="Required" />
          <xs:enumeration value="Set" />
          <xs:enumeration value="Multiset" />
          <xs:enumeration value="Precision" />
          <xs:enumeration value="Scale" />
          <xs:enumeration value="TimeFormat" />
          <xs:enumeration value="DateFormat" />
          <xs:enumeration value="TimePeriodFormat" />
          <xs:enumeration value="CurrencyType" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="contactFieldType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="STRING" />
          <xs:enumeration value="NUMBER" />
          <xs:enumeration value="DATE" />
          <xs:enumeration value="TIME" />
          <xs:enumeration value="DATE_TIME" />
          <xs:enumeration value="CURRENCY" />
          <xs:enumeration value="BOOLEAN" />
          <xs:enumeration value="PERCENT" />
          <xs:enumeration value="EMAIL" />
          <xs:enumeration value="URL" />
          <xs:enumeration value="PHONE" />
          <xs:enumeration value="TIME_PERIOD" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="passwordPolicyEntries">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MIN_LENGTH" />
          <xs:enumeration value="SPECIAL_SMBL" />
          <xs:enumeration value="CAPITAL_SMBL" />
          <xs:enumeration value="DIGIT" />
          <xs:enumeration value="LOCKOUT" />
          <xs:enumeration value="ADMINLOCKOUT" />
          <xs:enumeration value="REUSELIFE" />
          <xs:enumeration value="TIMELIFE" />
          <xs:enumeration value="QUESTCANTCONTAINPWD" />
          <xs:enumeration value="CANRESETPASSWORD" />
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="WsAdminV2_deleteCallVariableResponse">
    <part name="deleteCallVariableResponse" element="tns:deleteCallVariableResponse" />
  </message>
  <message name="WsAdminV2_getAgentAuditReportResponse">
    <part name="getAgentAuditReportResponse" element="tns:getAgentAuditReportResponse" />
  </message>
  <message name="WsAdminV2_asyncAddRecordsToListResponse">
    <part name="asyncAddRecordsToListResponse" element="tns:asyncAddRecordsToListResponse" />
  </message>
  <message name="WsAdminV2_modifyPromptWavInlineResponse">
    <part name="modifyPromptWavInlineResponse" element="tns:modifyPromptWavInlineResponse" />
  </message>
  <message name="WsAdminV2_modifyUser">
    <part name="modifyUser" element="tns:modifyUser" />
  </message>
  <message name="WsAdminV2_getVCCConfiguration">
    <part name="getVCCConfiguration" element="tns:getVCCConfiguration" />
  </message>
  <message name="SkillIsNotAssignedFault">
    <part name="SkillIsNotAssignedFault" element="tns:SkillIsNotAssignedFault" />
  </message>
  <message name="WsAdminV2_getReasonCode">
    <part name="getReasonCode" element="tns:getReasonCode" />
  </message>
  <message name="WsAdminV2_getUserProfiles">
    <part name="getUserProfiles" element="tns:getUserProfiles" />
  </message>
  <message name="WsAdminV2_userSkillRemove">
    <part name="userSkillRemove" element="tns:userSkillRemove" />
  </message>
  <message name="WsAdminV2_getPrompt">
    <part name="getPrompt" element="tns:getPrompt" />
  </message>
  <message name="WsAdminV2_addDispositionsToCampaign">
    <part name="addDispositionsToCampaign" element="tns:addDispositionsToCampaign" />
  </message>
  <message name="WsAdminV2_createDispositionResponse">
    <part name="createDispositionResponse" element="tns:createDispositionResponse" />
  </message>
  <message name="WsAdminV2_getListsInfo">
    <part name="getListsInfo" element="tns:getListsInfo" />
  </message>
  <message name="ImportSizeLimitExceededFault">
    <part name="ImportSizeLimitExceededFault" element="tns:ImportSizeLimitExceededFault" />
  </message>
  <message name="WsAdminV2_deleteRecordFromList">
    <part name="deleteRecordFromList" element="tns:deleteRecordFromList" />
  </message>
  <message name="WsAdminV2_removeListsFromCampaignResponse">
    <part name="removeListsFromCampaignResponse" element="tns:removeListsFromCampaignResponse" />
  </message>
  <message name="WsAdminV2_setUserVoicemailGreetingResponse">
    <part name="setUserVoicemailGreetingResponse" element="tns:setUserVoicemailGreetingResponse" />
  </message>
  <message name="WsAdminV2_getUsersInfo">
    <part name="getUsersInfo" element="tns:getUsersInfo" />
  </message>
  <message name="WsAdminV2_addDispositionsToCampaignResponse">
    <part name="addDispositionsToCampaignResponse" element="tns:addDispositionsToCampaignResponse" />
  </message>
  <message name="WsAdminV2_renameCampaignResponse">
    <part name="renameCampaignResponse" element="tns:renameCampaignResponse" />
  </message>
  <message name="WsAdminV2_isReportRunning">
    <part name="isReportRunning" element="tns:isReportRunning" />
  </message>
  <message name="InvalidAccountFault">
    <part name="InvalidAccountFault" element="tns:InvalidAccountFault" />
  </message>
  <message name="WsAdminV2_isImportRunningResponse">
    <part name="isImportRunningResponse" element="tns:isImportRunningResponse" />
  </message>
  <message name="WsAdminV2_createList">
    <part name="createList" element="tns:createList" />
  </message>
  <message name="DispositionAlreadyExistsFault">
    <part name="DispositionAlreadyExistsFault" element="tns:DispositionAlreadyExistsFault" />
  </message>
  <message name="WsAdminV2_updateCrmRecord">
    <part name="updateCrmRecord" element="tns:updateCrmRecord" />
  </message>
  <message name="WsAdminV2_deleteAllFromListResponse">
    <part name="deleteAllFromListResponse" element="tns:deleteAllFromListResponse" />
  </message>
  <message name="WsAdminV2_addToListCsv">
    <part name="addToListCsv" element="tns:addToListCsv" />
  </message>
  <message name="WsAdminV2_modifyAgentGroup">
    <part name="modifyAgentGroup" element="tns:modifyAgentGroup" />
  </message>
  <message name="WsAdminV2_modifyContactField">
    <part name="modifyContactField" element="tns:modifyContactField" />
  </message>
  <message name="WsAdminV2_getIVRScripts">
    <part name="getIVRScripts" element="tns:getIVRScripts" />
  </message>
  <message name="WsAdminV2_getCampaignProfileFilterResponse">
    <part name="getCampaignProfileFilterResponse" element="tns:getCampaignProfileFilterResponse" />
  </message>
  <message name="WsAdminV2_modifyUserCannedReportsResponse">
    <part name="modifyUserCannedReportsResponse" element="tns:modifyUserCannedReportsResponse" />
  </message>
  <message name="WsAdminV2_deleteCallVariablesGroupResponse">
    <part name="deleteCallVariablesGroupResponse" element="tns:deleteCallVariablesGroupResponse" />
  </message>
  <message name="WsAdminV2_addDNISToCampaign">
    <part name="addDNISToCampaign" element="tns:addDNISToCampaign" />
  </message>
  <message name="WsAdminV2_userSkillModifyResponse">
    <part name="userSkillModifyResponse" element="tns:userSkillModifyResponse" />
  </message>
  <message name="WsAdminV2_deletePromptResponse">
    <part name="deletePromptResponse" element="tns:deletePromptResponse" />
  </message>
  <message name="WsAdminV2_modifyUserProfileSkillsResponse">
    <part name="modifyUserProfileSkillsResponse" element="tns:modifyUserProfileSkillsResponse" />
  </message>
  <message name="ServiceUnavailableFault">
    <part name="ServiceUnavailableFault" element="tns:ServiceUnavailableFault" />
  </message>
  <message name="WsAdminV2_updateContactsResponse">
    <part name="updateContactsResponse" element="tns:updateContactsResponse" />
  </message>
  <message name="WsAdminV2_getDialingRules">
    <part name="getDialingRules" element="tns:getDialingRules" />
  </message>
  <message name="WsAdminV2_modifyPromptTTS">
    <part name="modifyPromptTTS" element="tns:modifyPromptTTS" />
  </message>
  <message name="WsAdminV2_stopCampaignResponse">
    <part name="stopCampaignResponse" element="tns:stopCampaignResponse" />
  </message>
  <message name="WsAdminV2_getReportResultResponse">
    <part name="getReportResultResponse" element="tns:getReportResultResponse" />
  </message>
  <message name="WsAdminV2_addNumbersToDnc">
    <part name="addNumbersToDnc" element="tns:addNumbersToDnc" />
  </message>
  <message name="WsAdminV2_getCampaignState">
    <part name="getCampaignState" element="tns:getCampaignState" />
  </message>
  <message name="WsAdminV2_createOutboundCampaign">
    <part name="createOutboundCampaign" element="tns:createOutboundCampaign" />
  </message>
  <message name="WsAdminV2_getUserGeneralInfo">
    <part name="getUserGeneralInfo" element="tns:getUserGeneralInfo" />
  </message>
  <message name="ListNotFoundFault">
    <part name="ListNotFoundFault" element="tns:ListNotFoundFault" />
  </message>
  <message name="WsAdminV2_updateContactsFtpResponse">
    <part name="updateContactsFtpResponse" element="tns:updateContactsFtpResponse" />
  </message>
  <message name="WsAdminV2_addPromptTTSResponse">
    <part name="addPromptTTSResponse" element="tns:addPromptTTSResponse" />
  </message>
  <message name="WsAdminV2_resetCampaignResponse">
    <part name="resetCampaignResponse" element="tns:resetCampaignResponse" />
  </message>
  <message name="FinderException">
    <part name="FinderException" element="tns:FinderException" />
  </message>
  <message name="CampaignNotFoundFault">
    <part name="CampaignNotFoundFault" element="tns:CampaignNotFoundFault" />
  </message>
  <message name="UserHasNoRequiredRoleFault">
    <part name="UserHasNoRequiredRoleFault" element="tns:UserHasNoRequiredRoleFault" />
  </message>
  <message name="ParseException">
    <part name="ParseException" element="tns:ParseException" />
  </message>
  <message name="WsAdminV2_modifyContactFieldResponse">
    <part name="modifyContactFieldResponse" element="tns:modifyContactFieldResponse" />
  </message>
  <message name="WsAdminV2_modifyWebConnectorResponse">
    <part name="modifyWebConnectorResponse" element="tns:modifyWebConnectorResponse" />
  </message>
  <message name="ImportCancelledFault">
    <part name="ImportCancelledFault" element="tns:ImportCancelledFault" />
  </message>
  <message name="WsAdminV2_getCallLogReportCsvResponse">
    <part name="getCallLogReportCsvResponse" element="tns:getCallLogReportCsvResponse" />
  </message>
  <message name="WsAdminV2_modifyReasonCode">
    <part name="modifyReasonCode" element="tns:modifyReasonCode" />
  </message>
  <message name="WsAdminV2_getInboundCampaignResponse">
    <part name="getInboundCampaignResponse" element="tns:getInboundCampaignResponse" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfileResponse">
    <part name="modifyCampaignProfileResponse" element="tns:modifyCampaignProfileResponse" />
  </message>
  <message name="WsAdminV2_modifyWebConnector">
    <part name="modifyWebConnector" element="tns:modifyWebConnector" />
  </message>
  <message name="ObjectNotFoundFault">
    <part name="ObjectNotFoundFault" element="tns:ObjectNotFoundFault" />
  </message>
  <message name="WsAdminV2_getCallVariables">
    <part name="getCallVariables" element="tns:getCallVariables" />
  </message>
  <message name="WsAdminV2_resetCampaignDispositions">
    <part name="resetCampaignDispositions" element="tns:resetCampaignDispositions" />
  </message>
  <message name="WsAdminV2_deleteRecordFromListResponse">
    <part name="deleteRecordFromListResponse" element="tns:deleteRecordFromListResponse" />
  </message>
  <message name="IvrScriptNotFoundFault">
    <part name="IvrScriptNotFoundFault" element="tns:IvrScriptNotFoundFault" />
  </message>
  <message name="ObjectsCountLimitExceededFault">
    <part name="ObjectsCountLimitExceededFault" element="tns:ObjectsCountLimitExceededFault" />
  </message>
  <message name="WsAdminV2_modifyUserResponse">
    <part name="modifyUserResponse" element="tns:modifyUserResponse" />
  </message>
  <message name="WsAdminV2_createAgentGroup">
    <part name="createAgentGroup" element="tns:createAgentGroup" />
  </message>
  <message name="WsAdminV2_createDisposition">
    <part name="createDisposition" element="tns:createDisposition" />
  </message>
  <message name="WsAdminV2_deleteSkill">
    <part name="deleteSkill" element="tns:deleteSkill" />
  </message>
  <message name="PromptAlreadyExistsFault">
    <part name="PromptAlreadyExistsFault" element="tns:PromptAlreadyExistsFault" />
  </message>
  <message name="WsAdminV2_closeSession">
    <part name="closeSession" element="tns:closeSession" />
  </message>
  <message name="WsAdminV2_getAgentGroupsResponse">
    <part name="getAgentGroupsResponse" element="tns:getAgentGroupsResponse" />
  </message>
  <message name="WsAdminV2_getContactRecords">
    <part name="getContactRecords" element="tns:getContactRecords" />
  </message>
  <message name="InvalidRegexpPatternFault">
    <part name="InvalidRegexpPatternFault" element="tns:InvalidRegexpPatternFault" />
  </message>
  <message name="DispositionIsAlreadyAssignedFault">
    <part name="DispositionIsAlreadyAssignedFault" element="tns:DispositionIsAlreadyAssignedFault" />
  </message>
  <message name="WsAdminV2_deleteAgentGroupResponse">
    <part name="deleteAgentGroupResponse" element="tns:deleteAgentGroupResponse" />
  </message>
  <message name="WsAdminV2_asyncUpdateCrmRecords">
    <part name="asyncUpdateCrmRecords" element="tns:asyncUpdateCrmRecords" />
  </message>
  <message name="WsAdminV2_getReportResultCsvResponse">
    <part name="getReportResultCsvResponse" element="tns:getReportResultCsvResponse" />
  </message>
  <message name="ObjectAlreadyExistsFault">
    <part name="ObjectAlreadyExistsFault" element="tns:ObjectAlreadyExistsFault" />
  </message>
  <message name="WsAdminV2_getAutodialCampaign">
    <part name="getAutodialCampaign" element="tns:getAutodialCampaign" />
  </message>
  <message name="WsAdminV2_asyncUpdateCrmRecordsResponse">
    <part name="asyncUpdateCrmRecordsResponse" element="tns:asyncUpdateCrmRecordsResponse" />
  </message>
  <message name="WsAdminV2_getListsForCampaign">
    <part name="getListsForCampaign" element="tns:getListsForCampaign" />
  </message>
  <message name="SkillAlreadyExistsFault">
    <part name="SkillAlreadyExistsFault" element="tns:SkillAlreadyExistsFault" />
  </message>
  <message name="WsAdminV2_createSkillResponse">
    <part name="createSkillResponse" element="tns:createSkillResponse" />
  </message>
  <message name="WsAdminV2_updateContactsCsvResponse">
    <part name="updateContactsCsvResponse" element="tns:updateContactsCsvResponse" />
  </message>
  <message name="TooManyItemsFault">
    <part name="TooManyItemsFault" element="tns:TooManyItemsFault" />
  </message>
  <message name="WsAdminV2_deleteFromListCsv">
    <part name="deleteFromListCsv" element="tns:deleteFromListCsv" />
  </message>
  <message name="WsAdminV2_deleteCampaignProfile">
    <part name="deleteCampaignProfile" element="tns:deleteCampaignProfile" />
  </message>
  <message name="WsAdminV2_updateContactsCsv">
    <part name="updateContactsCsv" element="tns:updateContactsCsv" />
  </message>
  <message name="WsAdminV2_getWebConnectors">
    <part name="getWebConnectors" element="tns:getWebConnectors" />
  </message>
  <message name="WsAdminV2_createListResponse">
    <part name="createListResponse" element="tns:createListResponse" />
  </message>
  <message name="WsAdminV2_getWebConnectorsResponse">
    <part name="getWebConnectorsResponse" element="tns:getWebConnectorsResponse" />
  </message>
  <message name="WsAdminV2_modifyInboundCampaign">
    <part name="modifyInboundCampaign" element="tns:modifyInboundCampaign" />
  </message>
  <message name="WsAdminV2_userSkillRemoveResponse">
    <part name="userSkillRemoveResponse" element="tns:userSkillRemoveResponse" />
  </message>
  <message name="WsAdminV2_modifyAgentGroupResponse">
    <part name="modifyAgentGroupResponse" element="tns:modifyAgentGroupResponse" />
  </message>
  <message name="WsAdminV2_getReportResultCsv">
    <part name="getReportResultCsv" element="tns:getReportResultCsv" />
  </message>
  <message name="WsAdminV2_updateDispositionsCsvResponse">
    <part name="updateDispositionsCsvResponse" element="tns:updateDispositionsCsvResponse" />
  </message>
  <message name="InvalidImportDataFault">
    <part name="InvalidImportDataFault" element="tns:InvalidImportDataFault" />
  </message>
  <message name="MissedOsLoginFault">
    <part name="MissedOsLoginFault" element="tns:MissedOsLoginFault" />
  </message>
  <message name="WsAdminV2_getCampaignProfiles">
    <part name="getCampaignProfiles" element="tns:getCampaignProfiles" />
  </message>
  <message name="WsAdminV2_modifySkillResponse">
    <part name="modifySkillResponse" element="tns:modifySkillResponse" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfileFilterOrderResponse">
    <part name="modifyCampaignProfileFilterOrderResponse" element="tns:modifyCampaignProfileFilterOrderResponse" />
  </message>
  <message name="WsAdminV2_modifyIVRScriptResponse">
    <part name="modifyIVRScriptResponse" element="tns:modifyIVRScriptResponse" />
  </message>
  <message name="WsAdminV2_addToListFtpResponse">
    <part name="addToListFtpResponse" element="tns:addToListFtpResponse" />
  </message>
  <message name="WsAdminV2_forceStopCampaignResponse">
    <part name="forceStopCampaignResponse" element="tns:forceStopCampaignResponse" />
  </message>
  <message name="WsAdminV2_deleteList">
    <part name="deleteList" element="tns:deleteList" />
  </message>
  <message name="WsAdminV2_deleteAllFromList">
    <part name="deleteAllFromList" element="tns:deleteAllFromList" />
  </message>
  <message name="WsAdminV2_modifyInboundCampaignResponse">
    <part name="modifyInboundCampaignResponse" element="tns:modifyInboundCampaignResponse" />
  </message>
  <message name="WsAdminV2_modifyCallVariablesGroup">
    <part name="modifyCallVariablesGroup" element="tns:modifyCallVariablesGroup" />
  </message>
  <message name="AllowedOnlyForPreviewCampaignFault">
    <part name="AllowedOnlyForPreviewCampaignFault" element="tns:AllowedOnlyForPreviewCampaignFault" />
  </message>
  <message name="WsAdminV2_addListsToCampaign">
    <part name="addListsToCampaign" element="tns:addListsToCampaign" />
  </message>
  <message name="WsAdminV2_setSkillVoicemailGreeting">
    <part name="setSkillVoicemailGreeting" element="tns:setSkillVoicemailGreeting" />
  </message>
  <message name="WsAdminV2_createReasonCodeResponse">
    <part name="createReasonCodeResponse" element="tns:createReasonCodeResponse" />
  </message>
  <message name="WsAdminV2_renameCampaign">
    <part name="renameCampaign" element="tns:renameCampaign" />
  </message>
  <message name="WsAdminV2_userSkillAddResponse">
    <part name="userSkillAddResponse" element="tns:userSkillAddResponse" />
  </message>
  <message name="WsAdminV2_getCampaignsResponse">
    <part name="getCampaignsResponse" element="tns:getCampaignsResponse" />
  </message>
  <message name="WsAdminV2_getOutboundCampaign">
    <part name="getOutboundCampaign" element="tns:getOutboundCampaign" />
  </message>
  <message name="DNISNotFoundFault">
    <part name="DNISNotFoundFault" element="tns:DNISNotFoundFault" />
  </message>
  <message name="WsAdminV2_getReasonCodeByType">
    <part name="getReasonCodeByType" element="tns:getReasonCodeByType" />
  </message>
  <message name="IncorrectArgumentFault">
    <part name="IncorrectArgumentFault" element="tns:IncorrectArgumentFault" />
  </message>
  <message name="WsAdminV2_deleteUserProfileResponse">
    <part name="deleteUserProfileResponse" element="tns:deleteUserProfileResponse" />
  </message>
  <message name="WsAdminV2_deleteCampaignResponse">
    <part name="deleteCampaignResponse" element="tns:deleteCampaignResponse" />
  </message>
  <message name="WsAdminV2_getCrmImportResultResponse">
    <part name="getCrmImportResultResponse" element="tns:getCrmImportResultResponse" />
  </message>
  <message name="WsAdminV2_getSkillInfoResponse">
    <part name="getSkillInfoResponse" element="tns:getSkillInfoResponse" />
  </message>
  <message name="WsAdminV2_asyncDeleteRecordsFromList">
    <part name="asyncDeleteRecordsFromList" element="tns:asyncDeleteRecordsFromList" />
  </message>
  <message name="WsAdminV2_getDNISList">
    <part name="getDNISList" element="tns:getDNISList" />
  </message>
  <message name="WsAdminV2_addToList">
    <part name="addToList" element="tns:addToList" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfile">
    <part name="modifyCampaignProfile" element="tns:modifyCampaignProfile" />
  </message>
  <message name="WsAdminV2_getUserProfile">
    <part name="getUserProfile" element="tns:getUserProfile" />
  </message>
  <message name="WsAdminV2_deleteFromListResponse">
    <part name="deleteFromListResponse" element="tns:deleteFromListResponse" />
  </message>
  <message name="ServerFault">
    <part name="ServerFault" element="tns:ServerFault" />
  </message>
  <message name="WsAdminV2_createCallVariableResponse">
    <part name="createCallVariableResponse" element="tns:createCallVariableResponse" />
  </message>
  <message name="WsAdminV2_modifyCampaignLists">
    <part name="modifyCampaignLists" element="tns:modifyCampaignLists" />
  </message>
  <message name="WsAdminV2_getIVRScriptsResponse">
    <part name="getIVRScriptsResponse" element="tns:getIVRScriptsResponse" />
  </message>
  <message name="WavFileUploadFailedFault">
    <part name="WavFileUploadFailedFault" element="tns:WavFileUploadFailedFault" />
  </message>
  <message name="WsAdminV2_updateDispositionsFtpResponse">
    <part name="updateDispositionsFtpResponse" element="tns:updateDispositionsFtpResponse" />
  </message>
  <message name="WsAdminV2_getUserProfileResponse">
    <part name="getUserProfileResponse" element="tns:getUserProfileResponse" />
  </message>
  <message name="WsAdminV2_createUserResponse">
    <part name="createUserResponse" element="tns:createUserResponse" />
  </message>
  <message name="WsAdminV2_modifyAutodialCampaignResponse">
    <part name="modifyAutodialCampaignResponse" element="tns:modifyAutodialCampaignResponse" />
  </message>
  <message name="WsAdminV2_getReasonCodeByTypeResponse">
    <part name="getReasonCodeByTypeResponse" element="tns:getReasonCodeByTypeResponse" />
  </message>
  <message name="WsAdminV2_getCampaignProfileDispositionsResponse">
    <part name="getCampaignProfileDispositionsResponse" element="tns:getCampaignProfileDispositionsResponse" />
  </message>
  <message name="WsAdminV2_deleteFromContactsCsvResponse">
    <part name="deleteFromContactsCsvResponse" element="tns:deleteFromContactsCsvResponse" />
  </message>
  <message name="WsAdminV2_getCampaigns">
    <part name="getCampaigns" element="tns:getCampaigns" />
  </message>
  <message name="InvalidDateRangeFault">
    <part name="InvalidDateRangeFault" element="tns:InvalidDateRangeFault" />
  </message>
  <message name="SkillNotFoundFault">
    <part name="SkillNotFoundFault" element="tns:SkillNotFoundFault" />
  </message>
  <message name="WsAdminV2_deleteFromContactsFtp">
    <part name="deleteFromContactsFtp" element="tns:deleteFromContactsFtp" />
  </message>
  <message name="WsAdminV2_createCampaignProfileResponse">
    <part name="createCampaignProfileResponse" element="tns:createCampaignProfileResponse" />
  </message>
  <message name="WsAdminV2_createAutodialCampaign">
    <part name="createAutodialCampaign" element="tns:createAutodialCampaign" />
  </message>
  <message name="WsAdminV2_updateDispositionsResponse">
    <part name="updateDispositionsResponse" element="tns:updateDispositionsResponse" />
  </message>
  <message name="WsAdminV2_modifyVCCConfigurationResponse">
    <part name="modifyVCCConfigurationResponse" element="tns:modifyVCCConfigurationResponse" />
  </message>
  <message name="WsAdminV2_userSkillAdd">
    <part name="userSkillAdd" element="tns:userSkillAdd" />
  </message>
  <message name="WsAdminV2_addPromptWavResponse">
    <part name="addPromptWavResponse" element="tns:addPromptWavResponse" />
  </message>
  <message name="WsAdminV2_getAgentAuditReport">
    <part name="getAgentAuditReport" element="tns:getAgentAuditReport" />
  </message>
  <message name="WsAdminV2_modifyPromptWavInline">
    <part name="modifyPromptWavInline" element="tns:modifyPromptWavInline" />
  </message>
  <message name="LogoutReasonCodeNotFoundFault">
    <part name="LogoutReasonCodeNotFoundFault" element="tns:LogoutReasonCodeNotFoundFault" />
  </message>
  <message name="WsAdminV2_setUserVoicemailGreeting">
    <part name="setUserVoicemailGreeting" element="tns:setUserVoicemailGreeting" />
  </message>
  <message name="WsAdminV2_asyncAddRecordsToList">
    <part name="asyncAddRecordsToList" element="tns:asyncAddRecordsToList" />
  </message>
  <message name="WsAdminV2_getListsInfoResponse">
    <part name="getListsInfoResponse" element="tns:getListsInfoResponse" />
  </message>
  <message name="WsAdminV2_modifyUserProfile">
    <part name="modifyUserProfile" element="tns:modifyUserProfile" />
  </message>
  <message name="WsAdminV2_getOutboundCampaignResponse">
    <part name="getOutboundCampaignResponse" element="tns:getOutboundCampaignResponse" />
  </message>
  <message name="WsAdminV2_getAgentGroup">
    <part name="getAgentGroup" element="tns:getAgentGroup" />
  </message>
  <message name="WsAdminV2_updateDispositionsFtp">
    <part name="updateDispositionsFtp" element="tns:updateDispositionsFtp" />
  </message>
  <message name="WsAdminV2_modifySkill">
    <part name="modifySkill" element="tns:modifySkill" />
  </message>
  <message name="WsAdminV2_createUserProfileResponse">
    <part name="createUserProfileResponse" element="tns:createUserProfileResponse" />
  </message>
  <message name="WsAdminV2_deleteFromList">
    <part name="deleteFromList" element="tns:deleteFromList" />
  </message>
  <message name="WsAdminV2_removeDisposition">
    <part name="removeDisposition" element="tns:removeDisposition" />
  </message>
  <message name="WsAdminV2_asyncDeleteRecordsFromListResponse">
    <part name="asyncDeleteRecordsFromListResponse" element="tns:asyncDeleteRecordsFromListResponse" />
  </message>
  <message name="WsAdminV2_getCallVariableGroups">
    <part name="getCallVariableGroups" element="tns:getCallVariableGroups" />
  </message>
  <message name="WsAdminV2_createWebConnector">
    <part name="createWebConnector" element="tns:createWebConnector" />
  </message>
  <message name="WsAdminV2_addSkillsToCampaign">
    <part name="addSkillsToCampaign" element="tns:addSkillsToCampaign" />
  </message>
  <message name="ListAlreadyExistsFault">
    <part name="ListAlreadyExistsFault" element="tns:ListAlreadyExistsFault" />
  </message>
  <message name="ListIsNotAssignedFault">
    <part name="ListIsNotAssignedFault" element="tns:ListIsNotAssignedFault" />
  </message>
  <message name="WsAdminV2_getCallLogReportResponse">
    <part name="getCallLogReportResponse" element="tns:getCallLogReportResponse" />
  </message>
  <message name="WsAdminV2_getAgentAuditReportCsvResponse">
    <part name="getAgentAuditReportCsvResponse" element="tns:getAgentAuditReportCsvResponse" />
  </message>
  <message name="WsAdminV2_updateContacts">
    <part name="updateContacts" element="tns:updateContacts" />
  </message>
  <message name="WrongPromptTypeFault">
    <part name="WrongPromptTypeFault" element="tns:WrongPromptTypeFault" />
  </message>
  <message name="DNISAlreadyAssignedFault">
    <part name="DNISAlreadyAssignedFault" element="tns:DNISAlreadyAssignedFault" />
  </message>
  <message name="WsAdminV2_getCampaignProfileFilter">
    <part name="getCampaignProfileFilter" element="tns:getCampaignProfileFilter" />
  </message>
  <message name="MissedArgumentFault">
    <part name="MissedArgumentFault" element="tns:MissedArgumentFault" />
  </message>
  <message name="WsAdminV2_removeDispositionResponse">
    <part name="removeDispositionResponse" element="tns:removeDispositionResponse" />
  </message>
  <message name="WsAdminV2_resetListPosition">
    <part name="resetListPosition" element="tns:resetListPosition" />
  </message>
  <message name="WsAdminV2_getSkillVoicemailGreetingResponse">
    <part name="getSkillVoicemailGreetingResponse" element="tns:getSkillVoicemailGreetingResponse" />
  </message>
  <message name="WsAdminV2_getAgentGroups">
    <part name="getAgentGroups" element="tns:getAgentGroups" />
  </message>
  <message name="WsAdminV2_getUserVoicemailGreetingResponse">
    <part name="getUserVoicemailGreetingResponse" element="tns:getUserVoicemailGreetingResponse" />
  </message>
  <message name="WsAdminV2_getCallLogReport">
    <part name="getCallLogReport" element="tns:getCallLogReport" />
  </message>
  <message name="AccessDisallowedFault">
    <part name="AccessDisallowedFault" element="tns:AccessDisallowedFault" />
  </message>
  <message name="WsAdminV2_addSkillsToCampaignResponse">
    <part name="addSkillsToCampaignResponse" element="tns:addSkillsToCampaignResponse" />
  </message>
  <message name="WsAdminV2_getUserProfilesResponse">
    <part name="getUserProfilesResponse" element="tns:getUserProfilesResponse" />
  </message>
  <message name="WsAdminV2_removeSkillsFromCampaignResponse">
    <part name="removeSkillsFromCampaignResponse" element="tns:removeSkillsFromCampaignResponse" />
  </message>
  <message name="WsAdminV2_addListsToCampaignResponse">
    <part name="addListsToCampaignResponse" element="tns:addListsToCampaignResponse" />
  </message>
  <message name="WsAdminV2_removeNumbersFromDnc">
    <part name="removeNumbersFromDnc" element="tns:removeNumbersFromDnc" />
  </message>
  <message name="WsAdminV2_resetCampaignDispositionsResponse">
    <part name="resetCampaignDispositionsResponse" element="tns:resetCampaignDispositionsResponse" />
  </message>
  <message name="WsAdminV2_getListImportResultResponse">
    <part name="getListImportResultResponse" element="tns:getListImportResultResponse" />
  </message>
  <message name="WsAdminV2_addPromptWavInlineResponse">
    <part name="addPromptWavInlineResponse" element="tns:addPromptWavInlineResponse" />
  </message>
  <message name="WsAdminV2_setDefaultIVRScheduleResponse">
    <part name="setDefaultIVRScheduleResponse" element="tns:setDefaultIVRScheduleResponse" />
  </message>
  <message name="WsAdminV2_createCampaignProfile">
    <part name="createCampaignProfile" element="tns:createCampaignProfile" />
  </message>
  <message name="UserCantBeDeletedFault">
    <part name="UserCantBeDeletedFault" element="tns:UserCantBeDeletedFault" />
  </message>
  <message name="WsAdminV2_removeListsFromCampaign">
    <part name="removeListsFromCampaign" element="tns:removeListsFromCampaign" />
  </message>
  <message name="WsAdminV2_deleteWebConnectorResponse">
    <part name="deleteWebConnectorResponse" element="tns:deleteWebConnectorResponse" />
  </message>
  <message name="ResultIsNotReadyFault">
    <part name="ResultIsNotReadyFault" element="tns:ResultIsNotReadyFault" />
  </message>
  <message name="WsAdminV2_getVCCConfigurationResponse">
    <part name="getVCCConfigurationResponse" element="tns:getVCCConfigurationResponse" />
  </message>
  <message name="WsAdminV2_createIVRScript">
    <part name="createIVRScript" element="tns:createIVRScript" />
  </message>
  <message name="WsAdminV2_getAutodialCampaignResponse">
    <part name="getAutodialCampaignResponse" element="tns:getAutodialCampaignResponse" />
  </message>
  <message name="WsAdminV2_deleteReasonCode">
    <part name="deleteReasonCode" element="tns:deleteReasonCode" />
  </message>
  <message name="UserAlreadyLoggedInFault">
    <part name="UserAlreadyLoggedInFault" element="tns:UserAlreadyLoggedInFault" />
  </message>
  <message name="ReasonCodeCountLimitExceededFault">
    <part name="ReasonCodeCountLimitExceededFault" element="tns:ReasonCodeCountLimitExceededFault" />
  </message>
  <message name="WsAdminV2_createContactFieldResponse">
    <part name="createContactFieldResponse" element="tns:createContactFieldResponse" />
  </message>
  <message name="WsAdminV2_createWebConnectorResponse">
    <part name="createWebConnectorResponse" element="tns:createWebConnectorResponse" />
  </message>
  <message name="WsAdminV2_getAgentAuditReportCsv">
    <part name="getAgentAuditReportCsv" element="tns:getAgentAuditReportCsv" />
  </message>
  <message name="WsAdminV2_getSkill">
    <part name="getSkill" element="tns:getSkill" />
  </message>
  <message name="WsAdminV2_modifyDispositionResponse">
    <part name="modifyDispositionResponse" element="tns:modifyDispositionResponse" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfileCrmCriteria">
    <part name="modifyCampaignProfileCrmCriteria" element="tns:modifyCampaignProfileCrmCriteria" />
  </message>
  <message name="WsAdminV2_deleteReasonCodeByTypeResponse">
    <part name="deleteReasonCodeByTypeResponse" element="tns:deleteReasonCodeByTypeResponse" />
  </message>
  <message name="WsAdminV2_deleteFromContactsCsv">
    <part name="deleteFromContactsCsv" element="tns:deleteFromContactsCsv" />
  </message>
  <message name="WsAdminV2_setDialingRules">
    <part name="setDialingRules" element="tns:setDialingRules" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfileDispositions">
    <part name="modifyCampaignProfileDispositions" element="tns:modifyCampaignProfileDispositions" />
  </message>
  <message name="WsAdminV2_removeDispositionsFromCampaignResponse">
    <part name="removeDispositionsFromCampaignResponse" element="tns:removeDispositionsFromCampaignResponse" />
  </message>
  <message name="WsAdminV2_renameDispositionResponse">
    <part name="renameDispositionResponse" element="tns:renameDispositionResponse" />
  </message>
  <message name="ReportNotFoundFault">
    <part name="ReportNotFoundFault" element="tns:ReportNotFoundFault" />
  </message>
  <message name="ExtensionAlreadyInUseFault">
    <part name="ExtensionAlreadyInUseFault" element="tns:ExtensionAlreadyInUseFault" />
  </message>
  <message name="WsAdminV2_addToListResponse">
    <part name="addToListResponse" element="tns:addToListResponse" />
  </message>
  <message name="ScheduleNotFoundFault">
    <part name="ScheduleNotFoundFault" element="tns:ScheduleNotFoundFault" />
  </message>
  <message name="WsAdminV2_addRecordToListResponse">
    <part name="addRecordToListResponse" element="tns:addRecordToListResponse" />
  </message>
  <message name="WsAdminV2_startCampaignResponse">
    <part name="startCampaignResponse" element="tns:startCampaignResponse" />
  </message>
  <message name="WsAdminV2_updateDispositions">
    <part name="updateDispositions" element="tns:updateDispositions" />
  </message>
  <message name="WsAdminV2_createSkill">
    <part name="createSkill" element="tns:createSkill" />
  </message>
  <message name="ExecutionRestrictionFault">
    <part name="ExecutionRestrictionFault" element="tns:ExecutionRestrictionFault" />
  </message>
  <message name="DispositionIsNotAssisgnedFault">
    <part name="DispositionIsNotAssisgnedFault" element="tns:DispositionIsNotAssisgnedFault" />
  </message>
  <message name="WsAdminV2_getInboundCampaign">
    <part name="getInboundCampaign" element="tns:getInboundCampaign" />
  </message>
  <message name="WsAdminV2_getReportResult">
    <part name="getReportResult" element="tns:getReportResult" />
  </message>
  <message name="WsAdminV2_createCallVariablesGroup">
    <part name="createCallVariablesGroup" element="tns:createCallVariablesGroup" />
  </message>
  <message name="WsAdminV2_getCampaignStateResponse">
    <part name="getCampaignStateResponse" element="tns:getCampaignStateResponse" />
  </message>
  <message name="WsAdminV2_getUserInfo">
    <part name="getUserInfo" element="tns:getUserInfo" />
  </message>
  <message name="ListCantBeRemovedFault">
    <part name="ListCantBeRemovedFault" element="tns:ListCantBeRemovedFault" />
  </message>
  <message name="WsAdminV2_getContactFieldsResponse">
    <part name="getContactFieldsResponse" element="tns:getContactFieldsResponse" />
  </message>
  <message name="WsAdminV2_createUser">
    <part name="createUser" element="tns:createUser" />
  </message>
  <message name="WsAdminV2_createInboundCampaign">
    <part name="createInboundCampaign" element="tns:createInboundCampaign" />
  </message>
  <message name="WsAdminV2_modifyUserCannedReports">
    <part name="modifyUserCannedReports" element="tns:modifyUserCannedReports" />
  </message>
  <message name="WsAdminV2_updateContactsFtp">
    <part name="updateContactsFtp" element="tns:updateContactsFtp" />
  </message>
  <message name="WsAdminV2_createUserProfile">
    <part name="createUserProfile" element="tns:createUserProfile" />
  </message>
  <message name="WsAdminV2_stopCampaign">
    <part name="stopCampaign" element="tns:stopCampaign" />
  </message>
  <message name="WsAdminV2_createContactField">
    <part name="createContactField" element="tns:createContactField" />
  </message>
  <message name="WsAdminV2_setSkillVoicemailGreetingResponse">
    <part name="setSkillVoicemailGreetingResponse" element="tns:setSkillVoicemailGreetingResponse" />
  </message>
  <message name="WsAdminV2_deletePrompt">
    <part name="deletePrompt" element="tns:deletePrompt" />
  </message>
  <message name="WsAdminV2_deleteContactField">
    <part name="deleteContactField" element="tns:deleteContactField" />
  </message>
  <message name="WsAdminV2_getCallVariableGroupsResponse">
    <part name="getCallVariableGroupsResponse" element="tns:getCallVariableGroupsResponse" />
  </message>
  <message name="WsAdminV2_runReport">
    <part name="runReport" element="tns:runReport" />
  </message>
  <message name="CantModifyObjectFault">
    <part name="CantModifyObjectFault" element="tns:CantModifyObjectFault" />
  </message>
  <message name="CampaignStateUpdateFault">
    <part name="CampaignStateUpdateFault" element="tns:CampaignStateUpdateFault" />
  </message>
  <message name="WsAdminV2_deleteUserResponse">
    <part name="deleteUserResponse" element="tns:deleteUserResponse" />
  </message>
  <message name="WsAdminV2_getSkillsInfoResponse">
    <part name="getSkillsInfoResponse" element="tns:getSkillsInfoResponse" />
  </message>
  <message name="WsAdminV2_createCallVariablesGroupResponse">
    <part name="createCallVariablesGroupResponse" element="tns:createCallVariablesGroupResponse" />
  </message>
  <message name="UserDoesntHaveSkillFault">
    <part name="UserDoesntHaveSkillFault" element="tns:UserDoesntHaveSkillFault" />
  </message>
  <message name="WsAdminV2_getDispositionsImportResult">
    <part name="getDispositionsImportResult" element="tns:getDispositionsImportResult" />
  </message>
  <message name="WsAdminV2_deleteWebConnector">
    <part name="deleteWebConnector" element="tns:deleteWebConnector" />
  </message>
  <message name="WsAdminV2_modifyOutboundCampaignResponse">
    <part name="modifyOutboundCampaignResponse" element="tns:modifyOutboundCampaignResponse" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfileCrmCriteriaResponse">
    <part name="modifyCampaignProfileCrmCriteriaResponse" element="tns:modifyCampaignProfileCrmCriteriaResponse" />
  </message>
  <message name="WsAdminV2_deleteReasonCodeResponse">
    <part name="deleteReasonCodeResponse" element="tns:deleteReasonCodeResponse" />
  </message>
  <message name="WsAdminV2_modifyCallVariablesGroupResponse">
    <part name="modifyCallVariablesGroupResponse" element="tns:modifyCallVariablesGroupResponse" />
  </message>
  <message name="WsAdminV2_resetCampaign">
    <part name="resetCampaign" element="tns:resetCampaign" />
  </message>
  <message name="WsAdminV2_addToListCsvResponse">
    <part name="addToListCsvResponse" element="tns:addToListCsvResponse" />
  </message>
  <message name="WsAdminV2_getDispositions">
    <part name="getDispositions" element="tns:getDispositions" />
  </message>
  <message name="CrmFieldNotFoundFault">
    <part name="CrmFieldNotFoundFault" element="tns:CrmFieldNotFoundFault" />
  </message>
  <message name="WsAdminV2_getDispositionsResponse">
    <part name="getDispositionsResponse" element="tns:getDispositionsResponse" />
  </message>
  <message name="WsAdminV2_deleteReasonCodeByType">
    <part name="deleteReasonCodeByType" element="tns:deleteReasonCodeByType" />
  </message>
  <message name="ObjectInUseFault">
    <part name="ObjectInUseFault" element="tns:ObjectInUseFault" />
  </message>
  <message name="WsAdminV2_getContactFields">
    <part name="getContactFields" element="tns:getContactFields" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfileFilterOrder">
    <part name="modifyCampaignProfileFilterOrder" element="tns:modifyCampaignProfileFilterOrder" />
  </message>
  <message name="WsAdminV2_renameDisposition">
    <part name="renameDisposition" element="tns:renameDisposition" />
  </message>
  <message name="WsAdminV2_modifyUserProfileUserListResponse">
    <part name="modifyUserProfileUserListResponse" element="tns:modifyUserProfileUserListResponse" />
  </message>
  <message name="WsAdminV2_getUserVoicemailGreeting">
    <part name="getUserVoicemailGreeting" element="tns:getUserVoicemailGreeting" />
  </message>
  <message name="WsAdminV2_getCallLogReportCsv">
    <part name="getCallLogReportCsv" element="tns:getCallLogReportCsv" />
  </message>
  <message name="WsAdminV2_deleteFromListFtpResponse">
    <part name="deleteFromListFtpResponse" element="tns:deleteFromListFtpResponse" />
  </message>
  <message name="WsAdminV2_runReportResponse">
    <part name="runReportResponse" element="tns:runReportResponse" />
  </message>
  <message name="WsAdminV2_setDefaultIVRSchedule">
    <part name="setDefaultIVRSchedule" element="tns:setDefaultIVRSchedule" />
  </message>
  <message name="WsAdminV2_deleteCallVariablesGroup">
    <part name="deleteCallVariablesGroup" element="tns:deleteCallVariablesGroup" />
  </message>
  <message name="WsAdminV2_modifyDisposition">
    <part name="modifyDisposition" element="tns:modifyDisposition" />
  </message>
  <message name="WsAdminV2_getContactRecordsResponse">
    <part name="getContactRecordsResponse" element="tns:getContactRecordsResponse" />
  </message>
  <message name="TooManyExtensionsFault">
    <part name="TooManyExtensionsFault" element="tns:TooManyExtensionsFault" />
  </message>
  <message name="WsAdminV2_createReasonCode">
    <part name="createReasonCode" element="tns:createReasonCode" />
  </message>
  <message name="ListAlreadyAssignedFault">
    <part name="ListAlreadyAssignedFault" element="tns:ListAlreadyAssignedFault" />
  </message>
  <message name="PromptNotFoundFault">
    <part name="PromptNotFoundFault" element="tns:PromptNotFoundFault" />
  </message>
  <message name="WsAdminV2_addToListFtp">
    <part name="addToListFtp" element="tns:addToListFtp" />
  </message>
  <message name="WsAdminV2_deleteContactFieldResponse">
    <part name="deleteContactFieldResponse" element="tns:deleteContactFieldResponse" />
  </message>
  <message name="WsAdminV2_modifyCallVariableResponse">
    <part name="modifyCallVariableResponse" element="tns:modifyCallVariableResponse" />
  </message>
  <message name="WsAdminV2_getListsForCampaignResponse">
    <part name="getListsForCampaignResponse" element="tns:getListsForCampaignResponse" />
  </message>
  <message name="WsAdminV2_modifyUserProfileSkills">
    <part name="modifyUserProfileSkills" element="tns:modifyUserProfileSkills" />
  </message>
  <message name="WsAdminV2_deleteFromListFtp">
    <part name="deleteFromListFtp" element="tns:deleteFromListFtp" />
  </message>
  <message name="ImportInProgressFault">
    <part name="ImportInProgressFault" element="tns:ImportInProgressFault" />
  </message>
  <message name="WsAdminV2_removeNumbersFromDncResponse">
    <part name="removeNumbersFromDncResponse" element="tns:removeNumbersFromDncResponse" />
  </message>
  <message name="NotReadyReasonCodeNotFoundFault">
    <part name="NotReadyReasonCodeNotFoundFault" element="tns:NotReadyReasonCodeNotFoundFault" />
  </message>
  <message name="WsAdminV2_deleteListResponse">
    <part name="deleteListResponse" element="tns:deleteListResponse" />
  </message>
  <message name="WsAdminV2_modifyAutodialCampaign">
    <part name="modifyAutodialCampaign" element="tns:modifyAutodialCampaign" />
  </message>
  <message name="UserAlreadyHasSkillFault">
    <part name="UserAlreadyHasSkillFault" element="tns:UserAlreadyHasSkillFault" />
  </message>
  <message name="WsAdminV2_isImportRunning">
    <part name="isImportRunning" element="tns:isImportRunning" />
  </message>
  <message name="WsAdminV2_modifyCampaignListsResponse">
    <part name="modifyCampaignListsResponse" element="tns:modifyCampaignListsResponse" />
  </message>
  <message name="WsAdminV2_deleteFromListCsvResponse">
    <part name="deleteFromListCsvResponse" element="tns:deleteFromListCsvResponse" />
  </message>
  <message name="WsAdminV2_getCampaignProfileDispositions">
    <part name="getCampaignProfileDispositions" element="tns:getCampaignProfileDispositions" />
  </message>
  <message name="WsAdminV2_deleteFromContactsResponse">
    <part name="deleteFromContactsResponse" element="tns:deleteFromContactsResponse" />
  </message>
  <message name="WsAdminV2_addNumbersToDncResponse">
    <part name="addNumbersToDncResponse" element="tns:addNumbersToDncResponse" />
  </message>
  <message name="WsAdminV2_modifyUserProfileResponse">
    <part name="modifyUserProfileResponse" element="tns:modifyUserProfileResponse" />
  </message>
  <message name="WsAdminV2_closeSessionResponse">
    <part name="closeSessionResponse" element="tns:closeSessionResponse" />
  </message>
  <message name="WsAdminV2_modifyPromptTTSResponse">
    <part name="modifyPromptTTSResponse" element="tns:modifyPromptTTSResponse" />
  </message>
  <message name="UserNotFoundFault">
    <part name="UserNotFoundFault" element="tns:UserNotFoundFault" />
  </message>
  <message name="WsAdminV2_getPromptResponse">
    <part name="getPromptResponse" element="tns:getPromptResponse" />
  </message>
  <message name="ReasonCodeNotFoundFault">
    <part name="ReasonCodeNotFoundFault" element="tns:ReasonCodeNotFoundFault" />
  </message>
  <message name="WsAdminV2_checkDncForNumbersResponse">
    <part name="checkDncForNumbersResponse" element="tns:checkDncForNumbersResponse" />
  </message>
  <message name="WsAdminV2_getCallCountersState">
    <part name="getCallCountersState" element="tns:getCallCountersState" />
  </message>
  <message name="WsAdminV2_deleteUser">
    <part name="deleteUser" element="tns:deleteUser" />
  </message>
  <message name="WsAdminV2_isReportRunningResponse">
    <part name="isReportRunningResponse" element="tns:isReportRunningResponse" />
  </message>
  <message name="WsAdminV2_getDispositionsImportResultResponse">
    <part name="getDispositionsImportResultResponse" element="tns:getDispositionsImportResultResponse" />
  </message>
  <message name="SessionClosedFault">
    <part name="SessionClosedFault" element="tns:SessionClosedFault" />
  </message>
  <message name="InternalImportFault">
    <part name="InternalImportFault" element="tns:InternalImportFault" />
  </message>
  <message name="SkillAlreadyAssignedFault">
    <part name="SkillAlreadyAssignedFault" element="tns:SkillAlreadyAssignedFault" />
  </message>
  <message name="WsAdminV2_getCrmImportResult">
    <part name="getCrmImportResult" element="tns:getCrmImportResult" />
  </message>
  <message name="WsAdminV2_updateCrmRecordResponse">
    <part name="updateCrmRecordResponse" element="tns:updateCrmRecordResponse" />
  </message>
  <message name="InvalidUserDataFault">
    <part name="InvalidUserDataFault" element="tns:InvalidUserDataFault" />
  </message>
  <message name="WsAdminV2_startCampaign">
    <part name="startCampaign" element="tns:startCampaign" />
  </message>
  <message name="WsAdminV2_getSkillInfo">
    <part name="getSkillInfo" element="tns:getSkillInfo" />
  </message>
  <message name="WsAdminV2_addPromptTTS">
    <part name="addPromptTTS" element="tns:addPromptTTS" />
  </message>
  <message name="ScheduleOperationFailedFault">
    <part name="ScheduleOperationFailedFault" element="tns:ScheduleOperationFailedFault" />
  </message>
  <message name="WsAdminV2_modifyOutboundCampaign">
    <part name="modifyOutboundCampaign" element="tns:modifyOutboundCampaign" />
  </message>
  <message name="DNISIsNotAssignedFault">
    <part name="DNISIsNotAssignedFault" element="tns:DNISIsNotAssignedFault" />
  </message>
  <message name="CampaignAlreadyExistsFault">
    <part name="CampaignAlreadyExistsFault" element="tns:CampaignAlreadyExistsFault" />
  </message>
  <message name="WsAdminV2_getUsersInfoResponse">
    <part name="getUsersInfoResponse" element="tns:getUsersInfoResponse" />
  </message>
  <message name="WsAdminV2_modifyReasonCodeResponse">
    <part name="modifyReasonCodeResponse" element="tns:modifyReasonCodeResponse" />
  </message>
  <message name="WsAdminV2_getUsersGeneralInfoResponse">
    <part name="getUsersGeneralInfoResponse" element="tns:getUsersGeneralInfoResponse" />
  </message>
  <message name="WsAdminV2_updateDispositionsCsv">
    <part name="updateDispositionsCsv" element="tns:updateDispositionsCsv" />
  </message>
  <message name="WsAdminV2_addRecordToList">
    <part name="addRecordToList" element="tns:addRecordToList" />
  </message>
  <message name="WsAdminV2_deleteIVRScriptResponse">
    <part name="deleteIVRScriptResponse" element="tns:deleteIVRScriptResponse" />
  </message>
  <message name="WsAdminV2_forceStopCampaign">
    <part name="forceStopCampaign" element="tns:forceStopCampaign" />
  </message>
  <message name="WsAdminV2_getCallVariablesResponse">
    <part name="getCallVariablesResponse" element="tns:getCallVariablesResponse" />
  </message>
  <message name="WsAdminV2_createAutodialCampaignResponse">
    <part name="createAutodialCampaignResponse" element="tns:createAutodialCampaignResponse" />
  </message>
  <message name="DialProfileNotFoundFault">
    <part name="DialProfileNotFoundFault" element="tns:DialProfileNotFoundFault" />
  </message>
  <message name="WsAdminV2_deleteFromContactsFtpResponse">
    <part name="deleteFromContactsFtpResponse" element="tns:deleteFromContactsFtpResponse" />
  </message>
  <message name="UserAlreadyExistsFault">
    <part name="UserAlreadyExistsFault" element="tns:UserAlreadyExistsFault" />
  </message>
  <message name="DispositionNotAllowedFault">
    <part name="DispositionNotAllowedFault" element="tns:DispositionNotAllowedFault" />
  </message>
  <message name="WsAdminV2_createOutboundCampaignResponse">
    <part name="createOutboundCampaignResponse" element="tns:createOutboundCampaignResponse" />
  </message>
  <message name="PromptCantBeDeletedFault">
    <part name="PromptCantBeDeletedFault" element="tns:PromptCantBeDeletedFault" />
  </message>
  <message name="WsAdminV2_modifyIVRScript">
    <part name="modifyIVRScript" element="tns:modifyIVRScript" />
  </message>
  <message name="WsAdminV2_modifyVCCConfiguration">
    <part name="modifyVCCConfiguration" element="tns:modifyVCCConfiguration" />
  </message>
  <message name="UnknownIdentifierFault">
    <part name="UnknownIdentifierFault" element="tns:UnknownIdentifierFault" />
  </message>
  <message name="WsAdminV2_deleteIVRScript">
    <part name="deleteIVRScript" element="tns:deleteIVRScript" />
  </message>
  <message name="WsAdminV2_getDialingRulesResponse">
    <part name="getDialingRulesResponse" element="tns:getDialingRulesResponse" />
  </message>
  <message name="DispositionNotFoundFault">
    <part name="DispositionNotFoundFault" element="tns:DispositionNotFoundFault" />
  </message>
  <message name="WsAdminV2_getDispositionResponse">
    <part name="getDispositionResponse" element="tns:getDispositionResponse" />
  </message>
  <message name="WsAdminV2_getUsersGeneralInfo">
    <part name="getUsersGeneralInfo" element="tns:getUsersGeneralInfo" />
  </message>
  <message name="WsAdminV2_getAgentGroupResponse">
    <part name="getAgentGroupResponse" element="tns:getAgentGroupResponse" />
  </message>
  <message name="WsAdminV2_getListImportResult">
    <part name="getListImportResult" element="tns:getListImportResult" />
  </message>
  <message name="WsAdminV2_createIVRScriptResponse">
    <part name="createIVRScriptResponse" element="tns:createIVRScriptResponse" />
  </message>
  <message name="WsAdminV2_deleteCallVariable">
    <part name="deleteCallVariable" element="tns:deleteCallVariable" />
  </message>
  <message name="TtsGenerationFailed">
    <part name="TtsGenerationFailed" element="tns:TtsGenerationFailed" />
  </message>
  <message name="AdminSessionClosedFault">
    <part name="AdminSessionClosedFault" element="tns:AdminSessionClosedFault" />
  </message>
  <message name="WsAdminV2_addPromptWavInline">
    <part name="addPromptWavInline" element="tns:addPromptWavInline" />
  </message>
  <message name="WsAdminV2_modifyPromptWav">
    <part name="modifyPromptWav" element="tns:modifyPromptWav" />
  </message>
  <message name="WsAdminV2_getCallCountersStateResponse">
    <part name="getCallCountersStateResponse" element="tns:getCallCountersStateResponse" />
  </message>
  <message name="WsAdminV2_modifyPromptWavResponse">
    <part name="modifyPromptWavResponse" element="tns:modifyPromptWavResponse" />
  </message>
  <message name="WsAdminV2_createCallVariable">
    <part name="createCallVariable" element="tns:createCallVariable" />
  </message>
  <message name="ConcurrentModificationFault">
    <part name="ConcurrentModificationFault" element="tns:ConcurrentModificationFault" />
  </message>
  <message name="OperationsLimitExceededFault">
    <part name="OperationsLimitExceededFault" element="tns:OperationsLimitExceededFault" />
  </message>
  <message name="WrongCampaignStateFault">
    <part name="WrongCampaignStateFault" element="tns:WrongCampaignStateFault" />
  </message>
  <message name="NICELicencesExceededFault">
    <part name="NICELicencesExceededFault" element="tns:NICELicencesExceededFault" />
  </message>
  <message name="WsAdminV2_getDisposition">
    <part name="getDisposition" element="tns:getDisposition" />
  </message>
  <message name="WsAdminV2_addPromptWav">
    <part name="addPromptWav" element="tns:addPromptWav" />
  </message>
  <message name="WrongCampaignTypeFault">
    <part name="WrongCampaignTypeFault" element="tns:WrongCampaignTypeFault" />
  </message>
  <message name="WsAdminV2_deleteSkillResponse">
    <part name="deleteSkillResponse" element="tns:deleteSkillResponse" />
  </message>
  <message name="WsAdminV2_getSkillVoicemailGreeting">
    <part name="getSkillVoicemailGreeting" element="tns:getSkillVoicemailGreeting" />
  </message>
  <message name="WsAdminV2_getDNISListResponse">
    <part name="getDNISListResponse" element="tns:getDNISListResponse" />
  </message>
  <message name="WsAdminV2_deleteCampaignProfileResponse">
    <part name="deleteCampaignProfileResponse" element="tns:deleteCampaignProfileResponse" />
  </message>
  <message name="WsAdminV2_createInboundCampaignResponse">
    <part name="createInboundCampaignResponse" element="tns:createInboundCampaignResponse" />
  </message>
  <message name="WsAdminV2_getSkills">
    <part name="getSkills" element="tns:getSkills" />
  </message>
  <message name="TooManyUsersFault">
    <part name="TooManyUsersFault" element="tns:TooManyUsersFault" />
  </message>
  <message name="WsAdminV2_modifyUserProfileUserList">
    <part name="modifyUserProfileUserList" element="tns:modifyUserProfileUserList" />
  </message>
  <message name="WsAdminV2_getCampaignDNISListResponse">
    <part name="getCampaignDNISListResponse" element="tns:getCampaignDNISListResponse" />
  </message>
  <message name="WsAdminV2_getSkillResponse">
    <part name="getSkillResponse" element="tns:getSkillResponse" />
  </message>
  <message name="WsAdminV2_removeSkillsFromCampaign">
    <part name="removeSkillsFromCampaign" element="tns:removeSkillsFromCampaign" />
  </message>
  <message name="WsAdminV2_resetListPositionResponse">
    <part name="resetListPositionResponse" element="tns:resetListPositionResponse" />
  </message>
  <message name="WsAdminV2_getCampaignDNISList">
    <part name="getCampaignDNISList" element="tns:getCampaignDNISList" />
  </message>
  <message name="WsAdminV2_getUserGeneralInfoResponse">
    <part name="getUserGeneralInfoResponse" element="tns:getUserGeneralInfoResponse" />
  </message>
  <message name="WsAdminV2_userSkillModify">
    <part name="userSkillModify" element="tns:userSkillModify" />
  </message>
  <message name="WsAdminV2_modifyCallVariable">
    <part name="modifyCallVariable" element="tns:modifyCallVariable" />
  </message>
  <message name="WsAdminV2_removeDNISFromCampaign">
    <part name="removeDNISFromCampaign" element="tns:removeDNISFromCampaign" />
  </message>
  <message name="WsAdminV2_deleteFromContacts">
    <part name="deleteFromContacts" element="tns:deleteFromContacts" />
  </message>
  <message name="WsAdminV2_getCampaignProfilesResponse">
    <part name="getCampaignProfilesResponse" element="tns:getCampaignProfilesResponse" />
  </message>
  <message name="WsAdminV2_deleteUserProfile">
    <part name="deleteUserProfile" element="tns:deleteUserProfile" />
  </message>
  <message name="WsAdminV2_deleteAgentGroup">
    <part name="deleteAgentGroup" element="tns:deleteAgentGroup" />
  </message>
  <message name="SkillCantBeDeletedFault">
    <part name="SkillCantBeDeletedFault" element="tns:SkillCantBeDeletedFault" />
  </message>
  <message name="WsAdminV2_removeDNISFromCampaignResponse">
    <part name="removeDNISFromCampaignResponse" element="tns:removeDNISFromCampaignResponse" />
  </message>
  <message name="WsAdminV2_deleteCampaign">
    <part name="deleteCampaign" element="tns:deleteCampaign" />
  </message>
  <message name="WsAdminV2_modifyCampaignProfileDispositionsResponse">
    <part name="modifyCampaignProfileDispositionsResponse" element="tns:modifyCampaignProfileDispositionsResponse" />
  </message>
  <message name="WsAdminV2_checkDncForNumbers">
    <part name="checkDncForNumbers" element="tns:checkDncForNumbers" />
  </message>
  <message name="WsAdminV2_getUserInfoResponse">
    <part name="getUserInfoResponse" element="tns:getUserInfoResponse" />
  </message>
  <message name="WsAdminV2_getSkillsResponse">
    <part name="getSkillsResponse" element="tns:getSkillsResponse" />
  </message>
  <message name="WsAdminV2_getSkillsInfo">
    <part name="getSkillsInfo" element="tns:getSkillsInfo" />
  </message>
  <message name="WsAdminV2_setDialingRulesResponse">
    <part name="setDialingRulesResponse" element="tns:setDialingRulesResponse" />
  </message>
  <message name="WsAdminV2_getReasonCodeResponse">
    <part name="getReasonCodeResponse" element="tns:getReasonCodeResponse" />
  </message>
  <message name="WsAdminV2_addDNISToCampaignResponse">
    <part name="addDNISToCampaignResponse" element="tns:addDNISToCampaignResponse" />
  </message>
  <message name="WsAdminV2_createAgentGroupResponse">
    <part name="createAgentGroupResponse" element="tns:createAgentGroupResponse" />
  </message>
  <message name="WsAdminV2_removeDispositionsFromCampaign">
    <part name="removeDispositionsFromCampaign" element="tns:removeDispositionsFromCampaign" />
  </message>
  <portType name="WsAdminV2">
    <documentation>Web service to automate VCC Admin actions. Version [9.2.00/2]</documentation>
    <jaxws:bindings>
      <jaxws:class name="WsAdminV2">
        <jaxws:javadoc>Web service to automate VCC Admin actions. Version [9.2.00/2]</jaxws:javadoc>
      </jaxws:class>
    </jaxws:bindings>
    <operation name="addDNISToCampaign" parameterOrder="addDNISToCampaign">
      <documentation>Adds specified list of DNIS's to campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="addDNISToCampaign">
          <jaxws:javadoc>Adds specified list of DNIS's to campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addDNISToCampaign" />
      <output message="tns:WsAdminV2_addDNISToCampaignResponse" />
      <fault name="DNISAlreadyAssignedFault" message="tns:DNISAlreadyAssignedFault" />
      <fault name="DNISNotFoundFault" message="tns:DNISNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="WrongCampaignStateFault" message="tns:WrongCampaignStateFault" />
    </operation>
    <operation name="addDispositionsToCampaign" parameterOrder="addDispositionsToCampaign">
      <documentation>Adds list of dispositions to specified campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="addDispositionsToCampaign">
          <jaxws:javadoc>Adds list of dispositions to specified campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addDispositionsToCampaign" />
      <output message="tns:WsAdminV2_addDispositionsToCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AllowedOnlyForPreviewCampaignFault" message="tns:AllowedOnlyForPreviewCampaignFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="DispositionNotAllowedFault" message="tns:DispositionNotAllowedFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="DispositionIsAlreadyAssignedFault" message="tns:DispositionIsAlreadyAssignedFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
    </operation>
    <operation name="addListsToCampaign" parameterOrder="addListsToCampaign">
      <documentation>Adds specified lists to campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="addListsToCampaign">
          <jaxws:javadoc>Adds specified lists to campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addListsToCampaign" />
      <output message="tns:WsAdminV2_addListsToCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="ListAlreadyAssignedFault" message="tns:ListAlreadyAssignedFault" />
    </operation>
    <operation name="addNumbersToDnc" parameterOrder="addNumbersToDnc">
      <input message="tns:WsAdminV2_addNumbersToDnc" />
      <output message="tns:WsAdminV2_addNumbersToDncResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="TooManyItemsFault" message="tns:TooManyItemsFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="addPromptTTS" parameterOrder="addPromptTTS">
      <documentation>Adds new TTS generated prompt</documentation>
      <jaxws:bindings>
        <jaxws:method name="addPromptTTS">
          <jaxws:javadoc>Adds new TTS generated prompt</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addPromptTTS" />
      <output message="tns:WsAdminV2_addPromptTTSResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="TtsGenerationFailed" message="tns:TtsGenerationFailed" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="PromptAlreadyExistsFault" message="tns:PromptAlreadyExistsFault" />
    </operation>
    <operation name="addPromptWav" parameterOrder="addPromptWav">
      <documentation>Adds new pre-recorded prompt</documentation>
      <jaxws:bindings>
        <jaxws:method name="addPromptWav">
          <jaxws:javadoc>Adds new pre-recorded prompt</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addPromptWav" />
      <output message="tns:WsAdminV2_addPromptWavResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="WavFileUploadFailedFault" message="tns:WavFileUploadFailedFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="PromptAlreadyExistsFault" message="tns:PromptAlreadyExistsFault" />
    </operation>
    <operation name="addPromptWavInline" parameterOrder="addPromptWavInline">
      <documentation>Adds new pre-recorded prompt</documentation>
      <jaxws:bindings>
        <jaxws:method name="addPromptWavInline">
          <jaxws:javadoc>Adds new pre-recorded prompt</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addPromptWavInline" />
      <output message="tns:WsAdminV2_addPromptWavInlineResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="WavFileUploadFailedFault" message="tns:WavFileUploadFailedFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="PromptAlreadyExistsFault" message="tns:PromptAlreadyExistsFault" />
    </operation>
    <operation name="addRecordToList" parameterOrder="addRecordToList">
      <input message="tns:WsAdminV2_addRecordToList" />
      <output message="tns:WsAdminV2_addRecordToListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="InternalImportFault" message="tns:InternalImportFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="ImportCancelledFault" message="tns:ImportCancelledFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="addSkillsToCampaign" parameterOrder="addSkillsToCampaign">
      <documentation>Adds list of skills to specified campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="addSkillsToCampaign">
          <jaxws:javadoc>Adds list of skills to specified campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addSkillsToCampaign" />
      <output message="tns:WsAdminV2_addSkillsToCampaignResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="SkillAlreadyAssignedFault" message="tns:SkillAlreadyAssignedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="addToList" parameterOrder="addToList">
      <documentation>Performs records import to the specified list according to the specified import settings. May affect CRM records if corresponding options are chosen. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="addToList">
          <jaxws:javadoc>Performs records import to the specified list according to the specified import settings. May affect CRM records if corresponding options are chosen. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addToList" />
      <output message="tns:WsAdminV2_addToListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="addToListCsv" parameterOrder="addToListCsv">
      <documentation>Performs records import to the specified list according to the specified import settings. May affect CRM records if corresponding options are chosen. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="addToListCsv">
          <jaxws:javadoc>Performs records import to the specified list according to the specified import settings. May affect CRM records if corresponding options are chosen. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addToListCsv" />
      <output message="tns:WsAdminV2_addToListCsvResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="addToListFtp" parameterOrder="addToListFtp">
      <documentation>Adds schedule to update list using FTP server</documentation>
      <jaxws:bindings>
        <jaxws:method name="addToListFtp">
          <jaxws:javadoc>Adds schedule to update list using FTP server</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_addToListFtp" />
      <output message="tns:WsAdminV2_addToListFtpResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="ScheduleOperationFailedFault" message="tns:ScheduleOperationFailedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ImportInProgressFault" message="tns:ImportInProgressFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="ScheduleNotFoundFault" message="tns:ScheduleNotFoundFault" />
    </operation>
    <operation name="asyncAddRecordsToList" parameterOrder="asyncAddRecordsToList">
      <input message="tns:WsAdminV2_asyncAddRecordsToList" />
      <output message="tns:WsAdminV2_asyncAddRecordsToListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="InternalImportFault" message="tns:InternalImportFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="asyncDeleteRecordsFromList" parameterOrder="asyncDeleteRecordsFromList">
      <input message="tns:WsAdminV2_asyncDeleteRecordsFromList" />
      <output message="tns:WsAdminV2_asyncDeleteRecordsFromListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="InternalImportFault" message="tns:InternalImportFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="asyncUpdateCrmRecords" parameterOrder="asyncUpdateCrmRecords">
      <input message="tns:WsAdminV2_asyncUpdateCrmRecords" />
      <output message="tns:WsAdminV2_asyncUpdateCrmRecordsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="InternalImportFault" message="tns:InternalImportFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="checkDncForNumbers" parameterOrder="checkDncForNumbers">
      <input message="tns:WsAdminV2_checkDncForNumbers" />
      <output message="tns:WsAdminV2_checkDncForNumbersResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="TooManyItemsFault" message="tns:TooManyItemsFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="closeSession" parameterOrder="closeSession">
      <input message="tns:WsAdminV2_closeSession" />
      <output message="tns:WsAdminV2_closeSessionResponse" />
    </operation>
    <operation name="createAgentGroup" parameterOrder="createAgentGroup">
      <input message="tns:WsAdminV2_createAgentGroup" />
      <output message="tns:WsAdminV2_createAgentGroupResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="UserHasNoRequiredRoleFault" message="tns:UserHasNoRequiredRoleFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="createAutodialCampaign" parameterOrder="createAutodialCampaign">
      <documentation>Creates autodial campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="createAutodialCampaign">
          <jaxws:javadoc>Creates autodial campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createAutodialCampaign" />
      <output message="tns:WsAdminV2_createAutodialCampaignResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="CampaignAlreadyExistsFault" message="tns:CampaignAlreadyExistsFault" />
      <fault name="IvrScriptNotFoundFault" message="tns:IvrScriptNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ReasonCodeNotFoundFault" message="tns:ReasonCodeNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="DialProfileNotFoundFault" message="tns:DialProfileNotFoundFault" />
    </operation>
    <operation name="createCallVariable" parameterOrder="createCallVariable">
      <input message="tns:WsAdminV2_createCallVariable" />
      <output message="tns:WsAdminV2_createCallVariableResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="createCallVariablesGroup" parameterOrder="createCallVariablesGroup">
      <input message="tns:WsAdminV2_createCallVariablesGroup" />
      <output message="tns:WsAdminV2_createCallVariablesGroupResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="createCampaignProfile" parameterOrder="createCampaignProfile">
      <input message="tns:WsAdminV2_createCampaignProfile" />
      <output message="tns:WsAdminV2_createCampaignProfileResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="createContactField" parameterOrder="createContactField">
      <input message="tns:WsAdminV2_createContactField" />
      <output message="tns:WsAdminV2_createContactFieldResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="ObjectsCountLimitExceededFault" message="tns:ObjectsCountLimitExceededFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="createDisposition" parameterOrder="createDisposition">
      <documentation>Creates disposition with defined attributes</documentation>
      <jaxws:bindings>
        <jaxws:method name="createDisposition">
          <jaxws:javadoc>Creates disposition with defined attributes</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createDisposition" />
      <output message="tns:WsAdminV2_createDispositionResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="DispositionAlreadyExistsFault" message="tns:DispositionAlreadyExistsFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="createIVRScript" parameterOrder="createIVRScript">
      <input message="tns:WsAdminV2_createIVRScript" />
      <output message="tns:WsAdminV2_createIVRScriptResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="createInboundCampaign" parameterOrder="createInboundCampaign">
      <documentation>Creates inbound campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="createInboundCampaign">
          <jaxws:javadoc>Creates inbound campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createInboundCampaign" />
      <output message="tns:WsAdminV2_createInboundCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="CampaignAlreadyExistsFault" message="tns:CampaignAlreadyExistsFault" />
      <fault name="IvrScriptNotFoundFault" message="tns:IvrScriptNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ReasonCodeNotFoundFault" message="tns:ReasonCodeNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="DialProfileNotFoundFault" message="tns:DialProfileNotFoundFault" />
    </operation>
    <operation name="createList" parameterOrder="createList">
      <documentation>Creates a list with a given name. Throws exception if list with such name already exists.</documentation>
      <jaxws:bindings>
        <jaxws:method name="createList">
          <jaxws:javadoc>Creates a list with a given name. Throws exception if list with such name already exists.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createList" />
      <output message="tns:WsAdminV2_createListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ListAlreadyExistsFault" message="tns:ListAlreadyExistsFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="createOutboundCampaign" parameterOrder="createOutboundCampaign">
      <documentation>Creates outbound campaign with specified attributes</documentation>
      <jaxws:bindings>
        <jaxws:method name="createOutboundCampaign">
          <jaxws:javadoc>Creates outbound campaign with specified attributes</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createOutboundCampaign" />
      <output message="tns:WsAdminV2_createOutboundCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="CampaignAlreadyExistsFault" message="tns:CampaignAlreadyExistsFault" />
      <fault name="IvrScriptNotFoundFault" message="tns:IvrScriptNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ReasonCodeNotFoundFault" message="tns:ReasonCodeNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="DialProfileNotFoundFault" message="tns:DialProfileNotFoundFault" />
    </operation>
    <operation name="createReasonCode" parameterOrder="createReasonCode">
      <documentation>Creates reason code</documentation>
      <jaxws:bindings>
        <jaxws:method name="createReasonCode">
          <jaxws:javadoc>Creates reason code</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createReasonCode" />
      <output message="tns:WsAdminV2_createReasonCodeResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="ReasonCodeCountLimitExceededFault" message="tns:ReasonCodeCountLimitExceededFault" />
    </operation>
    <operation name="createSkill" parameterOrder="createSkill">
      <documentation>Creates a new skill. Returns info for just created skill. Throws exception if skill already exist, if skills limit is reached, if skill attributes are invalid.</documentation>
      <jaxws:bindings>
        <jaxws:method name="createSkill">
          <jaxws:javadoc>Creates a new skill. Returns info for just created skill. Throws exception if skill already exist, if skills limit is reached, if skill attributes are invalid.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createSkill" />
      <output message="tns:WsAdminV2_createSkillResponse" />
      <fault name="SkillAlreadyExistsFault" message="tns:SkillAlreadyExistsFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="ObjectsCountLimitExceededFault" message="tns:ObjectsCountLimitExceededFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="createUser" parameterOrder="createUser">
      <documentation>Creates a new user. Returns general info for just created user. Throws exception if user already exist, if users limit is reached, if user attributes are invalid.</documentation>
      <jaxws:bindings>
        <jaxws:method name="createUser">
          <jaxws:javadoc>Creates a new user. Returns general info for just created user. Throws exception if user already exist, if users limit is reached, if user attributes are invalid.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_createUser" />
      <output message="tns:WsAdminV2_createUserResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedOsLoginFault" message="tns:MissedOsLoginFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="UserHasNoRequiredRoleFault" message="tns:UserHasNoRequiredRoleFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="TooManyExtensionsFault" message="tns:TooManyExtensionsFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ExtensionAlreadyInUseFault" message="tns:ExtensionAlreadyInUseFault" />
      <fault name="InvalidUserDataFault" message="tns:InvalidUserDataFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="TooManyUsersFault" message="tns:TooManyUsersFault" />
      <fault name="UserAlreadyExistsFault" message="tns:UserAlreadyExistsFault" />
      <fault name="NICELicencesExceededFault" message="tns:NICELicencesExceededFault" />
    </operation>
    <operation name="createUserProfile" parameterOrder="createUserProfile">
      <input message="tns:WsAdminV2_createUserProfile" />
      <output message="tns:WsAdminV2_createUserProfileResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedOsLoginFault" message="tns:MissedOsLoginFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="NICELicencesExceededFault" message="tns:NICELicencesExceededFault" />
    </operation>
    <operation name="createWebConnector" parameterOrder="createWebConnector">
      <input message="tns:WsAdminV2_createWebConnector" />
      <output message="tns:WsAdminV2_createWebConnectorResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ObjectAlreadyExistsFault" message="tns:ObjectAlreadyExistsFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteAgentGroup" parameterOrder="deleteAgentGroup">
      <input message="tns:WsAdminV2_deleteAgentGroup" />
      <output message="tns:WsAdminV2_deleteAgentGroupResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteAllFromList" parameterOrder="deleteAllFromList">
      <documentation>Removes all records from the specified list. The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteAllFromList">
          <jaxws:javadoc>Removes all records from the specified list. The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteAllFromList" />
      <output message="tns:WsAdminV2_deleteAllFromListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteCallVariable" parameterOrder="deleteCallVariable">
      <input message="tns:WsAdminV2_deleteCallVariable" />
      <output message="tns:WsAdminV2_deleteCallVariableResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteCallVariablesGroup" parameterOrder="deleteCallVariablesGroup">
      <input message="tns:WsAdminV2_deleteCallVariablesGroup" />
      <output message="tns:WsAdminV2_deleteCallVariablesGroupResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ObjectInUseFault" message="tns:ObjectInUseFault" />
    </operation>
    <operation name="deleteCampaign" parameterOrder="deleteCampaign">
      <documentation>Deletes campaign with specified name</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteCampaign">
          <jaxws:javadoc>Deletes campaign with specified name</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteCampaign" />
      <output message="tns:WsAdminV2_deleteCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ImportInProgressFault" message="tns:ImportInProgressFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="WrongCampaignStateFault" message="tns:WrongCampaignStateFault" />
    </operation>
    <operation name="deleteCampaignProfile" parameterOrder="deleteCampaignProfile">
      <input message="tns:WsAdminV2_deleteCampaignProfile" />
      <output message="tns:WsAdminV2_deleteCampaignProfileResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ObjectInUseFault" message="tns:ObjectInUseFault" />
    </operation>
    <operation name="deleteContactField" parameterOrder="deleteContactField">
      <input message="tns:WsAdminV2_deleteContactField" />
      <output message="tns:WsAdminV2_deleteContactFieldResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ObjectInUseFault" message="tns:ObjectInUseFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="deleteFromContacts" parameterOrder="deleteFromContacts">
      <documentation>Performs records import to CRM data according to the specified import settings. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteFromContacts">
          <jaxws:javadoc>Performs records import to CRM data according to the specified import settings. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteFromContacts" />
      <output message="tns:WsAdminV2_deleteFromContactsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="deleteFromContactsCsv" parameterOrder="deleteFromContactsCsv">
      <documentation>Performs records deletion from CRM data according to the specified deletion settings. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteFromContactsCsv">
          <jaxws:javadoc>Performs records deletion from CRM data according to the specified deletion settings. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteFromContactsCsv" />
      <output message="tns:WsAdminV2_deleteFromContactsCsvResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteFromContactsFtp" parameterOrder="deleteFromContactsFtp">
      <documentation>Adds schedule to remove records from contacts list using FTP server</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteFromContactsFtp">
          <jaxws:javadoc>Adds schedule to remove records from contacts list using FTP server</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteFromContactsFtp" />
      <output message="tns:WsAdminV2_deleteFromContactsFtpResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="ScheduleOperationFailedFault" message="tns:ScheduleOperationFailedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ImportInProgressFault" message="tns:ImportInProgressFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="ScheduleNotFoundFault" message="tns:ScheduleNotFoundFault" />
    </operation>
    <operation name="deleteFromList" parameterOrder="deleteFromList">
      <documentation>Performs records deletion from the specified list according to the specified deletion settings. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteFromList">
          <jaxws:javadoc>Performs records deletion from the specified list according to the specified deletion settings. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteFromList" />
      <output message="tns:WsAdminV2_deleteFromListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="deleteFromListCsv" parameterOrder="deleteFromListCsv">
      <documentation>Performs records deletion from the specified list according to the specified deletion settings. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteFromListCsv">
          <jaxws:javadoc>Performs records deletion from the specified list according to the specified deletion settings. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteFromListCsv" />
      <output message="tns:WsAdminV2_deleteFromListCsvResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="deleteFromListFtp" parameterOrder="deleteFromListFtp">
      <documentation>Adds schedule to remove records from list using FTP server</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteFromListFtp">
          <jaxws:javadoc>Adds schedule to remove records from list using FTP server</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteFromListFtp" />
      <output message="tns:WsAdminV2_deleteFromListFtpResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="ScheduleOperationFailedFault" message="tns:ScheduleOperationFailedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ImportInProgressFault" message="tns:ImportInProgressFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="ScheduleNotFoundFault" message="tns:ScheduleNotFoundFault" />
    </operation>
    <operation name="deleteIVRScript" parameterOrder="deleteIVRScript">
      <input message="tns:WsAdminV2_deleteIVRScript" />
      <output message="tns:WsAdminV2_deleteIVRScriptResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ObjectInUseFault" message="tns:ObjectInUseFault" />
    </operation>
    <operation name="deleteList" parameterOrder="deleteList">
      <documentation>Removes list</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteList">
          <jaxws:javadoc>Removes list</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteList" />
      <output message="tns:WsAdminV2_deleteListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ListCantBeRemovedFault" message="tns:ListCantBeRemovedFault" />
    </operation>
    <operation name="deletePrompt" parameterOrder="deletePrompt">
      <documentation>Removes specified prompt</documentation>
      <jaxws:bindings>
        <jaxws:method name="deletePrompt">
          <jaxws:javadoc>Removes specified prompt</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deletePrompt" />
      <output message="tns:WsAdminV2_deletePromptResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="PromptCantBeDeletedFault" message="tns:PromptCantBeDeletedFault" />
    </operation>
    <operation name="deleteReasonCode" parameterOrder="deleteReasonCode">
      <documentation>Deletes specified reason code</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteReasonCode">
          <jaxws:javadoc>Deletes specified reason code</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteReasonCode" />
      <output message="tns:WsAdminV2_deleteReasonCodeResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteReasonCodeByType" parameterOrder="deleteReasonCodeByType">
      <documentation>Deletes specified reason code</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteReasonCodeByType">
          <jaxws:javadoc>Deletes specified reason code</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteReasonCodeByType" />
      <output message="tns:WsAdminV2_deleteReasonCodeByTypeResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteRecordFromList" parameterOrder="deleteRecordFromList">
      <input message="tns:WsAdminV2_deleteRecordFromList" />
      <output message="tns:WsAdminV2_deleteRecordFromListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="InternalImportFault" message="tns:InternalImportFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="ImportCancelledFault" message="tns:ImportCancelledFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="deleteSkill" parameterOrder="deleteSkill">
      <documentation>Removes a skill. Throws exception if skill doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteSkill">
          <jaxws:javadoc>Removes a skill. Throws exception if skill doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteSkill" />
      <output message="tns:WsAdminV2_deleteSkillResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="SkillCantBeDeletedFault" message="tns:SkillCantBeDeletedFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="deleteUser" parameterOrder="deleteUser">
      <documentation>Removes a user. Throws exception if user doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="deleteUser">
          <jaxws:javadoc>Removes a user. Throws exception if user doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_deleteUser" />
      <output message="tns:WsAdminV2_deleteUserResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="UserCantBeDeletedFault" message="tns:UserCantBeDeletedFault" />
    </operation>
    <operation name="deleteUserProfile" parameterOrder="deleteUserProfile">
      <input message="tns:WsAdminV2_deleteUserProfile" />
      <output message="tns:WsAdminV2_deleteUserProfileResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ObjectInUseFault" message="tns:ObjectInUseFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="deleteWebConnector" parameterOrder="deleteWebConnector">
      <input message="tns:WsAdminV2_deleteWebConnector" />
      <output message="tns:WsAdminV2_deleteWebConnectorResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ObjectInUseFault" message="tns:ObjectInUseFault" />
    </operation>
    <operation name="forceStopCampaign" parameterOrder="forceStopCampaign">
      <documentation>Forced campaign stop</documentation>
      <jaxws:bindings>
        <jaxws:method name="forceStopCampaign">
          <jaxws:javadoc>Forced campaign stop</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_forceStopCampaign" />
      <output message="tns:WsAdminV2_forceStopCampaignResponse" />
      <fault name="CampaignStateUpdateFault" message="tns:CampaignStateUpdateFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getAgentAuditReport" parameterOrder="getAgentAuditReport">
      <input message="tns:WsAdminV2_getAgentAuditReport" />
      <output message="tns:WsAdminV2_getAgentAuditReportResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="LogoutReasonCodeNotFoundFault" message="tns:LogoutReasonCodeNotFoundFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="NotReadyReasonCodeNotFoundFault" message="tns:NotReadyReasonCodeNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getAgentAuditReportCsv" parameterOrder="getAgentAuditReportCsv">
      <input message="tns:WsAdminV2_getAgentAuditReportCsv" />
      <output message="tns:WsAdminV2_getAgentAuditReportCsvResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="LogoutReasonCodeNotFoundFault" message="tns:LogoutReasonCodeNotFoundFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="NotReadyReasonCodeNotFoundFault" message="tns:NotReadyReasonCodeNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getAgentGroup" parameterOrder="getAgentGroup">
      <input message="tns:WsAdminV2_getAgentGroup" />
      <output message="tns:WsAdminV2_getAgentGroupResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getAgentGroups" parameterOrder="getAgentGroups">
      <input message="tns:WsAdminV2_getAgentGroups" />
      <output message="tns:WsAdminV2_getAgentGroupsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getAutodialCampaign" parameterOrder="getAutodialCampaign">
      <documentation>Returns autodial campaign with specified name</documentation>
      <jaxws:bindings>
        <jaxws:method name="getAutodialCampaign">
          <jaxws:javadoc>Returns autodial campaign with specified name</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getAutodialCampaign" />
      <output message="tns:WsAdminV2_getAutodialCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCallCountersState" parameterOrder="getCallCountersState">
      <input message="tns:WsAdminV2_getCallCountersState" />
      <output message="tns:WsAdminV2_getCallCountersStateResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="SessionClosedFault" message="tns:SessionClosedFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCallLogReport" parameterOrder="getCallLogReport">
      <input message="tns:WsAdminV2_getCallLogReport" />
      <output message="tns:WsAdminV2_getCallLogReportResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
    </operation>
    <operation name="getCallLogReportCsv" parameterOrder="getCallLogReportCsv">
      <input message="tns:WsAdminV2_getCallLogReportCsv" />
      <output message="tns:WsAdminV2_getCallLogReportCsvResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
    </operation>
    <operation name="getCallVariableGroups" parameterOrder="getCallVariableGroups">
      <input message="tns:WsAdminV2_getCallVariableGroups" />
      <output message="tns:WsAdminV2_getCallVariableGroupsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCallVariables" parameterOrder="getCallVariables">
      <input message="tns:WsAdminV2_getCallVariables" />
      <output message="tns:WsAdminV2_getCallVariablesResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCampaignDNISList" parameterOrder="getCampaignDNISList">
      <documentation>Returns list of DNIS's assigned to campaign </documentation>
      <jaxws:bindings>
        <jaxws:method name="getCampaignDNISList">
          <jaxws:javadoc>Returns list of DNIS's assigned to campaign </jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getCampaignDNISList" />
      <output message="tns:WsAdminV2_getCampaignDNISListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCampaignProfileDispositions" parameterOrder="getCampaignProfileDispositions">
      <input message="tns:WsAdminV2_getCampaignProfileDispositions" />
      <output message="tns:WsAdminV2_getCampaignProfileDispositionsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCampaignProfileFilter" parameterOrder="getCampaignProfileFilter">
      <input message="tns:WsAdminV2_getCampaignProfileFilter" />
      <output message="tns:WsAdminV2_getCampaignProfileFilterResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCampaignProfiles" parameterOrder="getCampaignProfiles">
      <input message="tns:WsAdminV2_getCampaignProfiles" />
      <output message="tns:WsAdminV2_getCampaignProfilesResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCampaignState" parameterOrder="getCampaignState">
      <documentation>Returns campaign's state</documentation>
      <jaxws:bindings>
        <jaxws:method name="getCampaignState">
          <jaxws:javadoc>Returns campaign's state</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getCampaignState" />
      <output message="tns:WsAdminV2_getCampaignStateResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCampaigns" parameterOrder="getCampaigns">
      <documentation>Returns all campaigns based on name pattern and campaign type bit</documentation>
      <jaxws:bindings>
        <jaxws:method name="getCampaigns">
          <jaxws:javadoc>Returns all campaigns based on name pattern and campaign type bit</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getCampaigns" />
      <output message="tns:WsAdminV2_getCampaignsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getContactFields" parameterOrder="getContactFields">
      <input message="tns:WsAdminV2_getContactFields" />
      <output message="tns:WsAdminV2_getContactFieldsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getContactRecords" parameterOrder="getContactRecords">
      <documentation>Returns CRM records matching lookup criteria</documentation>
      <jaxws:bindings>
        <jaxws:method name="getContactRecords">
          <jaxws:javadoc>Returns CRM records matching lookup criteria</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getContactRecords" />
      <output message="tns:WsAdminV2_getContactRecordsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getCrmImportResult" parameterOrder="getCrmImportResult">
      <documentation>Returns details for performed CRM import. The import is determined by the specified 'identifier' object.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getCrmImportResult">
          <jaxws:javadoc>Returns details for performed CRM import. The import is determined by the specified 'identifier' object.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getCrmImportResult" />
      <output message="tns:WsAdminV2_getCrmImportResultResponse" />
      <fault name="ResultIsNotReadyFault" message="tns:ResultIsNotReadyFault" />
      <fault name="UnknownIdentifierFault" message="tns:UnknownIdentifierFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getDNISList" parameterOrder="getDNISList">
      <documentation>Returns list of available DNIS's </documentation>
      <jaxws:bindings>
        <jaxws:method name="getDNISList">
          <jaxws:javadoc>Returns list of available DNIS's </jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getDNISList" />
      <output message="tns:WsAdminV2_getDNISListResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getDialingRules" parameterOrder="getDialingRules">
      <input message="tns:WsAdminV2_getDialingRules" />
      <output message="tns:WsAdminV2_getDialingRulesResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getDisposition" parameterOrder="getDisposition">
      <documentation>Returns disposition with specified name</documentation>
      <jaxws:bindings>
        <jaxws:method name="getDisposition">
          <jaxws:javadoc>Returns disposition with specified name</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getDisposition" />
      <output message="tns:WsAdminV2_getDispositionResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getDispositions" parameterOrder="getDispositions">
      <documentation>Return list of dispositions for current domain selected by name pattern</documentation>
      <jaxws:bindings>
        <jaxws:method name="getDispositions">
          <jaxws:javadoc>Return list of dispositions for current domain selected by name pattern</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getDispositions" />
      <output message="tns:WsAdminV2_getDispositionsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getDispositionsImportResult" parameterOrder="getDispositionsImportResult">
      <documentation>Returns details for performed dispositions import. The import is determined by the specified 'identifier' object.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getDispositionsImportResult">
          <jaxws:javadoc>Returns details for performed dispositions import. The import is determined by the specified 'identifier' object.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getDispositionsImportResult" />
      <output message="tns:WsAdminV2_getDispositionsImportResultResponse" />
      <fault name="ResultIsNotReadyFault" message="tns:ResultIsNotReadyFault" />
      <fault name="UnknownIdentifierFault" message="tns:UnknownIdentifierFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getIVRScripts" parameterOrder="getIVRScripts">
      <input message="tns:WsAdminV2_getIVRScripts" />
      <output message="tns:WsAdminV2_getIVRScriptsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getInboundCampaign" parameterOrder="getInboundCampaign">
      <documentation>Returns inbound campaign with specified name</documentation>
      <jaxws:bindings>
        <jaxws:method name="getInboundCampaign">
          <jaxws:javadoc>Returns inbound campaign with specified name</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getInboundCampaign" />
      <output message="tns:WsAdminV2_getInboundCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getListImportResult" parameterOrder="getListImportResult">
      <documentation>Returns details for performed list import. The import is determined by the specified 'identifier' object.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getListImportResult">
          <jaxws:javadoc>Returns details for performed list import. The import is determined by the specified 'identifier' object.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getListImportResult" />
      <output message="tns:WsAdminV2_getListImportResultResponse" />
      <fault name="ResultIsNotReadyFault" message="tns:ResultIsNotReadyFault" />
      <fault name="UnknownIdentifierFault" message="tns:UnknownIdentifierFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getListsForCampaign" parameterOrder="getListsForCampaign">
      <documentation>Returns list of dialing lists for campaign specified by name</documentation>
      <jaxws:bindings>
        <jaxws:method name="getListsForCampaign">
          <jaxws:javadoc>Returns list of dialing lists for campaign specified by name</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getListsForCampaign" />
      <output message="tns:WsAdminV2_getListsForCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getListsInfo" parameterOrder="getListsInfo">
      <documentation>Returns a collection containing names and sizes of every existing list</documentation>
      <jaxws:bindings>
        <jaxws:method name="getListsInfo">
          <jaxws:javadoc>Returns a collection containing names and sizes of every existing list</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getListsInfo" />
      <output message="tns:WsAdminV2_getListsInfoResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getOutboundCampaign" parameterOrder="getOutboundCampaign">
      <documentation>Returns outbound campaign with specified name</documentation>
      <jaxws:bindings>
        <jaxws:method name="getOutboundCampaign">
          <jaxws:javadoc>Returns outbound campaign with specified name</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getOutboundCampaign" />
      <output message="tns:WsAdminV2_getOutboundCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getPrompt" parameterOrder="getPrompt">
      <documentation>Returns prompt for defined name</documentation>
      <jaxws:bindings>
        <jaxws:method name="getPrompt">
          <jaxws:javadoc>Returns prompt for defined name</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getPrompt" />
      <output message="tns:WsAdminV2_getPromptResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getReasonCode" parameterOrder="getReasonCode">
      <documentation>Returns specified reason code</documentation>
      <jaxws:bindings>
        <jaxws:method name="getReasonCode">
          <jaxws:javadoc>Returns specified reason code</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getReasonCode" />
      <output message="tns:WsAdminV2_getReasonCodeResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getReasonCodeByType" parameterOrder="getReasonCodeByType">
      <documentation>Returns specified reason code</documentation>
      <jaxws:bindings>
        <jaxws:method name="getReasonCodeByType">
          <jaxws:javadoc>Returns specified reason code</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getReasonCodeByType" />
      <output message="tns:WsAdminV2_getReasonCodeByTypeResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getReportResult" parameterOrder="getReportResult">
      <input message="tns:WsAdminV2_getReportResult" />
      <output message="tns:WsAdminV2_getReportResultResponse" />
      <fault name="ResultIsNotReadyFault" message="tns:ResultIsNotReadyFault" />
      <fault name="UnknownIdentifierFault" message="tns:UnknownIdentifierFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getReportResultCsv" parameterOrder="getReportResultCsv">
      <input message="tns:WsAdminV2_getReportResultCsv" />
      <output message="tns:WsAdminV2_getReportResultCsvResponse" />
      <fault name="ResultIsNotReadyFault" message="tns:ResultIsNotReadyFault" />
      <fault name="UnknownIdentifierFault" message="tns:UnknownIdentifierFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getSkill" parameterOrder="getSkill">
      <documentation>Returns skill info. Throws exception if skill doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getSkill">
          <jaxws:javadoc>Returns skill info. Throws exception if skill doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getSkill" />
      <output message="tns:WsAdminV2_getSkillResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getSkillInfo" parameterOrder="getSkillInfo">
      <documentation>Returns skill info. Throws exception if skill doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getSkillInfo">
          <jaxws:javadoc>Returns skill info. Throws exception if skill doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getSkillInfo" />
      <output message="tns:WsAdminV2_getSkillInfoResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getSkillVoicemailGreeting" parameterOrder="getSkillVoicemailGreeting">
      <documentation>Retrieve skill voicemail greeting</documentation>
      <jaxws:bindings>
        <jaxws:method name="getSkillVoicemailGreeting">
          <jaxws:javadoc>Retrieve skill voicemail greeting</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getSkillVoicemailGreeting" />
      <output message="tns:WsAdminV2_getSkillVoicemailGreetingResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="FinderException" message="tns:FinderException" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getSkills" parameterOrder="getSkills">
      <documentation>Returns a collection of skills' info where skill names match specified regular expression.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getSkills">
          <jaxws:javadoc>Returns a collection of skills' info where skill names match specified regular expression.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getSkills" />
      <output message="tns:WsAdminV2_getSkillsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getSkillsInfo" parameterOrder="getSkillsInfo">
      <documentation>Returns a collection of skills' info where skill names match specified regular expression.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getSkillsInfo">
          <jaxws:javadoc>Returns a collection of skills' info where skill names match specified regular expression.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getSkillsInfo" />
      <output message="tns:WsAdminV2_getSkillsInfoResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getUserGeneralInfo" parameterOrder="getUserGeneralInfo">
      <documentation>Returns user general info. Throws exception if user doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getUserGeneralInfo">
          <jaxws:javadoc>Returns user general info. Throws exception if user doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getUserGeneralInfo" />
      <output message="tns:WsAdminV2_getUserGeneralInfoResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getUserInfo" parameterOrder="getUserInfo">
      <documentation>Returns user info. Throws exception if user doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getUserInfo">
          <jaxws:javadoc>Returns user info. Throws exception if user doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getUserInfo" />
      <output message="tns:WsAdminV2_getUserInfoResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getUserProfile" parameterOrder="getUserProfile">
      <input message="tns:WsAdminV2_getUserProfile" />
      <output message="tns:WsAdminV2_getUserProfileResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getUserProfiles" parameterOrder="getUserProfiles">
      <input message="tns:WsAdminV2_getUserProfiles" />
      <output message="tns:WsAdminV2_getUserProfilesResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getUserVoicemailGreeting" parameterOrder="getUserVoicemailGreeting">
      <documentation>Retrieve user voicemail greeting</documentation>
      <jaxws:bindings>
        <jaxws:method name="getUserVoicemailGreeting">
          <jaxws:javadoc>Retrieve user voicemail greeting</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getUserVoicemailGreeting" />
      <output message="tns:WsAdminV2_getUserVoicemailGreetingResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="FinderException" message="tns:FinderException" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getUsersGeneralInfo" parameterOrder="getUsersGeneralInfo">
      <documentation>Returns a collection of users' general info where user names match specified regular expression.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getUsersGeneralInfo">
          <jaxws:javadoc>Returns a collection of users' general info where user names match specified regular expression.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getUsersGeneralInfo" />
      <output message="tns:WsAdminV2_getUsersGeneralInfoResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getUsersInfo" parameterOrder="getUsersInfo">
      <documentation>Returns a collection of users' info where user names match specified regular expression.</documentation>
      <jaxws:bindings>
        <jaxws:method name="getUsersInfo">
          <jaxws:javadoc>Returns a collection of users' info where user names match specified regular expression.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_getUsersInfo" />
      <output message="tns:WsAdminV2_getUsersInfoResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getVCCConfiguration" parameterOrder="getVCCConfiguration">
      <input message="tns:WsAdminV2_getVCCConfiguration" />
      <output message="tns:WsAdminV2_getVCCConfigurationResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="getWebConnectors" parameterOrder="getWebConnectors">
      <input message="tns:WsAdminV2_getWebConnectors" />
      <output message="tns:WsAdminV2_getWebConnectorsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="InvalidRegexpPatternFault" message="tns:InvalidRegexpPatternFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="isImportRunning" parameterOrder="isImportRunning">
      <documentation>Checks whether data import is running. The import is determined by the specified 'identifier' object.</documentation>
      <jaxws:bindings>
        <jaxws:method name="isImportRunning">
          <jaxws:javadoc>Checks whether data import is running. The import is determined by the specified 'identifier' object.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_isImportRunning" />
      <output message="tns:WsAdminV2_isImportRunningResponse" />
      <fault name="UnknownIdentifierFault" message="tns:UnknownIdentifierFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="isReportRunning" parameterOrder="isReportRunning">
      <input message="tns:WsAdminV2_isReportRunning" />
      <output message="tns:WsAdminV2_isReportRunningResponse" />
      <fault name="UnknownIdentifierFault" message="tns:UnknownIdentifierFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyAgentGroup" parameterOrder="modifyAgentGroup">
      <input message="tns:WsAdminV2_modifyAgentGroup" />
      <output message="tns:WsAdminV2_modifyAgentGroupResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="UserHasNoRequiredRoleFault" message="tns:UserHasNoRequiredRoleFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyAutodialCampaign" parameterOrder="modifyAutodialCampaign">
      <documentation>Modifies defined attributes of autodial campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyAutodialCampaign">
          <jaxws:javadoc>Modifies defined attributes of autodial campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyAutodialCampaign" />
      <output message="tns:WsAdminV2_modifyAutodialCampaignResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="IvrScriptNotFoundFault" message="tns:IvrScriptNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ReasonCodeNotFoundFault" message="tns:ReasonCodeNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="DialProfileNotFoundFault" message="tns:DialProfileNotFoundFault" />
    </operation>
    <operation name="modifyCallVariable" parameterOrder="modifyCallVariable">
      <input message="tns:WsAdminV2_modifyCallVariable" />
      <output message="tns:WsAdminV2_modifyCallVariableResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyCallVariablesGroup" parameterOrder="modifyCallVariablesGroup">
      <input message="tns:WsAdminV2_modifyCallVariablesGroup" />
      <output message="tns:WsAdminV2_modifyCallVariablesGroupResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyCampaignLists" parameterOrder="modifyCampaignLists">
      <documentation>Modifies specified campaign dialing lists</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyCampaignLists">
          <jaxws:javadoc>Modifies specified campaign dialing lists</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyCampaignLists" />
      <output message="tns:WsAdminV2_modifyCampaignListsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="ListIsNotAssignedFault" message="tns:ListIsNotAssignedFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="modifyCampaignProfile" parameterOrder="modifyCampaignProfile">
      <input message="tns:WsAdminV2_modifyCampaignProfile" />
      <output message="tns:WsAdminV2_modifyCampaignProfileResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyCampaignProfileCrmCriteria" parameterOrder="modifyCampaignProfileCrmCriteria">
      <input message="tns:WsAdminV2_modifyCampaignProfileCrmCriteria" />
      <output message="tns:WsAdminV2_modifyCampaignProfileCrmCriteriaResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyCampaignProfileDispositions" parameterOrder="modifyCampaignProfileDispositions">
      <input message="tns:WsAdminV2_modifyCampaignProfileDispositions" />
      <output message="tns:WsAdminV2_modifyCampaignProfileDispositionsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyCampaignProfileFilterOrder" parameterOrder="modifyCampaignProfileFilterOrder">
      <input message="tns:WsAdminV2_modifyCampaignProfileFilterOrder" />
      <output message="tns:WsAdminV2_modifyCampaignProfileFilterOrderResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyContactField" parameterOrder="modifyContactField">
      <input message="tns:WsAdminV2_modifyContactField" />
      <output message="tns:WsAdminV2_modifyContactFieldResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyDisposition" parameterOrder="modifyDisposition">
      <documentation>Modifies disposition attributes</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyDisposition">
          <jaxws:javadoc>Modifies disposition attributes</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyDisposition" />
      <output message="tns:WsAdminV2_modifyDispositionResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyIVRScript" parameterOrder="modifyIVRScript">
      <input message="tns:WsAdminV2_modifyIVRScript" />
      <output message="tns:WsAdminV2_modifyIVRScriptResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyInboundCampaign" parameterOrder="modifyInboundCampaign">
      <documentation>Modifies defined attributes of inbound campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyInboundCampaign">
          <jaxws:javadoc>Modifies defined attributes of inbound campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyInboundCampaign" />
      <output message="tns:WsAdminV2_modifyInboundCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="IvrScriptNotFoundFault" message="tns:IvrScriptNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ReasonCodeNotFoundFault" message="tns:ReasonCodeNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="DialProfileNotFoundFault" message="tns:DialProfileNotFoundFault" />
    </operation>
    <operation name="modifyOutboundCampaign" parameterOrder="modifyOutboundCampaign">
      <documentation>Modifies defined outbound campaign attributes</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyOutboundCampaign">
          <jaxws:javadoc>Modifies defined outbound campaign attributes</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyOutboundCampaign" />
      <output message="tns:WsAdminV2_modifyOutboundCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="IvrScriptNotFoundFault" message="tns:IvrScriptNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ReasonCodeNotFoundFault" message="tns:ReasonCodeNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="DialProfileNotFoundFault" message="tns:DialProfileNotFoundFault" />
    </operation>
    <operation name="modifyPromptTTS" parameterOrder="modifyPromptTTS">
      <documentation>Modifies TTS generated prompt</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyPromptTTS">
          <jaxws:javadoc>Modifies TTS generated prompt</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyPromptTTS" />
      <output message="tns:WsAdminV2_modifyPromptTTSResponse" />
      <fault name="WrongPromptTypeFault" message="tns:WrongPromptTypeFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="TtsGenerationFailed" message="tns:TtsGenerationFailed" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="modifyPromptWav" parameterOrder="modifyPromptWav">
      <documentation>Modifies pre-recorded prompt</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyPromptWav">
          <jaxws:javadoc>Modifies pre-recorded prompt</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyPromptWav" />
      <output message="tns:WsAdminV2_modifyPromptWavResponse" />
      <fault name="WrongPromptTypeFault" message="tns:WrongPromptTypeFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="WavFileUploadFailedFault" message="tns:WavFileUploadFailedFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="modifyPromptWavInline" parameterOrder="modifyPromptWavInline">
      <documentation>Modifies pre-recorded prompt</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyPromptWavInline">
          <jaxws:javadoc>Modifies pre-recorded prompt</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyPromptWavInline" />
      <output message="tns:WsAdminV2_modifyPromptWavInlineResponse" />
      <fault name="WrongPromptTypeFault" message="tns:WrongPromptTypeFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="WavFileUploadFailedFault" message="tns:WavFileUploadFailedFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="PromptNotFoundFault" message="tns:PromptNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="modifyReasonCode" parameterOrder="modifyReasonCode">
      <documentation>Modifies reason code</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyReasonCode">
          <jaxws:javadoc>Modifies reason code</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyReasonCode" />
      <output message="tns:WsAdminV2_modifyReasonCodeResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifySkill" parameterOrder="modifySkill">
      <documentation>Modifies a skill. Throws exception if skill doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifySkill">
          <jaxws:javadoc>Modifies a skill. Throws exception if skill doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifySkill" />
      <output message="tns:WsAdminV2_modifySkillResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyUser" parameterOrder="modifyUser">
      <documentation>Modifies a user. Throws exception if user doesn't exist.</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyUser">
          <jaxws:javadoc>Modifies a user. Throws exception if user doesn't exist.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyUser" />
      <output message="tns:WsAdminV2_modifyUserResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="CantModifyObjectFault" message="tns:CantModifyObjectFault" />
      <fault name="MissedOsLoginFault" message="tns:MissedOsLoginFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ExtensionAlreadyInUseFault" message="tns:ExtensionAlreadyInUseFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="NICELicencesExceededFault" message="tns:NICELicencesExceededFault" />
    </operation>
    <operation name="modifyUserCannedReports" parameterOrder="modifyUserCannedReports">
      <documentation>Modify set/remove users canned reports; Throw exception if user dont have reporting role.</documentation>
      <jaxws:bindings>
        <jaxws:method name="modifyUserCannedReports">
          <jaxws:javadoc>Modify set/remove users canned reports; Throw exception if user dont have reporting role.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_modifyUserCannedReports" />
      <output message="tns:WsAdminV2_modifyUserCannedReportsResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="CantModifyObjectFault" message="tns:CantModifyObjectFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="UserHasNoRequiredRoleFault" message="tns:UserHasNoRequiredRoleFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ExtensionAlreadyInUseFault" message="tns:ExtensionAlreadyInUseFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="modifyUserProfile" parameterOrder="modifyUserProfile">
      <input message="tns:WsAdminV2_modifyUserProfile" />
      <output message="tns:WsAdminV2_modifyUserProfileResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedOsLoginFault" message="tns:MissedOsLoginFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="NICELicencesExceededFault" message="tns:NICELicencesExceededFault" />
    </operation>
    <operation name="modifyUserProfileSkills" parameterOrder="modifyUserProfileSkills">
      <input message="tns:WsAdminV2_modifyUserProfileSkills" />
      <output message="tns:WsAdminV2_modifyUserProfileSkillsResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="NICELicencesExceededFault" message="tns:NICELicencesExceededFault" />
    </operation>
    <operation name="modifyUserProfileUserList" parameterOrder="modifyUserProfileUserList">
      <input message="tns:WsAdminV2_modifyUserProfileUserList" />
      <output message="tns:WsAdminV2_modifyUserProfileUserListResponse" />
      <fault name="ExecutionRestrictionFault" message="tns:ExecutionRestrictionFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedOsLoginFault" message="tns:MissedOsLoginFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="NICELicencesExceededFault" message="tns:NICELicencesExceededFault" />
    </operation>
    <operation name="modifyVCCConfiguration" parameterOrder="modifyVCCConfiguration">
      <input message="tns:WsAdminV2_modifyVCCConfiguration" />
      <output message="tns:WsAdminV2_modifyVCCConfigurationResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="modifyWebConnector" parameterOrder="modifyWebConnector">
      <input message="tns:WsAdminV2_modifyWebConnector" />
      <output message="tns:WsAdminV2_modifyWebConnectorResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="removeDNISFromCampaign" parameterOrder="removeDNISFromCampaign">
      <documentation>Removes specified list of DNIS's to campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="removeDNISFromCampaign">
          <jaxws:javadoc>Removes specified list of DNIS's to campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_removeDNISFromCampaign" />
      <output message="tns:WsAdminV2_removeDNISFromCampaignResponse" />
      <fault name="DNISNotFoundFault" message="tns:DNISNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="DNISIsNotAssignedFault" message="tns:DNISIsNotAssignedFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="WrongCampaignStateFault" message="tns:WrongCampaignStateFault" />
    </operation>
    <operation name="removeDisposition" parameterOrder="removeDisposition">
      <documentation>Remove specified disposition</documentation>
      <jaxws:bindings>
        <jaxws:method name="removeDisposition">
          <jaxws:javadoc>Remove specified disposition</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_removeDisposition" />
      <output message="tns:WsAdminV2_removeDispositionResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="removeDispositionsFromCampaign" parameterOrder="removeDispositionsFromCampaign">
      <documentation>Removes specified dispositions from campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="removeDispositionsFromCampaign">
          <jaxws:javadoc>Removes specified dispositions from campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_removeDispositionsFromCampaign" />
      <output message="tns:WsAdminV2_removeDispositionsFromCampaignResponse" />
      <fault name="DispositionIsNotAssisgnedFault" message="tns:DispositionIsNotAssisgnedFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ObjectInUseFault" message="tns:ObjectInUseFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="removeListsFromCampaign" parameterOrder="removeListsFromCampaign">
      <documentation>Removes specified dialing lists from campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="removeListsFromCampaign">
          <jaxws:javadoc>Removes specified dialing lists from campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_removeListsFromCampaign" />
      <output message="tns:WsAdminV2_removeListsFromCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="ListIsNotAssignedFault" message="tns:ListIsNotAssignedFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ListNotFoundFault" message="tns:ListNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="removeNumbersFromDnc" parameterOrder="removeNumbersFromDnc">
      <input message="tns:WsAdminV2_removeNumbersFromDnc" />
      <output message="tns:WsAdminV2_removeNumbersFromDncResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="TooManyItemsFault" message="tns:TooManyItemsFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="removeSkillsFromCampaign" parameterOrder="removeSkillsFromCampaign">
      <documentation>Removes specified skills from campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="removeSkillsFromCampaign">
          <jaxws:javadoc>Removes specified skills from campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_removeSkillsFromCampaign" />
      <output message="tns:WsAdminV2_removeSkillsFromCampaignResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="SkillIsNotAssignedFault" message="tns:SkillIsNotAssignedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="renameCampaign" parameterOrder="renameCampaign">
      <documentation>Renames specified campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="renameCampaign">
          <jaxws:javadoc>Renames specified campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_renameCampaign" />
      <output message="tns:WsAdminV2_renameCampaignResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="CampaignAlreadyExistsFault" message="tns:CampaignAlreadyExistsFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="WrongCampaignStateFault" message="tns:WrongCampaignStateFault" />
    </operation>
    <operation name="renameDisposition" parameterOrder="renameDisposition">
      <documentation>Renames disposition</documentation>
      <jaxws:bindings>
        <jaxws:method name="renameDisposition">
          <jaxws:javadoc>Renames disposition</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_renameDisposition" />
      <output message="tns:WsAdminV2_renameDispositionResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="DispositionAlreadyExistsFault" message="tns:DispositionAlreadyExistsFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="DispositionNotFoundFault" message="tns:DispositionNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="resetCampaign" parameterOrder="resetCampaign">
      <documentation>Resets campaign </documentation>
      <jaxws:bindings>
        <jaxws:method name="resetCampaign">
          <jaxws:javadoc>Resets campaign </jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_resetCampaign" />
      <output message="tns:WsAdminV2_resetCampaignResponse" />
      <fault name="CampaignStateUpdateFault" message="tns:CampaignStateUpdateFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="resetCampaignDispositions" parameterOrder="resetCampaignDispositions">
      <documentation>Resets specified campaign's dispositions</documentation>
      <jaxws:bindings>
        <jaxws:method name="resetCampaignDispositions">
          <jaxws:javadoc>Resets specified campaign's dispositions</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_resetCampaignDispositions" />
      <output message="tns:WsAdminV2_resetCampaignDispositionsResponse" />
      <fault name="InvalidDateRangeFault" message="tns:InvalidDateRangeFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="WrongCampaignStateFault" message="tns:WrongCampaignStateFault" />
    </operation>
    <operation name="resetListPosition" parameterOrder="resetListPosition">
      <documentation>Resets campaign's dialing list position</documentation>
      <jaxws:bindings>
        <jaxws:method name="resetListPosition">
          <jaxws:javadoc>Resets campaign's dialing list position</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_resetListPosition" />
      <output message="tns:WsAdminV2_resetListPositionResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="runReport" parameterOrder="runReport">
      <input message="tns:WsAdminV2_runReport" />
      <output message="tns:WsAdminV2_runReportResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ReportNotFoundFault" message="tns:ReportNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="setDefaultIVRSchedule" parameterOrder="setDefaultIVRSchedule">
      <documentation>Sets IVR script for default IVR schedule</documentation>
      <jaxws:bindings>
        <jaxws:method name="setDefaultIVRSchedule">
          <jaxws:javadoc>Sets IVR script for default IVR schedule</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_setDefaultIVRSchedule" />
      <output message="tns:WsAdminV2_setDefaultIVRScheduleResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="IvrScriptNotFoundFault" message="tns:IvrScriptNotFoundFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="setDialingRules" parameterOrder="setDialingRules">
      <input message="tns:WsAdminV2_setDialingRules" />
      <output message="tns:WsAdminV2_setDialingRulesResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="setSkillVoicemailGreeting" parameterOrder="setSkillVoicemailGreeting">
      <documentation>Set/reset skill voicemail greeting</documentation>
      <jaxws:bindings>
        <jaxws:method name="setSkillVoicemailGreeting">
          <jaxws:javadoc>Set/reset skill voicemail greeting</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_setSkillVoicemailGreeting" />
      <output message="tns:WsAdminV2_setSkillVoicemailGreetingResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="WavFileUploadFailedFault" message="tns:WavFileUploadFailedFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ParseException" message="tns:ParseException" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="setUserVoicemailGreeting" parameterOrder="setUserVoicemailGreeting">
      <documentation>Set/reset user voicemail greeting</documentation>
      <jaxws:bindings>
        <jaxws:method name="setUserVoicemailGreeting">
          <jaxws:javadoc>Set/reset user voicemail greeting</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_setUserVoicemailGreeting" />
      <output message="tns:WsAdminV2_setUserVoicemailGreetingResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ObjectNotFoundFault" message="tns:ObjectNotFoundFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="WavFileUploadFailedFault" message="tns:WavFileUploadFailedFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ParseException" message="tns:ParseException" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="startCampaign" parameterOrder="startCampaign">
      <documentation>Starts campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="startCampaign">
          <jaxws:javadoc>Starts campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_startCampaign" />
      <output message="tns:WsAdminV2_startCampaignResponse" />
      <fault name="CampaignStateUpdateFault" message="tns:CampaignStateUpdateFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="stopCampaign" parameterOrder="stopCampaign">
      <documentation>Stops campaign</documentation>
      <jaxws:bindings>
        <jaxws:method name="stopCampaign">
          <jaxws:javadoc>Stops campaign</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_stopCampaign" />
      <output message="tns:WsAdminV2_stopCampaignResponse" />
      <fault name="CampaignStateUpdateFault" message="tns:CampaignStateUpdateFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="updateContacts" parameterOrder="updateContacts">
      <documentation>Performs records import to CRM data according to the specified import settings. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="updateContacts">
          <jaxws:javadoc>Performs records import to CRM data according to the specified import settings. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_updateContacts" />
      <output message="tns:WsAdminV2_updateContactsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="updateContactsCsv" parameterOrder="updateContactsCsv">
      <documentation>Performs records import to CRM data according to the specified import settings. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="updateContactsCsv">
          <jaxws:javadoc>Performs records import to CRM data according to the specified import settings. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_updateContactsCsv" />
      <output message="tns:WsAdminV2_updateContactsCsvResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
    </operation>
    <operation name="updateContactsFtp" parameterOrder="updateContactsFtp">
      <documentation>Adds schedule to update contacts list using FTP server </documentation>
      <jaxws:bindings>
        <jaxws:method name="updateContactsFtp">
          <jaxws:javadoc>Adds schedule to update contacts list using FTP server </jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_updateContactsFtp" />
      <output message="tns:WsAdminV2_updateContactsFtpResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="ScheduleOperationFailedFault" message="tns:ScheduleOperationFailedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ImportInProgressFault" message="tns:ImportInProgressFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="ScheduleNotFoundFault" message="tns:ScheduleNotFoundFault" />
    </operation>
    <operation name="updateCrmRecord" parameterOrder="updateCrmRecord">
      <input message="tns:WsAdminV2_updateCrmRecord" />
      <output message="tns:WsAdminV2_updateCrmRecordResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="InternalImportFault" message="tns:InternalImportFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="ImportCancelledFault" message="tns:ImportCancelledFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="updateDispositions" parameterOrder="updateDispositions">
      <documentation>Updates dispositions values for the specified campaign. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="updateDispositions">
          <jaxws:javadoc>Updates dispositions values for the specified campaign. Records are passed as a two-dimensional array (collection of collection of strings). The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_updateDispositions" />
      <output message="tns:WsAdminV2_updateDispositionsResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="InvalidImportDataFault" message="tns:InvalidImportDataFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="updateDispositionsCsv" parameterOrder="updateDispositionsCsv">
      <documentation>Updates dispositions values for the specified campaign. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</documentation>
      <jaxws:bindings>
        <jaxws:method name="updateDispositionsCsv">
          <jaxws:javadoc>Updates dispositions values for the specified campaign. Records are passed as a string containing comma-separated values. The methods returns 'identifier' object which can be used to query import state and import result.</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_updateDispositionsCsv" />
      <output message="tns:WsAdminV2_updateDispositionsCsvResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="ImportSizeLimitExceededFault" message="tns:ImportSizeLimitExceededFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="WrongCampaignTypeFault" message="tns:WrongCampaignTypeFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="updateDispositionsFtp" parameterOrder="updateDispositionsFtp">
      <documentation>Adds schedule to update campaign dispositons using FTP server</documentation>
      <jaxws:bindings>
        <jaxws:method name="updateDispositionsFtp">
          <jaxws:javadoc>Adds schedule to update campaign dispositons using FTP server</jaxws:javadoc>
        </jaxws:method>
      </jaxws:bindings>
      <input message="tns:WsAdminV2_updateDispositionsFtp" />
      <output message="tns:WsAdminV2_updateDispositionsFtpResponse" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="CampaignNotFoundFault" message="tns:CampaignNotFoundFault" />
      <fault name="CrmFieldNotFoundFault" message="tns:CrmFieldNotFoundFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="ScheduleOperationFailedFault" message="tns:ScheduleOperationFailedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="ImportInProgressFault" message="tns:ImportInProgressFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="ScheduleNotFoundFault" message="tns:ScheduleNotFoundFault" />
    </operation>
    <operation name="userSkillAdd" parameterOrder="userSkillAdd">
      <input message="tns:WsAdminV2_userSkillAdd" />
      <output message="tns:WsAdminV2_userSkillAddResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
      <fault name="UserAlreadyHasSkillFault" message="tns:UserAlreadyHasSkillFault" />
    </operation>
    <operation name="userSkillModify" parameterOrder="userSkillModify">
      <input message="tns:WsAdminV2_userSkillModify" />
      <output message="tns:WsAdminV2_userSkillModifyResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserDoesntHaveSkillFault" message="tns:UserDoesntHaveSkillFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
    <operation name="userSkillRemove" parameterOrder="userSkillRemove">
      <input message="tns:WsAdminV2_userSkillRemove" />
      <output message="tns:WsAdminV2_userSkillRemoveResponse" />
      <fault name="SkillNotFoundFault" message="tns:SkillNotFoundFault" />
      <fault name="ServerFault" message="tns:ServerFault" />
      <fault name="MissedArgumentFault" message="tns:MissedArgumentFault" />
      <fault name="IncorrectArgumentFault" message="tns:IncorrectArgumentFault" />
      <fault name="AdminSessionClosedFault" message="tns:AdminSessionClosedFault" />
      <fault name="InvalidAccountFault" message="tns:InvalidAccountFault" />
      <fault name="UserDoesntHaveSkillFault" message="tns:UserDoesntHaveSkillFault" />
      <fault name="UserAlreadyLoggedInFault" message="tns:UserAlreadyLoggedInFault" />
      <fault name="ConcurrentModificationFault" message="tns:ConcurrentModificationFault" />
      <fault name="AccessDisallowedFault" message="tns:AccessDisallowedFault" />
      <fault name="UserNotFoundFault" message="tns:UserNotFoundFault" />
      <fault name="OperationsLimitExceededFault" message="tns:OperationsLimitExceededFault" />
      <fault name="ServiceUnavailableFault" message="tns:ServiceUnavailableFault" />
    </operation>
  </portType>
  <binding name="WsAdminV2Binding" type="tns:WsAdminV2">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="addDNISToCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="DNISAlreadyAssignedFault">
        <soap:fault use="literal" name="DNISAlreadyAssignedFault" namespace="" />
      </fault>
      <fault name="DNISNotFoundFault">
        <soap:fault use="literal" name="DNISNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="WrongCampaignStateFault">
        <soap:fault use="literal" name="WrongCampaignStateFault" namespace="" />
      </fault>
    </operation>
    <operation name="addDispositionsToCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AllowedOnlyForPreviewCampaignFault">
        <soap:fault use="literal" name="AllowedOnlyForPreviewCampaignFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="DispositionNotAllowedFault">
        <soap:fault use="literal" name="DispositionNotAllowedFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="DispositionIsAlreadyAssignedFault">
        <soap:fault use="literal" name="DispositionIsAlreadyAssignedFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="addListsToCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="ListAlreadyAssignedFault">
        <soap:fault use="literal" name="ListAlreadyAssignedFault" namespace="" />
      </fault>
    </operation>
    <operation name="addNumbersToDnc">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="TooManyItemsFault">
        <soap:fault use="literal" name="TooManyItemsFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="addPromptTTS">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="TtsGenerationFailed">
        <soap:fault use="literal" name="TtsGenerationFailed" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="PromptAlreadyExistsFault">
        <soap:fault use="literal" name="PromptAlreadyExistsFault" namespace="" />
      </fault>
    </operation>
    <operation name="addPromptWav">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="WavFileUploadFailedFault">
        <soap:fault use="literal" name="WavFileUploadFailedFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="PromptAlreadyExistsFault">
        <soap:fault use="literal" name="PromptAlreadyExistsFault" namespace="" />
      </fault>
    </operation>
    <operation name="addPromptWavInline">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="WavFileUploadFailedFault">
        <soap:fault use="literal" name="WavFileUploadFailedFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="PromptAlreadyExistsFault">
        <soap:fault use="literal" name="PromptAlreadyExistsFault" namespace="" />
      </fault>
    </operation>
    <operation name="addRecordToList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="InternalImportFault">
        <soap:fault use="literal" name="InternalImportFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="ImportCancelledFault">
        <soap:fault use="literal" name="ImportCancelledFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="addSkillsToCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="SkillAlreadyAssignedFault">
        <soap:fault use="literal" name="SkillAlreadyAssignedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="addToList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="addToListCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="addToListFtp">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="ScheduleOperationFailedFault">
        <soap:fault use="literal" name="ScheduleOperationFailedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ImportInProgressFault">
        <soap:fault use="literal" name="ImportInProgressFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="ScheduleNotFoundFault">
        <soap:fault use="literal" name="ScheduleNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="asyncAddRecordsToList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="InternalImportFault">
        <soap:fault use="literal" name="InternalImportFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="asyncDeleteRecordsFromList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="InternalImportFault">
        <soap:fault use="literal" name="InternalImportFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="asyncUpdateCrmRecords">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="InternalImportFault">
        <soap:fault use="literal" name="InternalImportFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="checkDncForNumbers">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="TooManyItemsFault">
        <soap:fault use="literal" name="TooManyItemsFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="closeSession">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="createAgentGroup">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="UserHasNoRequiredRoleFault">
        <soap:fault use="literal" name="UserHasNoRequiredRoleFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="createAutodialCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="CampaignAlreadyExistsFault">
        <soap:fault use="literal" name="CampaignAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="IvrScriptNotFoundFault">
        <soap:fault use="literal" name="IvrScriptNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ReasonCodeNotFoundFault">
        <soap:fault use="literal" name="ReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="DialProfileNotFoundFault">
        <soap:fault use="literal" name="DialProfileNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="createCallVariable">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="createCallVariablesGroup">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="createCampaignProfile">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="createContactField">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="ObjectsCountLimitExceededFault">
        <soap:fault use="literal" name="ObjectsCountLimitExceededFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="createDisposition">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="DispositionAlreadyExistsFault">
        <soap:fault use="literal" name="DispositionAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="createIVRScript">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="createInboundCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="CampaignAlreadyExistsFault">
        <soap:fault use="literal" name="CampaignAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="IvrScriptNotFoundFault">
        <soap:fault use="literal" name="IvrScriptNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ReasonCodeNotFoundFault">
        <soap:fault use="literal" name="ReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="DialProfileNotFoundFault">
        <soap:fault use="literal" name="DialProfileNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="createList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ListAlreadyExistsFault">
        <soap:fault use="literal" name="ListAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="createOutboundCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="CampaignAlreadyExistsFault">
        <soap:fault use="literal" name="CampaignAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="IvrScriptNotFoundFault">
        <soap:fault use="literal" name="IvrScriptNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ReasonCodeNotFoundFault">
        <soap:fault use="literal" name="ReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="DialProfileNotFoundFault">
        <soap:fault use="literal" name="DialProfileNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="createReasonCode">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="ReasonCodeCountLimitExceededFault">
        <soap:fault use="literal" name="ReasonCodeCountLimitExceededFault" namespace="" />
      </fault>
    </operation>
    <operation name="createSkill">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillAlreadyExistsFault">
        <soap:fault use="literal" name="SkillAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="ObjectsCountLimitExceededFault">
        <soap:fault use="literal" name="ObjectsCountLimitExceededFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="createUser">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedOsLoginFault">
        <soap:fault use="literal" name="MissedOsLoginFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="UserHasNoRequiredRoleFault">
        <soap:fault use="literal" name="UserHasNoRequiredRoleFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="TooManyExtensionsFault">
        <soap:fault use="literal" name="TooManyExtensionsFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ExtensionAlreadyInUseFault">
        <soap:fault use="literal" name="ExtensionAlreadyInUseFault" namespace="" />
      </fault>
      <fault name="InvalidUserDataFault">
        <soap:fault use="literal" name="InvalidUserDataFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="TooManyUsersFault">
        <soap:fault use="literal" name="TooManyUsersFault" namespace="" />
      </fault>
      <fault name="UserAlreadyExistsFault">
        <soap:fault use="literal" name="UserAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="NICELicencesExceededFault">
        <soap:fault use="literal" name="NICELicencesExceededFault" namespace="" />
      </fault>
    </operation>
    <operation name="createUserProfile">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedOsLoginFault">
        <soap:fault use="literal" name="MissedOsLoginFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="NICELicencesExceededFault">
        <soap:fault use="literal" name="NICELicencesExceededFault" namespace="" />
      </fault>
    </operation>
    <operation name="createWebConnector">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ObjectAlreadyExistsFault">
        <soap:fault use="literal" name="ObjectAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteAgentGroup">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteAllFromList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteCallVariable">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteCallVariablesGroup">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ObjectInUseFault">
        <soap:fault use="literal" name="ObjectInUseFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ImportInProgressFault">
        <soap:fault use="literal" name="ImportInProgressFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="WrongCampaignStateFault">
        <soap:fault use="literal" name="WrongCampaignStateFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteCampaignProfile">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ObjectInUseFault">
        <soap:fault use="literal" name="ObjectInUseFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteContactField">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ObjectInUseFault">
        <soap:fault use="literal" name="ObjectInUseFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteFromContacts">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteFromContactsCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteFromContactsFtp">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="ScheduleOperationFailedFault">
        <soap:fault use="literal" name="ScheduleOperationFailedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ImportInProgressFault">
        <soap:fault use="literal" name="ImportInProgressFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="ScheduleNotFoundFault">
        <soap:fault use="literal" name="ScheduleNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteFromList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteFromListCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteFromListFtp">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="ScheduleOperationFailedFault">
        <soap:fault use="literal" name="ScheduleOperationFailedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ImportInProgressFault">
        <soap:fault use="literal" name="ImportInProgressFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="ScheduleNotFoundFault">
        <soap:fault use="literal" name="ScheduleNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteIVRScript">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ObjectInUseFault">
        <soap:fault use="literal" name="ObjectInUseFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ListCantBeRemovedFault">
        <soap:fault use="literal" name="ListCantBeRemovedFault" namespace="" />
      </fault>
    </operation>
    <operation name="deletePrompt">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="PromptCantBeDeletedFault">
        <soap:fault use="literal" name="PromptCantBeDeletedFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteReasonCode">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteReasonCodeByType">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteRecordFromList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="InternalImportFault">
        <soap:fault use="literal" name="InternalImportFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="ImportCancelledFault">
        <soap:fault use="literal" name="ImportCancelledFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteSkill">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="SkillCantBeDeletedFault">
        <soap:fault use="literal" name="SkillCantBeDeletedFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteUser">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="UserCantBeDeletedFault">
        <soap:fault use="literal" name="UserCantBeDeletedFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteUserProfile">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ObjectInUseFault">
        <soap:fault use="literal" name="ObjectInUseFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="deleteWebConnector">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ObjectInUseFault">
        <soap:fault use="literal" name="ObjectInUseFault" namespace="" />
      </fault>
    </operation>
    <operation name="forceStopCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="CampaignStateUpdateFault">
        <soap:fault use="literal" name="CampaignStateUpdateFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAgentAuditReport">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="LogoutReasonCodeNotFoundFault">
        <soap:fault use="literal" name="LogoutReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="NotReadyReasonCodeNotFoundFault">
        <soap:fault use="literal" name="NotReadyReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAgentAuditReportCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="LogoutReasonCodeNotFoundFault">
        <soap:fault use="literal" name="LogoutReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="NotReadyReasonCodeNotFoundFault">
        <soap:fault use="literal" name="NotReadyReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAgentGroup">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAgentGroups">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getAutodialCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCallCountersState">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="SessionClosedFault">
        <soap:fault use="literal" name="SessionClosedFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCallLogReport">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCallLogReportCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCallVariableGroups">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCallVariables">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCampaignDNISList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCampaignProfileDispositions">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCampaignProfileFilter">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCampaignProfiles">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCampaignState">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCampaigns">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getContactFields">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getContactRecords">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getCrmImportResult">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ResultIsNotReadyFault">
        <soap:fault use="literal" name="ResultIsNotReadyFault" namespace="" />
      </fault>
      <fault name="UnknownIdentifierFault">
        <soap:fault use="literal" name="UnknownIdentifierFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getDNISList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getDialingRules">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getDisposition">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getDispositions">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getDispositionsImportResult">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ResultIsNotReadyFault">
        <soap:fault use="literal" name="ResultIsNotReadyFault" namespace="" />
      </fault>
      <fault name="UnknownIdentifierFault">
        <soap:fault use="literal" name="UnknownIdentifierFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getIVRScripts">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getInboundCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getListImportResult">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ResultIsNotReadyFault">
        <soap:fault use="literal" name="ResultIsNotReadyFault" namespace="" />
      </fault>
      <fault name="UnknownIdentifierFault">
        <soap:fault use="literal" name="UnknownIdentifierFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getListsForCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getListsInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getOutboundCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getPrompt">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getReasonCode">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getReasonCodeByType">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getReportResult">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ResultIsNotReadyFault">
        <soap:fault use="literal" name="ResultIsNotReadyFault" namespace="" />
      </fault>
      <fault name="UnknownIdentifierFault">
        <soap:fault use="literal" name="UnknownIdentifierFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getReportResultCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ResultIsNotReadyFault">
        <soap:fault use="literal" name="ResultIsNotReadyFault" namespace="" />
      </fault>
      <fault name="UnknownIdentifierFault">
        <soap:fault use="literal" name="UnknownIdentifierFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getSkill">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getSkillInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getSkillVoicemailGreeting">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="FinderException">
        <soap:fault use="literal" name="FinderException" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getSkills">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getSkillsInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getUserGeneralInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getUserInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getUserProfile">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getUserProfiles">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getUserVoicemailGreeting">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="FinderException">
        <soap:fault use="literal" name="FinderException" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getUsersGeneralInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getUsersInfo">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getVCCConfiguration">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="getWebConnectors">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="InvalidRegexpPatternFault">
        <soap:fault use="literal" name="InvalidRegexpPatternFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="isImportRunning">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnknownIdentifierFault">
        <soap:fault use="literal" name="UnknownIdentifierFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="isReportRunning">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="UnknownIdentifierFault">
        <soap:fault use="literal" name="UnknownIdentifierFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyAgentGroup">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="UserHasNoRequiredRoleFault">
        <soap:fault use="literal" name="UserHasNoRequiredRoleFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyAutodialCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="IvrScriptNotFoundFault">
        <soap:fault use="literal" name="IvrScriptNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ReasonCodeNotFoundFault">
        <soap:fault use="literal" name="ReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="DialProfileNotFoundFault">
        <soap:fault use="literal" name="DialProfileNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyCallVariable">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyCallVariablesGroup">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyCampaignLists">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="ListIsNotAssignedFault">
        <soap:fault use="literal" name="ListIsNotAssignedFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyCampaignProfile">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyCampaignProfileCrmCriteria">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyCampaignProfileDispositions">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyCampaignProfileFilterOrder">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyContactField">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyDisposition">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyIVRScript">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyInboundCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="IvrScriptNotFoundFault">
        <soap:fault use="literal" name="IvrScriptNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ReasonCodeNotFoundFault">
        <soap:fault use="literal" name="ReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="DialProfileNotFoundFault">
        <soap:fault use="literal" name="DialProfileNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyOutboundCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="IvrScriptNotFoundFault">
        <soap:fault use="literal" name="IvrScriptNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ReasonCodeNotFoundFault">
        <soap:fault use="literal" name="ReasonCodeNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="DialProfileNotFoundFault">
        <soap:fault use="literal" name="DialProfileNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyPromptTTS">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="WrongPromptTypeFault">
        <soap:fault use="literal" name="WrongPromptTypeFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="TtsGenerationFailed">
        <soap:fault use="literal" name="TtsGenerationFailed" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyPromptWav">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="WrongPromptTypeFault">
        <soap:fault use="literal" name="WrongPromptTypeFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="WavFileUploadFailedFault">
        <soap:fault use="literal" name="WavFileUploadFailedFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyPromptWavInline">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="WrongPromptTypeFault">
        <soap:fault use="literal" name="WrongPromptTypeFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="WavFileUploadFailedFault">
        <soap:fault use="literal" name="WavFileUploadFailedFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="PromptNotFoundFault">
        <soap:fault use="literal" name="PromptNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyReasonCode">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifySkill">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyUser">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="CantModifyObjectFault">
        <soap:fault use="literal" name="CantModifyObjectFault" namespace="" />
      </fault>
      <fault name="MissedOsLoginFault">
        <soap:fault use="literal" name="MissedOsLoginFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ExtensionAlreadyInUseFault">
        <soap:fault use="literal" name="ExtensionAlreadyInUseFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="NICELicencesExceededFault">
        <soap:fault use="literal" name="NICELicencesExceededFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyUserCannedReports">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="CantModifyObjectFault">
        <soap:fault use="literal" name="CantModifyObjectFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="UserHasNoRequiredRoleFault">
        <soap:fault use="literal" name="UserHasNoRequiredRoleFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ExtensionAlreadyInUseFault">
        <soap:fault use="literal" name="ExtensionAlreadyInUseFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyUserProfile">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedOsLoginFault">
        <soap:fault use="literal" name="MissedOsLoginFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="NICELicencesExceededFault">
        <soap:fault use="literal" name="NICELicencesExceededFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyUserProfileSkills">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="NICELicencesExceededFault">
        <soap:fault use="literal" name="NICELicencesExceededFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyUserProfileUserList">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ExecutionRestrictionFault">
        <soap:fault use="literal" name="ExecutionRestrictionFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedOsLoginFault">
        <soap:fault use="literal" name="MissedOsLoginFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="NICELicencesExceededFault">
        <soap:fault use="literal" name="NICELicencesExceededFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyVCCConfiguration">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="modifyWebConnector">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeDNISFromCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="DNISNotFoundFault">
        <soap:fault use="literal" name="DNISNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="DNISIsNotAssignedFault">
        <soap:fault use="literal" name="DNISIsNotAssignedFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="WrongCampaignStateFault">
        <soap:fault use="literal" name="WrongCampaignStateFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeDisposition">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeDispositionsFromCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="DispositionIsNotAssisgnedFault">
        <soap:fault use="literal" name="DispositionIsNotAssisgnedFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ObjectInUseFault">
        <soap:fault use="literal" name="ObjectInUseFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeListsFromCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="ListIsNotAssignedFault">
        <soap:fault use="literal" name="ListIsNotAssignedFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ListNotFoundFault">
        <soap:fault use="literal" name="ListNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeNumbersFromDnc">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="TooManyItemsFault">
        <soap:fault use="literal" name="TooManyItemsFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="removeSkillsFromCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="SkillIsNotAssignedFault">
        <soap:fault use="literal" name="SkillIsNotAssignedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="renameCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="CampaignAlreadyExistsFault">
        <soap:fault use="literal" name="CampaignAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="WrongCampaignStateFault">
        <soap:fault use="literal" name="WrongCampaignStateFault" namespace="" />
      </fault>
    </operation>
    <operation name="renameDisposition">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="DispositionAlreadyExistsFault">
        <soap:fault use="literal" name="DispositionAlreadyExistsFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="DispositionNotFoundFault">
        <soap:fault use="literal" name="DispositionNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="resetCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="CampaignStateUpdateFault">
        <soap:fault use="literal" name="CampaignStateUpdateFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="resetCampaignDispositions">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="InvalidDateRangeFault">
        <soap:fault use="literal" name="InvalidDateRangeFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="WrongCampaignStateFault">
        <soap:fault use="literal" name="WrongCampaignStateFault" namespace="" />
      </fault>
    </operation>
    <operation name="resetListPosition">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="runReport">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ReportNotFoundFault">
        <soap:fault use="literal" name="ReportNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="setDefaultIVRSchedule">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="IvrScriptNotFoundFault">
        <soap:fault use="literal" name="IvrScriptNotFoundFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="setDialingRules">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="setSkillVoicemailGreeting">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="WavFileUploadFailedFault">
        <soap:fault use="literal" name="WavFileUploadFailedFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ParseException">
        <soap:fault use="literal" name="ParseException" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="setUserVoicemailGreeting">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ObjectNotFoundFault">
        <soap:fault use="literal" name="ObjectNotFoundFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="WavFileUploadFailedFault">
        <soap:fault use="literal" name="WavFileUploadFailedFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ParseException">
        <soap:fault use="literal" name="ParseException" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="startCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="CampaignStateUpdateFault">
        <soap:fault use="literal" name="CampaignStateUpdateFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="stopCampaign">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="CampaignStateUpdateFault">
        <soap:fault use="literal" name="CampaignStateUpdateFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateContacts">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateContactsCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateContactsFtp">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="ScheduleOperationFailedFault">
        <soap:fault use="literal" name="ScheduleOperationFailedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ImportInProgressFault">
        <soap:fault use="literal" name="ImportInProgressFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="ScheduleNotFoundFault">
        <soap:fault use="literal" name="ScheduleNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateCrmRecord">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="InternalImportFault">
        <soap:fault use="literal" name="InternalImportFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="ImportCancelledFault">
        <soap:fault use="literal" name="ImportCancelledFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateDispositions">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="InvalidImportDataFault">
        <soap:fault use="literal" name="InvalidImportDataFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateDispositionsCsv">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="ImportSizeLimitExceededFault">
        <soap:fault use="literal" name="ImportSizeLimitExceededFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="WrongCampaignTypeFault">
        <soap:fault use="literal" name="WrongCampaignTypeFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="updateDispositionsFtp">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="CampaignNotFoundFault">
        <soap:fault use="literal" name="CampaignNotFoundFault" namespace="" />
      </fault>
      <fault name="CrmFieldNotFoundFault">
        <soap:fault use="literal" name="CrmFieldNotFoundFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="ScheduleOperationFailedFault">
        <soap:fault use="literal" name="ScheduleOperationFailedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="ImportInProgressFault">
        <soap:fault use="literal" name="ImportInProgressFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="ScheduleNotFoundFault">
        <soap:fault use="literal" name="ScheduleNotFoundFault" namespace="" />
      </fault>
    </operation>
    <operation name="userSkillAdd">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
      <fault name="UserAlreadyHasSkillFault">
        <soap:fault use="literal" name="UserAlreadyHasSkillFault" namespace="" />
      </fault>
    </operation>
    <operation name="userSkillModify">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserDoesntHaveSkillFault">
        <soap:fault use="literal" name="UserDoesntHaveSkillFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
    <operation name="userSkillRemove">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="SkillNotFoundFault">
        <soap:fault use="literal" name="SkillNotFoundFault" namespace="" />
      </fault>
      <fault name="ServerFault">
        <soap:fault use="literal" name="ServerFault" namespace="" />
      </fault>
      <fault name="MissedArgumentFault">
        <soap:fault use="literal" name="MissedArgumentFault" namespace="" />
      </fault>
      <fault name="IncorrectArgumentFault">
        <soap:fault use="literal" name="IncorrectArgumentFault" namespace="" />
      </fault>
      <fault name="AdminSessionClosedFault">
        <soap:fault use="literal" name="AdminSessionClosedFault" namespace="" />
      </fault>
      <fault name="InvalidAccountFault">
        <soap:fault use="literal" name="InvalidAccountFault" namespace="" />
      </fault>
      <fault name="UserDoesntHaveSkillFault">
        <soap:fault use="literal" name="UserDoesntHaveSkillFault" namespace="" />
      </fault>
      <fault name="UserAlreadyLoggedInFault">
        <soap:fault use="literal" name="UserAlreadyLoggedInFault" namespace="" />
      </fault>
      <fault name="ConcurrentModificationFault">
        <soap:fault use="literal" name="ConcurrentModificationFault" namespace="" />
      </fault>
      <fault name="AccessDisallowedFault">
        <soap:fault use="literal" name="AccessDisallowedFault" namespace="" />
      </fault>
      <fault name="UserNotFoundFault">
        <soap:fault use="literal" name="UserNotFoundFault" namespace="" />
      </fault>
      <fault name="OperationsLimitExceededFault">
        <soap:fault use="literal" name="OperationsLimitExceededFault" namespace="" />
      </fault>
      <fault name="ServiceUnavailableFault">
        <soap:fault use="literal" name="ServiceUnavailableFault" namespace="" />
      </fault>
    </operation>
  </binding>
  <service name="WsAdminServiceV2">
    <port name="WsAdminPortV2" binding="tns:WsAdminV2Binding">
      <soap:address location="https://api.five9.com/wsadmin/v2/AdminWebService" />
    </port>
  </service>
</definitions>